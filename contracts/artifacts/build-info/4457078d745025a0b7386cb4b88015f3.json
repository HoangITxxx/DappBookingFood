{
	"id": "4457078d745025a0b7386cb4b88015f3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/RestaurantManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.30;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\n\r\ncontract RestaurantManager is Ownable {\r\n    using Address for address payable;\r\n\r\n    enum Role { Customer, Staff, Admin }\r\n\r\n    uint128 private nextRestaurantId = 1;\r\n    uint8 public serviceFeePercentage = 5;\r\n    uint8 public constant MAX_SERVICE_FEE = 20;\r\n\r\n    mapping(address => Role) public roles;\r\n    mapping(address => uint128) public pendingWithdrawals;\r\n    mapping(address => uint128[]) public ownerRestaurants;\r\n    mapping(uint128 => address) public restaurantOwners;\r\n    mapping(address => uint128) public staffRestaurant;\r\n\r\n    event RestaurantRegistered(uint128 restaurantId, address owner);\r\n    event StaffAssigned(address staff, uint128 restaurantId);\r\n    event RoleAssigned(address user, Role role);\r\n    event ServiceFeeUpdated(uint8 newPercentage);\r\n    event PaymentReleased(address recipient, uint128 amount);\r\n\r\n    modifier onlyAdmin() {\r\n        require(roles[msg.sender] == Role.Admin, \"Unauthorized: Admin only\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyRestaurantOwner(uint128 restaurantId) {\r\n        require(restaurantOwners[restaurantId] == msg.sender, \"Not restaurant owner\");\r\n        _;\r\n    }\r\n\r\n    constructor() Ownable(msg.sender) {\r\n        roles[msg.sender] = Role.Admin;\r\n    }\r\n\r\n    function registerRestaurant() external returns (uint128) {\r\n        uint128 restaurantId = nextRestaurantId;\r\n        restaurantOwners[restaurantId] = msg.sender;\r\n        ownerRestaurants[msg.sender].push(restaurantId);\r\n        emit RestaurantRegistered(restaurantId, msg.sender);\r\n        nextRestaurantId++;\r\n        return restaurantId;\r\n    }\r\n\r\n    function assignStaff(address staff, uint128 restaurantId) \r\n        external \r\n        onlyRestaurantOwner(restaurantId) \r\n    {\r\n        require(staff != address(0), \"Invalid address\");\r\n        require(restaurantOwners[restaurantId] != address(0), \"Restaurant does not exist\");\r\n        roles[staff] = Role.Staff;\r\n        staffRestaurant[staff] = restaurantId;\r\n        emit StaffAssigned(staff, restaurantId);\r\n    }\r\n\r\n    function assignRole(address user, Role role) external onlyAdmin {\r\n        require(user != address(0), \"Invalid address\");\r\n        roles[user] = role;\r\n        if (role != Role.Staff) {\r\n            delete staffRestaurant[user];\r\n        }\r\n        emit RoleAssigned(user, role);\r\n    }\r\n\r\n    function setServiceFeePercentage(uint8 percentage) external onlyAdmin {\r\n        require(percentage <= MAX_SERVICE_FEE, \"Service fee too high\");\r\n        serviceFeePercentage = percentage;\r\n        emit ServiceFeeUpdated(percentage);\r\n    }\r\n\r\n    function withdrawServiceFees() external onlyAdmin {\r\n        uint128 balance = pendingWithdrawals[owner()];\r\n        require(balance > 0, \"No funds available\");\r\n        pendingWithdrawals[owner()] = 0;\r\n        payable(owner()).sendValue(balance);\r\n        emit PaymentReleased(owner(), balance);\r\n    }\r\n    function addPendingWithdrawal(address recipient, uint128 amount) external {\r\n        require(msg.sender == owner() || roles[msg.sender] == Role.Admin, \"Unauthorized\");\r\n        pendingWithdrawals[recipient] += amount;\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220c55deb0674eacac34db943a4360b1cebf380ea8b292180f7a11710125472ef5064736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220c55deb0674eacac34db943a4360b1cebf380ea8b292180f7a11710125472ef5064736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 TSTORE 0xEB MOD PUSH21 0xEACAC34DB943A4360B1CEBF380EA8B292180F7A117 LT SLT SLOAD PUSH19 0xEF5064736F6C634300081E0033000000000000 ",
							"sourceMap": "233:5815:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;233:5815:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220c55deb0674eacac34db943a4360b1cebf380ea8b292180f7a11710125472ef5064736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 TSTORE 0xEB MOD PUSH21 0xEACAC34DB943A4360B1CEBF380EA8B292180F7A117 LT SLT SLOAD PUSH19 0xEF5064736F6C634300081E0033000000000000 ",
							"sourceMap": "233:5815:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c55deb0674eacac34db943a4360b1cebf380ea8b292180f7a11710125472ef5064736f6c634300081e0033",
									".code": [
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"contracts/RestaurantManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212201e832bc7389b9b61623663bf55ec6dfd56cbf5e8534cdc6bec8916c83a4e082d64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212201e832bc7389b9b61623663bf55ec6dfd56cbf5e8534cdc6bec8916c83a4e082d64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E DUP4 0x2B 0xC7 CODESIZE SWAP12 SWAP12 PUSH2 0x6236 PUSH4 0xBF55EC6D REVERT JUMP 0xCB CREATE2 0xE8 MSTORE8 0x4C 0xDC PUSH12 0xEC8916C83A4E082D64736F6C PUSH4 0x4300081E STOP CALLER ",
							"sourceMap": "411:484:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;411:484:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212201e832bc7389b9b61623663bf55ec6dfd56cbf5e8534cdc6bec8916c83a4e082d64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E DUP4 0x2B 0xC7 CODESIZE SWAP12 SWAP12 PUSH2 0x6236 PUSH4 0xBF55EC6D REVERT JUMP 0xCB CREATE2 0xE8 MSTORE8 0x4C 0xDC PUSH12 0xEC8916C83A4E082D64736F6C PUSH4 0x4300081E STOP CALLER ",
							"sourceMap": "411:484:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201e832bc7389b9b61623663bf55ec6dfd56cbf5e8534cdc6bec8916c83a4e082d64736f6c634300081e0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"contracts/RestaurantManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/RestaurantManager.sol": {
				"RestaurantManager": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "PaymentReleased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "restaurantId",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "RestaurantRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "enum RestaurantManager.Role",
									"name": "role",
									"type": "uint8"
								}
							],
							"name": "RoleAssigned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "newPercentage",
									"type": "uint8"
								}
							],
							"name": "ServiceFeeUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staff",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "restaurantId",
									"type": "uint128"
								}
							],
							"name": "StaffAssigned",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MAX_SERVICE_FEE",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "addPendingWithdrawal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "enum RestaurantManager.Role",
									"name": "role",
									"type": "uint8"
								}
							],
							"name": "assignRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "staff",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "restaurantId",
									"type": "uint128"
								}
							],
							"name": "assignStaff",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "ownerRestaurants",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "pendingWithdrawals",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "registerRestaurant",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"name": "restaurantOwners",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "roles",
							"outputs": [
								{
									"internalType": "enum RestaurantManager.Role",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "serviceFeePercentage",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "percentage",
									"type": "uint8"
								}
							],
							"name": "setServiceFeePercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "staffRestaurant",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawServiceFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/RestaurantManager.sol\":170:3269  contract RestaurantManager is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/RestaurantManager.sol\":336:337  1 */\n  0x01\n    /* \"contracts/RestaurantManager.sol\":301:337  uint128 private nextRestaurantId = 1 */\n  dup1\n  sload\n  not(sub(shl(0x88, 0x01), 0x01))\n    /* \"contracts/RestaurantManager.sol\":344:381  uint8 public serviceFeePercentage = 5 */\n  and\n  0x0500000000000000000000000000000001\n  or\n  swap1\n  sstore\n    /* \"contracts/RestaurantManager.sol\":1314:1397  constructor() Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"contracts/RestaurantManager.sol\":1336:1346  msg.sender */\n  caller\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_5\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":160:211   */\n  mstore\n    /* \"#utility.yul\":133:151   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/RestaurantManager.sol\":1365:1375  msg.sender */\n  caller\n    /* \"contracts/RestaurantManager.sol\":1359:1376  roles[msg.sender] */\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"contracts/RestaurantManager.sol\":1379:1389  Role.Admin */\n  0x02\n    /* \"contracts/RestaurantManager.sol\":1359:1376  roles[msg.sender] */\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n    /* \"contracts/RestaurantManager.sol\":1359:1389  roles[msg.sender] = Role.Admin */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/RestaurantManager.sol\":170:3269  contract RestaurantManager is Ownable {... */\n  jump(tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":222:349   */\ntag_16:\n    /* \"contracts/RestaurantManager.sol\":170:3269  contract RestaurantManager is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/RestaurantManager.sol\":170:3269  contract RestaurantManager is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xae9a4655\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf3f43703\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf7937282\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xfa20fca7\n      eq\n      tag_18\n      jumpi\n      revert(0x00, 0x00)\n    tag_20:\n      dup1\n      0xae9a4655\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xd72e481d\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xd76d571a\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xe28d7a18\n      eq\n      tag_14\n      jumpi\n      revert(0x00, 0x00)\n    tag_19:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x99374642\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa0e31ec4\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xabca88f0\n      eq\n      tag_10\n      jumpi\n      revert(0x00, 0x00)\n    tag_21:\n      dup1\n      0x14d90e1b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x603ef649\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x630a195b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/RestaurantManager.sol\":388:430  uint8 public constant MAX_SERVICE_FEE = 20 */\n    tag_3:\n      tag_22\n        /* \"contracts/RestaurantManager.sol\":428:430  20 */\n      0x14\n        /* \"contracts/RestaurantManager.sol\":388:430  uint8 public constant MAX_SERVICE_FEE = 20 */\n      dup2\n      jump\n    tag_22:\n      mload(0x40)\n        /* \"#utility.yul\":186:190   */\n      0xff\n        /* \"#utility.yul\":174:191   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":156:192   */\n      dup2\n      mstore\n        /* \"#utility.yul\":144:146   */\n      0x20\n        /* \"#utility.yul\":129:147   */\n      add\n        /* \"contracts/RestaurantManager.sol\":388:430  uint8 public constant MAX_SERVICE_FEE = 20 */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/RestaurantManager.sol\":344:381  uint8 public serviceFeePercentage = 5 */\n    tag_4:\n      sload(0x01)\n      tag_22\n      swap1\n      shl(0x80, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/RestaurantManager.sol\":2189:2476  function assignRole(address user, Role role) external onlyAdmin {... */\n    tag_5:\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_29\n      tag_34\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_7:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_35:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":888:920   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":870:921   */\n      dup2\n      mstore\n        /* \"#utility.yul\":858:860   */\n      0x20\n        /* \"#utility.yul\":843:861   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_24\n        /* \"#utility.yul\":724:927   */\n      jump\n        /* \"contracts/RestaurantManager.sol\":439:476  mapping(address => Role) public roles */\n    tag_8:\n      tag_39\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      mstore(0x20, 0x02)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_39:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n        /* \"contracts/RestaurantManager.sol\":3042:3266  function addPendingWithdrawal(address recipient, uint128 amount) external {... */\n    tag_9:\n      tag_29\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n        /* \"contracts/RestaurantManager.sol\":603:654  mapping(uint128 => address) public restaurantOwners */\n    tag_10:\n      tag_35\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/RestaurantManager.sol\":1761:2181  function assignStaff(address staff, uint128 restaurantId) ... */\n    tag_11:\n      tag_29\n      tag_55\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"contracts/RestaurantManager.sol\":2732:3036  function withdrawServiceFees() external onlyAdmin {... */\n    tag_12:\n      tag_29\n      tag_58\n      jump\t// in\n        /* \"contracts/RestaurantManager.sol\":543:596  mapping(address => uint128[]) public ownerRestaurants */\n    tag_13:\n      tag_59\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":2766:2813   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2748:2814   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2736:2738   */\n      0x20\n        /* \"#utility.yul\":2721:2739   */\n      add\n        /* \"contracts/RestaurantManager.sol\":543:596  mapping(address => uint128[]) public ownerRestaurants */\n      tag_24\n        /* \"#utility.yul\":2602:2820   */\n      jump\n        /* \"contracts/RestaurantManager.sol\":661:711  mapping(address => uint128) public staffRestaurant */\n    tag_14:\n      tag_59\n      tag_66\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_66:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      tag_29\n      tag_70\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n        /* \"contracts/RestaurantManager.sol\":483:536  mapping(address => uint128) public pendingWithdrawals */\n    tag_16:\n      tag_59\n      tag_73\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_73:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/RestaurantManager.sol\":2484:2724  function setServiceFeePercentage(uint8 percentage) external onlyAdmin {... */\n    tag_17:\n      tag_29\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n        /* \"contracts/RestaurantManager.sol\":1405:1753  function registerRestaurant() external returns (uint128) {... */\n    tag_18:\n      tag_59\n      tag_81\n      jump\t// in\n        /* \"contracts/RestaurantManager.sol\":2189:2476  function assignRole(address user, Role role) external onlyAdmin {... */\n    tag_32:\n        /* \"contracts/RestaurantManager.sol\":1065:1075  msg.sender */\n      caller\n        /* \"contracts/RestaurantManager.sol\":1059:1076  roles[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/RestaurantManager.sol\":1080:1090  Role.Admin */\n      0x02\n        /* \"contracts/RestaurantManager.sol\":1059:1076  roles[msg.sender] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/RestaurantManager.sol\":1059:1090  roles[msg.sender] == Role.Admin */\n      dup2\n      dup2\n      gt\n      iszero\n      tag_88\n      jumpi\n      tag_88\n      tag_86\n      jump\t// in\n    tag_88:\n      eq\n        /* \"contracts/RestaurantManager.sol\":1051:1119  require(roles[msg.sender] == Role.Admin, \"Unauthorized: Admin only\") */\n      tag_89\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_89:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/RestaurantManager.sol\":2272:2290  user != address(0) */\n      dup3\n      and\n        /* \"contracts/RestaurantManager.sol\":2264:2310  require(user != address(0), \"Invalid address\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3654:3656   */\n      0x20\n        /* \"contracts/RestaurantManager.sol\":2264:2310  require(user != address(0), \"Invalid address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3636:3657   */\n      mstore\n        /* \"#utility.yul\":3693:3695   */\n      0x0f\n        /* \"#utility.yul\":3673:3691   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3666:3696   */\n      mstore\n      shl(0x88, 0x496e76616c69642061646472657373)\n        /* \"#utility.yul\":3712:3730   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3705:3750   */\n      mstore\n        /* \"#utility.yul\":3767:3785   */\n      0x64\n      add\n        /* \"contracts/RestaurantManager.sol\":2264:2310  require(user != address(0), \"Invalid address\") */\n      tag_90\n        /* \"#utility.yul\":3452:3791   */\n      jump\n        /* \"contracts/RestaurantManager.sol\":2264:2310  require(user != address(0), \"Invalid address\") */\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/RestaurantManager.sol\":2321:2332  roles[user] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/RestaurantManager.sol\":2321:2326  roles */\n      0x02\n        /* \"contracts/RestaurantManager.sol\":2321:2332  roles[user] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/RestaurantManager.sol\":2321:2339  roles[user] = role */\n      dup1\n      sload\n        /* \"contracts/RestaurantManager.sol\":2335:2339  role */\n      dup4\n      swap3\n      not(0xff)\n        /* \"contracts/RestaurantManager.sol\":2321:2339  roles[user] = role */\n      swap1\n      swap2\n      and\n      swap1\n      0x01\n      swap1\n        /* \"contracts/RestaurantManager.sol\":2335:2339  role */\n      dup5\n      swap1\n        /* \"contracts/RestaurantManager.sol\":2321:2339  roles[user] = role */\n      dup2\n      gt\n      iszero\n      tag_97\n      jumpi\n      tag_97\n      tag_86\n      jump\t// in\n    tag_97:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/RestaurantManager.sol\":2362:2372  Role.Staff */\n      0x01\n        /* \"contracts/RestaurantManager.sol\":2354:2358  role */\n      dup2\n        /* \"contracts/RestaurantManager.sol\":2354:2372  role != Role.Staff */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_101\n      jumpi\n      tag_101\n      tag_86\n      jump\t// in\n    tag_101:\n      eq\n        /* \"contracts/RestaurantManager.sol\":2350:2429  if (role != Role.Staff) {... */\n      tag_102\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/RestaurantManager.sol\":2396:2417  staffRestaurant[user] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/RestaurantManager.sol\":2396:2411  staffRestaurant */\n      0x06\n        /* \"contracts/RestaurantManager.sol\":2396:2417  staffRestaurant[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/RestaurantManager.sol\":2389:2417  delete staffRestaurant[user] */\n      dup1\n      sload\n      not(sub(shl(0x80, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/RestaurantManager.sol\":2350:2429  if (role != Role.Staff) {... */\n    tag_102:\n        /* \"contracts/RestaurantManager.sol\":2444:2468  RoleAssigned(user, role) */\n      0x4ac36fa53f167ceb85964be512e01de2a3b8bdb9862f917da079deeeff689b38\n        /* \"contracts/RestaurantManager.sol\":2457:2461  user */\n      dup3\n        /* \"contracts/RestaurantManager.sol\":2463:2467  role */\n      dup3\n        /* \"contracts/RestaurantManager.sol\":2444:2468  RoleAssigned(user, role) */\n      mload(0x40)\n      tag_103\n      swap3\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/RestaurantManager.sol\":2189:2476  function assignRole(address user, Role role) external onlyAdmin {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/RestaurantManager.sol\":3042:3266  function addPendingWithdrawal(address recipient, uint128 amount) external {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/RestaurantManager.sol\":3135:3145  msg.sender */\n      caller\n        /* \"contracts/RestaurantManager.sol\":3135:3156  msg.sender == owner() */\n      eq\n      dup1\n        /* \"contracts/RestaurantManager.sol\":3135:3191  msg.sender == owner() || roles[msg.sender] == Role.Admin */\n      tag_114\n      jumpi\n      pop\n        /* \"contracts/RestaurantManager.sol\":3166:3176  msg.sender */\n      caller\n        /* \"contracts/RestaurantManager.sol\":3160:3177  roles[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/RestaurantManager.sol\":3181:3191  Role.Admin */\n      0x02\n        /* \"contracts/RestaurantManager.sol\":3160:3177  roles[msg.sender] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/RestaurantManager.sol\":3160:3191  roles[msg.sender] == Role.Admin */\n      dup2\n      dup2\n      gt\n      iszero\n      tag_118\n      jumpi\n      tag_118\n      tag_86\n      jump\t// in\n    tag_118:\n      eq\n        /* \"contracts/RestaurantManager.sol\":3135:3191  msg.sender == owner() || roles[msg.sender] == Role.Admin */\n    tag_114:\n        /* \"contracts/RestaurantManager.sol\":3127:3208  require(msg.sender == owner() || roles[msg.sender] == Role.Admin, \"Unauthorized\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4297:4299   */\n      0x20\n        /* \"contracts/RestaurantManager.sol\":3127:3208  require(msg.sender == owner() || roles[msg.sender] == Role.Admin, \"Unauthorized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4279:4300   */\n      mstore\n        /* \"#utility.yul\":4336:4338   */\n      0x0c\n        /* \"#utility.yul\":4316:4334   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4309:4339   */\n      mstore\n      shl(0xa2, 0x155b985d5d1a1bdc9a5e9959)\n        /* \"#utility.yul\":4355:4373   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4348:4390   */\n      mstore\n        /* \"#utility.yul\":4407:4425   */\n      0x64\n      add\n        /* \"contracts/RestaurantManager.sol\":3127:3208  require(msg.sender == owner() || roles[msg.sender] == Role.Admin, \"Unauthorized\") */\n      tag_90\n        /* \"#utility.yul\":4095:4431   */\n      jump\n        /* \"contracts/RestaurantManager.sol\":3127:3208  require(msg.sender == owner() || roles[msg.sender] == Role.Admin, \"Unauthorized\") */\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/RestaurantManager.sol\":3219:3248  pendingWithdrawals[recipient] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/RestaurantManager.sol\":3219:3237  pendingWithdrawals */\n      0x03\n        /* \"contracts/RestaurantManager.sol\":3219:3248  pendingWithdrawals[recipient] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/RestaurantManager.sol\":3219:3258  pendingWithdrawals[recipient] += amount */\n      dup1\n      sload\n        /* \"contracts/RestaurantManager.sol\":3252:3258  amount */\n      dup4\n      swap3\n        /* \"contracts/RestaurantManager.sol\":3219:3248  pendingWithdrawals[recipient] */\n      swap1\n        /* \"contracts/RestaurantManager.sol\":3219:3258  pendingWithdrawals[recipient] += amount */\n      tag_122\n      swap1\n        /* \"contracts/RestaurantManager.sol\":3252:3258  amount */\n      dup5\n      swap1\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"contracts/RestaurantManager.sol\":3219:3258  pendingWithdrawals[recipient] += amount */\n      and\n      tag_123\n      jump\t// in\n    tag_122:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0x80, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/RestaurantManager.sol\":3042:3266  function addPendingWithdrawal(address recipient, uint128 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/RestaurantManager.sol\":1761:2181  function assignStaff(address staff, uint128 restaurantId) ... */\n    tag_56:\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"contracts/RestaurantManager.sol\":1217:1247  restaurantOwners[restaurantId] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/RestaurantManager.sol\":1217:1233  restaurantOwners */\n      0x05\n        /* \"contracts/RestaurantManager.sol\":1217:1247  restaurantOwners[restaurantId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/RestaurantManager.sol\":1868:1880  restaurantId */\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/RestaurantManager.sol\":1217:1247  restaurantOwners[restaurantId] */\n      and\n        /* \"contracts/RestaurantManager.sol\":1251:1261  msg.sender */\n      caller\n        /* \"contracts/RestaurantManager.sol\":1217:1261  restaurantOwners[restaurantId] == msg.sender */\n      eq\n        /* \"contracts/RestaurantManager.sol\":1209:1286  require(restaurantOwners[restaurantId] == msg.sender, \"Not restaurant owner\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5015:5017   */\n      0x20\n        /* \"contracts/RestaurantManager.sol\":1209:1286  require(restaurantOwners[restaurantId] == msg.sender, \"Not restaurant owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4997:5018   */\n      mstore\n        /* \"#utility.yul\":5054:5056   */\n      0x14\n        /* \"#utility.yul\":5034:5052   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5027:5057   */\n      mstore\n      shl(0x61, 0x2737ba103932b9ba30bab930b73a1037bbb732b9)\n        /* \"#utility.yul\":5073:5091   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5066:5116   */\n      mstore\n        /* \"#utility.yul\":5133:5151   */\n      0x64\n      add\n        /* \"contracts/RestaurantManager.sol\":1209:1286  require(restaurantOwners[restaurantId] == msg.sender, \"Not restaurant owner\") */\n      tag_90\n        /* \"#utility.yul\":4813:5157   */\n      jump\n        /* \"contracts/RestaurantManager.sol\":1209:1286  require(restaurantOwners[restaurantId] == msg.sender, \"Not restaurant owner\") */\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/RestaurantManager.sol\":1907:1926  staff != address(0) */\n      dup4\n      and\n        /* \"contracts/RestaurantManager.sol\":1899:1946  require(staff != address(0), \"Invalid address\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3654:3656   */\n      0x20\n        /* \"contracts/RestaurantManager.sol\":1899:1946  require(staff != address(0), \"Invalid address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3636:3657   */\n      mstore\n        /* \"#utility.yul\":3693:3695   */\n      0x0f\n        /* \"#utility.yul\":3673:3691   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3666:3696   */\n      mstore\n      shl(0x88, 0x496e76616c69642061646472657373)\n        /* \"#utility.yul\":3712:3730   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3705:3750   */\n      mstore\n        /* \"#utility.yul\":3767:3785   */\n      0x64\n      add\n        /* \"contracts/RestaurantManager.sol\":1899:1946  require(staff != address(0), \"Invalid address\") */\n      tag_90\n        /* \"#utility.yul\":3452:3791   */\n      jump\n        /* \"contracts/RestaurantManager.sol\":1899:1946  require(staff != address(0), \"Invalid address\") */\n    tag_129:\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"contracts/RestaurantManager.sol\":1965:1995  restaurantOwners[restaurantId] */\n      dup3\n      and\n        /* \"contracts/RestaurantManager.sol\":2007:2008  0 */\n      0x00\n        /* \"contracts/RestaurantManager.sol\":1965:1995  restaurantOwners[restaurantId] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/RestaurantManager.sol\":1965:1981  restaurantOwners */\n      0x05\n        /* \"contracts/RestaurantManager.sol\":1965:1995  restaurantOwners[restaurantId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/RestaurantManager.sol\":1957:2039  require(restaurantOwners[restaurantId] != address(0), \"Restaurant does not exist\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5364:5366   */\n      0x20\n        /* \"contracts/RestaurantManager.sol\":1957:2039  require(restaurantOwners[restaurantId] != address(0), \"Restaurant does not exist\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5346:5367   */\n      mstore\n        /* \"#utility.yul\":5403:5405   */\n      0x19\n        /* \"#utility.yul\":5383:5401   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5376:5406   */\n      mstore\n        /* \"#utility.yul\":5442:5469   */\n      0x52657374617572616e7420646f6573206e6f7420657869737400000000000000\n        /* \"#utility.yul\":5422:5440   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5415:5470   */\n      mstore\n        /* \"#utility.yul\":5487:5505   */\n      0x64\n      add\n        /* \"contracts/RestaurantManager.sol\":1957:2039  require(restaurantOwners[restaurantId] != address(0), \"Restaurant does not exist\") */\n      tag_90\n        /* \"#utility.yul\":5162:5511   */\n      jump\n        /* \"contracts/RestaurantManager.sol\":1957:2039  require(restaurantOwners[restaurantId] != address(0), \"Restaurant does not exist\") */\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/RestaurantManager.sol\":2050:2062  roles[staff] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/RestaurantManager.sol\":2050:2055  roles */\n      0x02\n        /* \"contracts/RestaurantManager.sol\":2050:2062  roles[staff] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/RestaurantManager.sol\":2050:2075  roles[staff] = Role.Staff */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/RestaurantManager.sol\":2065:2075  Role.Staff */\n      0x01\n        /* \"contracts/RestaurantManager.sol\":2050:2075  roles[staff] = Role.Staff */\n      or\n      swap1\n      sstore\n        /* \"contracts/RestaurantManager.sol\":2086:2101  staffRestaurant */\n      0x06\n        /* \"contracts/RestaurantManager.sol\":2086:2108  staffRestaurant[staff] */\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/RestaurantManager.sol\":2086:2123  staffRestaurant[staff] = restaurantId */\n      dup1\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n      dup8\n      and\n      not(sub(shl(0x80, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/RestaurantManager.sol\":2139:2173  StaffAssigned(staff, restaurantId) */\n      dup3\n      mload\n        /* \"#utility.yul\":5690:5741   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":5757:5775   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":5750:5825   */\n      mstore\n        /* \"contracts/RestaurantManager.sol\":2139:2173  StaffAssigned(staff, restaurantId) */\n      0x69a85d8f30649b59eeb2b4393ea9eb9c9ed001f6974226d94a7fa2dfd562f15b\n      swap2\n        /* \"#utility.yul\":5663:5681   */\n      add\n        /* \"contracts/RestaurantManager.sol\":2139:2173  StaffAssigned(staff, restaurantId) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/RestaurantManager.sol\":1761:2181  function assignStaff(address staff, uint128 restaurantId) ... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/RestaurantManager.sol\":2732:3036  function withdrawServiceFees() external onlyAdmin {... */\n    tag_58:\n        /* \"contracts/RestaurantManager.sol\":1065:1075  msg.sender */\n      caller\n        /* \"contracts/RestaurantManager.sol\":1059:1076  roles[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/RestaurantManager.sol\":1080:1090  Role.Admin */\n      0x02\n        /* \"contracts/RestaurantManager.sol\":1059:1076  roles[msg.sender] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/RestaurantManager.sol\":1059:1090  roles[msg.sender] == Role.Admin */\n      dup2\n      dup2\n      gt\n      iszero\n      tag_142\n      jumpi\n      tag_142\n      tag_86\n      jump\t// in\n    tag_142:\n      eq\n        /* \"contracts/RestaurantManager.sol\":1051:1119  require(roles[msg.sender] == Role.Admin, \"Unauthorized: Admin only\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_143:\n        /* \"contracts/RestaurantManager.sol\":2793:2808  uint128 balance */\n      0x00\n        /* \"contracts/RestaurantManager.sol\":2811:2829  pendingWithdrawals */\n      0x03\n        /* \"contracts/RestaurantManager.sol\":2811:2838  pendingWithdrawals[owner()] */\n      0x00\n        /* \"contracts/RestaurantManager.sol\":2830:2837  owner() */\n      tag_146\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/RestaurantManager.sol\":2830:2837  owner() */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/RestaurantManager.sol\":2811:2838  pendingWithdrawals[owner()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      swap1\n      pop\n        /* \"contracts/RestaurantManager.sol\":2857:2868  balance > 0 */\n      dup1\n        /* \"contracts/RestaurantManager.sol\":2849:2891  require(balance > 0, \"No funds available\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6038:6040   */\n      0x20\n        /* \"contracts/RestaurantManager.sol\":2849:2891  require(balance > 0, \"No funds available\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6020:6041   */\n      mstore\n        /* \"#utility.yul\":6077:6079   */\n      0x12\n        /* \"#utility.yul\":6057:6075   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6050:6080   */\n      mstore\n      shl(0x70, 0x4e6f2066756e647320617661696c61626c65)\n        /* \"#utility.yul\":6096:6114   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6089:6137   */\n      mstore\n        /* \"#utility.yul\":6154:6172   */\n      0x64\n      add\n        /* \"contracts/RestaurantManager.sol\":2849:2891  require(balance > 0, \"No funds available\") */\n      tag_90\n        /* \"#utility.yul\":5836:6178   */\n      jump\n        /* \"contracts/RestaurantManager.sol\":2849:2891  require(balance > 0, \"No funds available\") */\n    tag_147:\n        /* \"contracts/RestaurantManager.sol\":2932:2933  0 */\n      0x00\n        /* \"contracts/RestaurantManager.sol\":2902:2920  pendingWithdrawals */\n      0x03\n        /* \"contracts/RestaurantManager.sol\":2902:2929  pendingWithdrawals[owner()] */\n      0x00\n        /* \"contracts/RestaurantManager.sol\":2921:2928  owner() */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/RestaurantManager.sol\":2921:2928  owner() */\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/RestaurantManager.sol\":2902:2929  pendingWithdrawals[owner()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/RestaurantManager.sol\":2902:2933  pendingWithdrawals[owner()] = 0 */\n      dup1\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n      swap3\n      dup4\n      and\n      not(sub(shl(0x80, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/RestaurantManager.sol\":2944:2979  payable(owner()).sendValue(balance) */\n      tag_151\n      swap1\n      dup3\n      and\n        /* \"contracts/RestaurantManager.sol\":2952:2959  owner() */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/RestaurantManager.sol\":2952:2959  owner() */\n    tag_152:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/RestaurantManager.sol\":2944:2970  payable(owner()).sendValue */\n      and\n      swap1\n      tag_153\n        /* \"contracts/RestaurantManager.sol\":2944:2979  payable(owner()).sendValue(balance) */\n      jump\t// in\n    tag_151:\n        /* \"contracts/RestaurantManager.sol\":2995:3028  PaymentReleased(owner(), balance) */\n      0x15ed0a7026c7f7b2319e041da1e43e0b566e892499962bc6b464292ef9d38757\n        /* \"contracts/RestaurantManager.sol\":3011:3018  owner() */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/RestaurantManager.sol\":3011:3018  owner() */\n    tag_154:\n        /* \"contracts/RestaurantManager.sol\":2995:3028  PaymentReleased(owner(), balance) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5708:5740   */\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":5690:5741   */\n      dup3\n      mstore\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":5777:5824   */\n      dup5\n      and\n        /* \"#utility.yul\":5772:5774   */\n      0x20\n        /* \"#utility.yul\":5757:5775   */\n      dup4\n      add\n        /* \"#utility.yul\":5750:5825   */\n      mstore\n        /* \"#utility.yul\":5663:5681   */\n      add\n        /* \"contracts/RestaurantManager.sol\":2995:3028  PaymentReleased(owner(), balance) */\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/RestaurantManager.sol\":2782:3036  {... */\n      pop\n        /* \"contracts/RestaurantManager.sol\":2732:3036  function withdrawServiceFees() external onlyAdmin {... */\n      jump\t// out\n        /* \"contracts/RestaurantManager.sol\":543:596  mapping(address => uint128[]) public ownerRestaurants */\n    tag_62:\n      mstore(0x20, 0x04)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      swap2\n      dup3\n      dup3\n      div\n      add\n      swap2\n      swap1\n      mod\n      0x10\n      mul\n      swap2\n      pop\n      swap2\n      pop\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_159\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_159:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_161\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":870:921   */\n      mstore\n        /* \"#utility.yul\":843:861   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_90\n        /* \"#utility.yul\":724:927   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/RestaurantManager.sol\":2484:2724  function setServiceFeePercentage(uint8 percentage) external onlyAdmin {... */\n    tag_79:\n        /* \"contracts/RestaurantManager.sol\":1065:1075  msg.sender */\n      caller\n        /* \"contracts/RestaurantManager.sol\":1059:1076  roles[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/RestaurantManager.sol\":1080:1090  Role.Admin */\n      0x02\n        /* \"contracts/RestaurantManager.sol\":1059:1076  roles[msg.sender] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/RestaurantManager.sol\":1059:1090  roles[msg.sender] == Role.Admin */\n      dup2\n      dup2\n      gt\n      iszero\n      tag_168\n      jumpi\n      tag_168\n      tag_86\n      jump\t// in\n    tag_168:\n      eq\n        /* \"contracts/RestaurantManager.sol\":1051:1119  require(roles[msg.sender] == Role.Admin, \"Unauthorized: Admin only\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_169:\n        /* \"contracts/RestaurantManager.sol\":428:430  20 */\n      0x14\n        /* \"contracts/RestaurantManager.sol\":2573:2602  percentage <= MAX_SERVICE_FEE */\n      0xff\n      dup3\n      and\n      gt\n      iszero\n        /* \"contracts/RestaurantManager.sol\":2565:2627  require(percentage <= MAX_SERVICE_FEE, \"Service fee too high\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6385:6387   */\n      0x20\n        /* \"contracts/RestaurantManager.sol\":2565:2627  require(percentage <= MAX_SERVICE_FEE, \"Service fee too high\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6367:6388   */\n      mstore\n        /* \"#utility.yul\":6424:6426   */\n      0x14\n        /* \"#utility.yul\":6404:6422   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6397:6427   */\n      mstore\n      shl(0x63, 0x0a6cae4ecd2c6ca40cccaca40e8dede40d0d2ced)\n        /* \"#utility.yul\":6443:6461   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6436:6486   */\n      mstore\n        /* \"#utility.yul\":6503:6521   */\n      0x64\n      add\n        /* \"contracts/RestaurantManager.sol\":2565:2627  require(percentage <= MAX_SERVICE_FEE, \"Service fee too high\") */\n      tag_90\n        /* \"#utility.yul\":6183:6527   */\n      jump\n        /* \"contracts/RestaurantManager.sol\":2565:2627  require(percentage <= MAX_SERVICE_FEE, \"Service fee too high\") */\n    tag_172:\n        /* \"contracts/RestaurantManager.sol\":2638:2658  serviceFeePercentage */\n      0x01\n        /* \"contracts/RestaurantManager.sol\":2638:2671  serviceFeePercentage = percentage */\n      dup1\n      sload\n      not(shl(0x80, 0xff))\n      and\n      shl(0x80, 0x01)\n      0xff\n      dup5\n      and\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/RestaurantManager.sol\":2687:2716  ServiceFeeUpdated(percentage) */\n      mload(0x40)\n        /* \"#utility.yul\":156:192   */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/RestaurantManager.sol\":2687:2716  ServiceFeeUpdated(percentage) */\n      0xc2e7293b347ac956898a90e36061ef247c8d3516f25e87a91009be115ce27ac4\n      swap1\n        /* \"#utility.yul\":144:146   */\n      0x20\n        /* \"#utility.yul\":129:147   */\n      add\n        /* \"contracts/RestaurantManager.sol\":2687:2716  ServiceFeeUpdated(percentage) */\n      tag_155\n        /* \"#utility.yul\":14:198   */\n      jump\n        /* \"contracts/RestaurantManager.sol\":1405:1753  function registerRestaurant() external returns (uint128) {... */\n    tag_81:\n        /* \"contracts/RestaurantManager.sol\":1496:1512  nextRestaurantId */\n      0x01\n      dup1\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/RestaurantManager.sol\":1453:1460  uint128 */\n      0x00\n        /* \"contracts/RestaurantManager.sol\":1523:1553  restaurantOwners[restaurantId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/RestaurantManager.sol\":1523:1539  restaurantOwners */\n      0x05\n        /* \"contracts/RestaurantManager.sol\":1523:1553  restaurantOwners[restaurantId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/RestaurantManager.sol\":1523:1566  restaurantOwners[restaurantId] = msg.sender */\n      dup1\n      sload\n        /* \"contracts/RestaurantManager.sol\":1556:1566  msg.sender */\n      caller\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"contracts/RestaurantManager.sol\":1523:1566  restaurantOwners[restaurantId] = msg.sender */\n      swap1\n      swap2\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/RestaurantManager.sol\":1577:1605  ownerRestaurants[msg.sender] */\n      dup1\n      dup5\n      mstore\n        /* \"contracts/RestaurantManager.sol\":1577:1593  ownerRestaurants */\n      0x04\n        /* \"contracts/RestaurantManager.sol\":1577:1605  ownerRestaurants[msg.sender] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"contracts/RestaurantManager.sol\":1577:1624  ownerRestaurants[msg.sender].push(restaurantId) */\n      dup1\n      sload\n      dup1\n      dup10\n      add\n      dup3\n      sstore\n      swap1\n      dup6\n      mstore\n      dup4\n      dup6\n      keccak256\n      0x02\n      dup3\n      div\n      add\n      dup1\n      sload\n      swap2\n      swap1\n      swap9\n      and\n      0x10\n      mul\n        /* \"contracts/RestaurantManager.sol\":1496:1512  nextRestaurantId */\n      0x0100\n        /* \"contracts/RestaurantManager.sol\":1577:1624  ownerRestaurants[msg.sender].push(restaurantId) */\n      exp\n      swap7\n      dup8\n      mul\n      not\n      and\n      swap6\n      dup6\n      mul\n      swap6\n      swap1\n      swap6\n      or\n      swap1\n      swap6\n      sstore\n        /* \"contracts/RestaurantManager.sol\":1640:1686  RestaurantRegistered(restaurantId, msg.sender) */\n      dup5\n      mload\n        /* \"#utility.yul\":6706:6772   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":6788:6806   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":6781:6841   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"contracts/RestaurantManager.sol\":1453:1460  uint128 */\n      swap3\n        /* \"contracts/RestaurantManager.sol\":1496:1512  nextRestaurantId */\n      swap1\n      swap2\n        /* \"contracts/RestaurantManager.sol\":1640:1686  RestaurantRegistered(restaurantId, msg.sender) */\n      0xbafbc0bfd4afd8a222b8cd09b01ce310b06b0beb42503ea91a76135e6a532e92\n      swap2\n        /* \"#utility.yul\":6679:6697   */\n      add\n        /* \"contracts/RestaurantManager.sol\":1640:1686  RestaurantRegistered(restaurantId, msg.sender) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/RestaurantManager.sol\":1697:1713  nextRestaurantId */\n      0x01\n        /* \"contracts/RestaurantManager.sol\":1697:1715  nextRestaurantId++ */\n      dup1\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/RestaurantManager.sol\":1697:1713  nextRestaurantId */\n      0x00\n        /* \"contracts/RestaurantManager.sol\":1697:1715  nextRestaurantId++ */\n      tag_180\n      dup4\n      tag_181\n      jump\t// in\n    tag_180:\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0x80, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/RestaurantManager.sol\":1733:1745  restaurantId */\n      dup1\n        /* \"contracts/RestaurantManager.sol\":1726:1745  return restaurantId */\n      swap2\n      pop\n      pop\n        /* \"contracts/RestaurantManager.sol\":1405:1753  function registerRestaurant() external returns (uint128) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_109\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":870:921   */\n      mstore\n        /* \"#utility.yul\":843:861   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_90\n        /* \"#utility.yul\":724:927   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1290:1655  function sendValue(address payable recipient, uint256 amount) internal {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1399:1405  amount */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1375:1396  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1375:1405  address(this).balance < amount */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1371:1496  if (address(this).balance < amount) {... */\n      iszero\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1428:1485  Errors.InsufficientBalance(address(this).balance, amount) */\n      mload(0x40)\n      shl(0xe0, 0xcf479181)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1455:1476  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1428:1485  Errors.InsufficientBalance(address(this).balance, amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7268:7293   */\n      mstore\n        /* \"#utility.yul\":7309:7327   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7302:7336   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":7241:7259   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1428:1485  Errors.InsufficientBalance(address(this).balance, amount) */\n      tag_90\n        /* \"#utility.yul\":7094:7342   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1371:1496  if (address(this).balance < amount) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1507:1519  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1521:1544  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1548:1557  recipient */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1548:1562  recipient.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1570:1576  amount */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1548:1581  recipient.call{value: amount}(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_198\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_197)\n    tag_198:\n      0x60\n      swap2\n      pop\n    tag_197:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1506:1581  (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\") */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1596:1603  success */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1591:1649  if (!success) {... */\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1619:1638  _revert(returndata) */\n      tag_200\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1627:1637  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1619:1626  _revert */\n      tag_201\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1619:1638  _revert(returndata) */\n      jump\t// in\n    tag_200:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1361:1655  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1290:1655  function sendValue(address payable recipient, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5559:6046  function _revert(bytes memory returndata) private pure {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5707  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5711  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5887:5897  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5881:5898  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5943:5958  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5930:5940  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5926:5928  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5922:5941  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5915:5959  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6010:6029  Errors.FailedCall() */\n      mload(0x40)\n      shl(0xe0, 0xd6bda275)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":203:376   */\n    tag_206:\n        /* \"#utility.yul\":271:291   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":320:351   */\n      dup2\n      and\n        /* \"#utility.yul\":310:352   */\n      dup2\n      eq\n        /* \"#utility.yul\":300:370   */\n      tag_213\n      jumpi\n        /* \"#utility.yul\":366:367   */\n      0x00\n        /* \"#utility.yul\":363:364   */\n      0x00\n        /* \"#utility.yul\":356:368   */\n      revert\n        /* \"#utility.yul\":300:370   */\n    tag_213:\n        /* \"#utility.yul\":203:376   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":381:719   */\n    tag_31:\n        /* \"#utility.yul\":457:463   */\n      0x00\n        /* \"#utility.yul\":465:471   */\n      0x00\n        /* \"#utility.yul\":518:520   */\n      0x40\n        /* \"#utility.yul\":506:515   */\n      dup4\n        /* \"#utility.yul\":497:504   */\n      dup6\n        /* \"#utility.yul\":493:516   */\n      sub\n        /* \"#utility.yul\":489:521   */\n      slt\n        /* \"#utility.yul\":486:538   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":534:535   */\n      0x00\n        /* \"#utility.yul\":531:532   */\n      0x00\n        /* \"#utility.yul\":524:536   */\n      revert\n        /* \"#utility.yul\":486:538   */\n    tag_215:\n        /* \"#utility.yul\":557:586   */\n      tag_216\n        /* \"#utility.yul\":576:585   */\n      dup4\n        /* \"#utility.yul\":557:586   */\n      tag_206\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":547:586   */\n      swap2\n      pop\n        /* \"#utility.yul\":636:638   */\n      0x20\n        /* \"#utility.yul\":625:634   */\n      dup4\n        /* \"#utility.yul\":621:639   */\n      add\n        /* \"#utility.yul\":608:640   */\n      calldataload\n        /* \"#utility.yul\":669:670   */\n      0x03\n        /* \"#utility.yul\":662:667   */\n      dup2\n        /* \"#utility.yul\":659:671   */\n      lt\n        /* \"#utility.yul\":649:689   */\n      tag_217\n      jumpi\n        /* \"#utility.yul\":685:686   */\n      0x00\n        /* \"#utility.yul\":682:683   */\n      0x00\n        /* \"#utility.yul\":675:687   */\n      revert\n        /* \"#utility.yul\":649:689   */\n    tag_217:\n        /* \"#utility.yul\":708:713   */\n      dup1\n        /* \"#utility.yul\":698:713   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":381:719   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":932:1118   */\n    tag_41:\n        /* \"#utility.yul\":991:997   */\n      0x00\n        /* \"#utility.yul\":1044:1046   */\n      0x20\n        /* \"#utility.yul\":1032:1041   */\n      dup3\n        /* \"#utility.yul\":1023:1030   */\n      dup5\n        /* \"#utility.yul\":1019:1042   */\n      sub\n        /* \"#utility.yul\":1015:1047   */\n      slt\n        /* \"#utility.yul\":1012:1064   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":1060:1061   */\n      0x00\n        /* \"#utility.yul\":1057:1058   */\n      0x00\n        /* \"#utility.yul\":1050:1062   */\n      revert\n        /* \"#utility.yul\":1012:1064   */\n    tag_220:\n        /* \"#utility.yul\":1083:1112   */\n      tag_221\n        /* \"#utility.yul\":1102:1111   */\n      dup3\n        /* \"#utility.yul\":1083:1112   */\n      tag_206\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":1073:1112   */\n      swap4\n        /* \"#utility.yul\":932:1118   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1123:1250   */\n    tag_86:\n        /* \"#utility.yul\":1184:1194   */\n      0x4e487b71\n        /* \"#utility.yul\":1179:1182   */\n      0xe0\n        /* \"#utility.yul\":1175:1195   */\n      shl\n        /* \"#utility.yul\":1172:1173   */\n      0x00\n        /* \"#utility.yul\":1165:1196   */\n      mstore\n        /* \"#utility.yul\":1215:1219   */\n      0x21\n        /* \"#utility.yul\":1212:1213   */\n      0x04\n        /* \"#utility.yul\":1205:1220   */\n      mstore\n        /* \"#utility.yul\":1239:1243   */\n      0x24\n        /* \"#utility.yul\":1236:1237   */\n      0x00\n        /* \"#utility.yul\":1229:1244   */\n      revert\n        /* \"#utility.yul\":1255:1487   */\n    tag_207:\n        /* \"#utility.yul\":1331:1332   */\n      0x03\n        /* \"#utility.yul\":1324:1329   */\n      dup2\n        /* \"#utility.yul\":1321:1333   */\n      lt\n        /* \"#utility.yul\":1311:1454   */\n      tag_224\n      jumpi\n        /* \"#utility.yul\":1376:1386   */\n      0x4e487b71\n        /* \"#utility.yul\":1371:1374   */\n      0xe0\n        /* \"#utility.yul\":1367:1387   */\n      shl\n        /* \"#utility.yul\":1364:1365   */\n      0x00\n        /* \"#utility.yul\":1357:1388   */\n      mstore\n        /* \"#utility.yul\":1411:1415   */\n      0x21\n        /* \"#utility.yul\":1408:1409   */\n      0x04\n        /* \"#utility.yul\":1401:1416   */\n      mstore\n        /* \"#utility.yul\":1439:1443   */\n      0x24\n        /* \"#utility.yul\":1436:1437   */\n      0x00\n        /* \"#utility.yul\":1429:1444   */\n      revert\n        /* \"#utility.yul\":1311:1454   */\n    tag_224:\n        /* \"#utility.yul\":1463:1481   */\n      swap1\n      mstore\n        /* \"#utility.yul\":1255:1487   */\n      jump\t// out\n        /* \"#utility.yul\":1492:1689   */\n    tag_44:\n        /* \"#utility.yul\":1632:1634   */\n      0x20\n        /* \"#utility.yul\":1617:1635   */\n      dup2\n      add\n        /* \"#utility.yul\":1644:1683   */\n      tag_226\n        /* \"#utility.yul\":1621:1630   */\n      dup3\n        /* \"#utility.yul\":1665:1671   */\n      dup5\n        /* \"#utility.yul\":1644:1683   */\n      tag_207\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":1492:1689   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1694:1882   */\n    tag_208:\n        /* \"#utility.yul\":1762:1782   */\n      dup1\n      calldataload\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":1811:1857   */\n      dup2\n      and\n        /* \"#utility.yul\":1801:1858   */\n      dup2\n      eq\n        /* \"#utility.yul\":1791:1876   */\n      tag_213\n      jumpi\n        /* \"#utility.yul\":1872:1873   */\n      0x00\n        /* \"#utility.yul\":1869:1870   */\n      0x00\n        /* \"#utility.yul\":1862:1874   */\n      revert\n        /* \"#utility.yul\":1887:2147   */\n    tag_47:\n        /* \"#utility.yul\":1955:1961   */\n      0x00\n        /* \"#utility.yul\":1963:1969   */\n      0x00\n        /* \"#utility.yul\":2016:2018   */\n      0x40\n        /* \"#utility.yul\":2004:2013   */\n      dup4\n        /* \"#utility.yul\":1995:2002   */\n      dup6\n        /* \"#utility.yul\":1991:2014   */\n      sub\n        /* \"#utility.yul\":1987:2019   */\n      slt\n        /* \"#utility.yul\":1984:2036   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":2032:2033   */\n      0x00\n        /* \"#utility.yul\":2029:2030   */\n      0x00\n        /* \"#utility.yul\":2022:2034   */\n      revert\n        /* \"#utility.yul\":1984:2036   */\n    tag_230:\n        /* \"#utility.yul\":2055:2084   */\n      tag_231\n        /* \"#utility.yul\":2074:2083   */\n      dup4\n        /* \"#utility.yul\":2055:2084   */\n      tag_206\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":2045:2084   */\n      swap2\n      pop\n        /* \"#utility.yul\":2103:2141   */\n      tag_232\n        /* \"#utility.yul\":2137:2139   */\n      0x20\n        /* \"#utility.yul\":2126:2135   */\n      dup5\n        /* \"#utility.yul\":2122:2140   */\n      add\n        /* \"#utility.yul\":2103:2141   */\n      tag_208\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":2093:2141   */\n      swap1\n      pop\n        /* \"#utility.yul\":1887:2147   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2152:2338   */\n    tag_51:\n        /* \"#utility.yul\":2211:2217   */\n      0x00\n        /* \"#utility.yul\":2264:2266   */\n      0x20\n        /* \"#utility.yul\":2252:2261   */\n      dup3\n        /* \"#utility.yul\":2243:2250   */\n      dup5\n        /* \"#utility.yul\":2239:2262   */\n      sub\n        /* \"#utility.yul\":2235:2267   */\n      slt\n        /* \"#utility.yul\":2232:2284   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":2280:2281   */\n      0x00\n        /* \"#utility.yul\":2277:2278   */\n      0x00\n        /* \"#utility.yul\":2270:2282   */\n      revert\n        /* \"#utility.yul\":2232:2284   */\n    tag_234:\n        /* \"#utility.yul\":2303:2332   */\n      tag_221\n        /* \"#utility.yul\":2322:2331   */\n      dup3\n        /* \"#utility.yul\":2303:2332   */\n      tag_208\n      jump\t// in\n        /* \"#utility.yul\":2343:2597   */\n    tag_61:\n        /* \"#utility.yul\":2411:2417   */\n      0x00\n        /* \"#utility.yul\":2419:2425   */\n      0x00\n        /* \"#utility.yul\":2472:2474   */\n      0x40\n        /* \"#utility.yul\":2460:2469   */\n      dup4\n        /* \"#utility.yul\":2451:2458   */\n      dup6\n        /* \"#utility.yul\":2447:2470   */\n      sub\n        /* \"#utility.yul\":2443:2475   */\n      slt\n        /* \"#utility.yul\":2440:2492   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":2488:2489   */\n      0x00\n        /* \"#utility.yul\":2485:2486   */\n      0x00\n        /* \"#utility.yul\":2478:2490   */\n      revert\n        /* \"#utility.yul\":2440:2492   */\n    tag_237:\n        /* \"#utility.yul\":2511:2540   */\n      tag_238\n        /* \"#utility.yul\":2530:2539   */\n      dup4\n        /* \"#utility.yul\":2511:2540   */\n      tag_206\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":2501:2540   */\n      swap5\n        /* \"#utility.yul\":2587:2589   */\n      0x20\n        /* \"#utility.yul\":2572:2590   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2559:2591   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2343:2597   */\n      jump\t// out\n        /* \"#utility.yul\":2825:3094   */\n    tag_78:\n        /* \"#utility.yul\":2882:2888   */\n      0x00\n        /* \"#utility.yul\":2935:2937   */\n      0x20\n        /* \"#utility.yul\":2923:2932   */\n      dup3\n        /* \"#utility.yul\":2914:2921   */\n      dup5\n        /* \"#utility.yul\":2910:2933   */\n      sub\n        /* \"#utility.yul\":2906:2938   */\n      slt\n        /* \"#utility.yul\":2903:2955   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":2951:2952   */\n      0x00\n        /* \"#utility.yul\":2948:2949   */\n      0x00\n        /* \"#utility.yul\":2941:2953   */\n      revert\n        /* \"#utility.yul\":2903:2955   */\n    tag_241:\n        /* \"#utility.yul\":2990:2999   */\n      dup2\n        /* \"#utility.yul\":2977:3000   */\n      calldataload\n        /* \"#utility.yul\":3040:3044   */\n      0xff\n        /* \"#utility.yul\":3033:3038   */\n      dup2\n        /* \"#utility.yul\":3029:3045   */\n      and\n        /* \"#utility.yul\":3022:3027   */\n      dup2\n        /* \"#utility.yul\":3019:3046   */\n      eq\n        /* \"#utility.yul\":3009:3064   */\n      tag_221\n      jumpi\n        /* \"#utility.yul\":3060:3061   */\n      0x00\n        /* \"#utility.yul\":3057:3058   */\n      0x00\n        /* \"#utility.yul\":3050:3062   */\n      revert\n        /* \"#utility.yul\":3099:3447   */\n    tag_91:\n        /* \"#utility.yul\":3301:3303   */\n      0x20\n        /* \"#utility.yul\":3283:3304   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3340:3342   */\n      0x18\n        /* \"#utility.yul\":3320:3338   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3313:3343   */\n      mstore\n        /* \"#utility.yul\":3379:3405   */\n      0x556e617574686f72697a65643a2041646d696e206f6e6c790000000000000000\n        /* \"#utility.yul\":3374:3376   */\n      0x40\n        /* \"#utility.yul\":3359:3377   */\n      dup3\n      add\n        /* \"#utility.yul\":3352:3406   */\n      mstore\n        /* \"#utility.yul\":3438:3440   */\n      0x60\n        /* \"#utility.yul\":3423:3441   */\n      add\n      swap1\n        /* \"#utility.yul\":3099:3447   */\n      jump\t// out\n        /* \"#utility.yul\":3796:4090   */\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3994:4026   */\n      dup4\n      and\n        /* \"#utility.yul\":3976:4027   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3964:3966   */\n      0x40\n        /* \"#utility.yul\":3949:3967   */\n      dup2\n      add\n        /* \"#utility.yul\":4036:4084   */\n      tag_221\n        /* \"#utility.yul\":4080:4082   */\n      0x20\n        /* \"#utility.yul\":4065:4083   */\n      dup4\n      add\n        /* \"#utility.yul\":4057:4063   */\n      dup5\n        /* \"#utility.yul\":4036:4084   */\n      tag_207\n      jump\t// in\n        /* \"#utility.yul\":4436:4563   */\n    tag_209:\n        /* \"#utility.yul\":4497:4507   */\n      0x4e487b71\n        /* \"#utility.yul\":4492:4495   */\n      0xe0\n        /* \"#utility.yul\":4488:4508   */\n      shl\n        /* \"#utility.yul\":4485:4486   */\n      0x00\n        /* \"#utility.yul\":4478:4509   */\n      mstore\n        /* \"#utility.yul\":4528:4532   */\n      0x11\n        /* \"#utility.yul\":4525:4526   */\n      0x04\n        /* \"#utility.yul\":4518:4533   */\n      mstore\n        /* \"#utility.yul\":4552:4556   */\n      0x24\n        /* \"#utility.yul\":4549:4550   */\n      0x00\n        /* \"#utility.yul\":4542:4557   */\n      revert\n        /* \"#utility.yul\":4568:4808   */\n    tag_123:\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":4637:4679   */\n      dup2\n      dup2\n      and\n        /* \"#utility.yul\":4681:4723   */\n      dup4\n      dup3\n      and\n        /* \"#utility.yul\":4633:4724   */\n      add\n      swap1\n        /* \"#utility.yul\":4736:4779   */\n      dup2\n      gt\n        /* \"#utility.yul\":4733:4802   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":4782:4800   */\n      tag_226\n      tag_209\n      jump\t// in\n        /* \"#utility.yul\":6852:7089   */\n    tag_181:\n        /* \"#utility.yul\":6891:6894   */\n      0x00\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":6928:6933   */\n      dup3\n        /* \"#utility.yul\":6924:6970   */\n      and\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":6985:6992   */\n      dup2\n        /* \"#utility.yul\":6982:7029   */\n      sub\n        /* \"#utility.yul\":6979:7052   */\n      tag_260\n      jumpi\n        /* \"#utility.yul\":7032:7050   */\n      tag_260\n      tag_209\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":7081:7082   */\n      0x01\n        /* \"#utility.yul\":7068:7083   */\n      add\n      swap3\n        /* \"#utility.yul\":6852:7089   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122013a7fda9534c1974a615d7b81ade2632c397a89d9409dc994e977aceec8e4a1c64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_579": {
									"entryPoint": null,
									"id": 579,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 126,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:351:5",
										"nodeType": "YulBlock",
										"src": "0:351:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:102:5",
													"nodeType": "YulBlock",
													"src": "115:102:5",
													"statements": [
														{
															"nativeSrc": "125:26:5",
															"nodeType": "YulAssignment",
															"src": "125:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:5",
																		"nodeType": "YulLiteral",
																		"src": "148:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:5"
																},
																"nativeSrc": "133:18:5",
																"nodeType": "YulFunctionCall",
																"src": "133:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "182:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "198:3:5",
																								"nodeType": "YulLiteral",
																								"src": "198:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "203:1:5",
																								"nodeType": "YulLiteral",
																								"src": "203:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "194:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:5"
																						},
																						"nativeSrc": "194:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "207:1:5",
																						"nodeType": "YulLiteral",
																						"src": "207:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "190:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:5"
																				},
																				"nativeSrc": "190:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "178:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:5"
																		},
																		"nativeSrc": "178:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:5"
																},
																"nativeSrc": "160:51:5",
																"nodeType": "YulFunctionCall",
																"src": "160:51:5"
															},
															"nativeSrc": "160:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "160:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14:203:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:5",
														"nodeType": "YulTypedName",
														"src": "84:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:5",
														"nodeType": "YulTypedName",
														"src": "95:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:5",
														"nodeType": "YulTypedName",
														"src": "106:4:5",
														"type": ""
													}
												],
												"src": "14:203:5"
											},
											{
												"body": {
													"nativeSrc": "254:95:5",
													"nodeType": "YulBlock",
													"src": "254:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "271:1:5",
																		"nodeType": "YulLiteral",
																		"src": "271:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "278:3:5",
																				"nodeType": "YulLiteral",
																				"src": "278:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "283:10:5",
																				"nodeType": "YulLiteral",
																				"src": "283:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "274:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:5"
																		},
																		"nativeSrc": "274:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "274:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "264:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "264:6:5"
																},
																"nativeSrc": "264:31:5",
																"nodeType": "YulFunctionCall",
																"src": "264:31:5"
															},
															"nativeSrc": "264:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "264:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "311:1:5",
																		"nodeType": "YulLiteral",
																		"src": "311:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "314:4:5",
																		"nodeType": "YulLiteral",
																		"src": "314:4:5",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "304:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "304:6:5"
																},
																"nativeSrc": "304:15:5",
																"nodeType": "YulFunctionCall",
																"src": "304:15:5"
															},
															"nativeSrc": "304:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "304:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "335:1:5",
																		"nodeType": "YulLiteral",
																		"src": "335:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "338:4:5",
																		"nodeType": "YulLiteral",
																		"src": "338:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "328:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "328:6:5"
																},
																"nativeSrc": "328:15:5",
																"nodeType": "YulFunctionCall",
																"src": "328:15:5"
															},
															"nativeSrc": "328:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "328:15:5"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "222:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "222:127:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600180546001600160881b0319167005000000000000000000000000000000011790553480156031575f5ffd5b503380605657604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b605d81607e565b50335f908152600260208190526040909120805460ff1916909117905560cd565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610dc1806100da5f395ff3fe608060405234801561000f575f5ffd5b50600436106100fb575f3560e01c8063ae9a465511610093578063f2fde38b11610063578063f2fde38b1461024b578063f3f437031461025e578063f793728214610286578063fa20fca714610299575f5ffd5b8063ae9a4655146101dd578063d72e481d146101f0578063d76d571a146101f8578063e28d7a1814610223575f5ffd5b80638da5cb5b116100ce5780638da5cb5b1461014f5780639937464214610173578063a0e31ec4146101a2578063abca88f0146101b5575f5ffd5b806314d90e1b146100ff578063603ef6491461011e578063630a195b14610132578063715018a614610147575b5f5ffd5b610107601481565b60405160ff90911681526020015b60405180910390f35b60015461010790600160801b900460ff1681565b610145610140366004610b92565b6102a1565b005b6101456103ee565b5f546001600160a01b03165b6040516001600160a01b039091168152602001610115565b610195610181366004610bca565b60026020525f908152604090205460ff1681565b6040516101159190610c1e565b6101456101b0366004610c48565b610401565b61015b6101c3366004610c79565b60056020525f90815260409020546001600160a01b031681565b6101456101eb366004610c48565b6104ce565b61014561066e565b61020b610206366004610c92565b6107f9565b6040516001600160801b039091168152602001610115565b61020b610231366004610bca565b60066020525f90815260409020546001600160801b031681565b610145610259366004610bca565b610840565b61020b61026c366004610bca565b60036020525f90815260409020546001600160801b031681565b610145610294366004610cba565b61087d565b61020b610958565b335f9081526002602081905260409091205460ff16818111156102c6576102c6610bea565b146102ec5760405162461bcd60e51b81526004016102e390610cda565b60405180910390fd5b6001600160a01b0382166103345760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064016102e3565b6001600160a01b0382165f9081526002602081905260409091208054839260ff1990911690600190849081111561036d5761036d610bea565b0217905550600181600281111561038657610386610bea565b146103b1576001600160a01b0382165f90815260066020526040902080546001600160801b03191690555b7f4ac36fa53f167ceb85964be512e01de2a3b8bdb9862f917da079deeeff689b3882826040516103e2929190610d11565b60405180910390a15050565b6103f6610a41565b6103ff5f610a6d565b565b5f546001600160a01b031633148061043b5750335f9081526002602081905260409091205460ff168181111561043957610439610bea565b145b6104765760405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b60448201526064016102e3565b6001600160a01b0382165f90815260036020526040812080548392906104a69084906001600160801b0316610d42565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505050565b6001600160801b0381165f9081526005602052604090205481906001600160a01b031633146105365760405162461bcd60e51b81526020600482015260146024820152732737ba103932b9ba30bab930b73a1037bbb732b960611b60448201526064016102e3565b6001600160a01b03831661057e5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064016102e3565b6001600160801b0382165f908152600560205260409020546001600160a01b03166105eb5760405162461bcd60e51b815260206004820152601960248201527f52657374617572616e7420646f6573206e6f742065786973740000000000000060448201526064016102e3565b6001600160a01b0383165f818152600260209081526040808320805460ff19166001179055600682529182902080546001600160801b0387166001600160801b031990911681179091558251938452908301527f69a85d8f30649b59eeb2b4393ea9eb9c9ed001f6974226d94a7fa2dfd562f15b910160405180910390a1505050565b335f9081526002602081905260409091205460ff168181111561069357610693610bea565b146106b05760405162461bcd60e51b81526004016102e390610cda565b5f60035f6106c55f546001600160a01b031690565b6001600160a01b0316815260208101919091526040015f20546001600160801b031690508061072b5760405162461bcd60e51b81526020600482015260126024820152714e6f2066756e647320617661696c61626c6560701b60448201526064016102e3565b5f60035f6107405f546001600160a01b031690565b6001600160a01b0316815260208101919091526040015f2080546001600160801b039283166001600160801b031990911617905561079a90821661078b5f546001600160a01b031690565b6001600160a01b031690610abc565b7f15ed0a7026c7f7b2319e041da1e43e0b566e892499962bc6b464292ef9d387576107cc5f546001600160a01b031690565b604080516001600160a01b0390921682526001600160801b0384166020830152015b60405180910390a150565b6004602052815f5260405f208181548110610812575f80fd5b905f5260205f209060029182820401919006601002915091509054906101000a90046001600160801b031681565b610848610a41565b6001600160a01b03811661087157604051631e4fbdf760e01b81525f60048201526024016102e3565b61087a81610a6d565b50565b335f9081526002602081905260409091205460ff16818111156108a2576108a2610bea565b146108bf5760405162461bcd60e51b81526004016102e390610cda565b601460ff8216111561090a5760405162461bcd60e51b81526020600482015260146024820152730a6cae4ecd2c6ca40cccaca40e8dede40d0d2ced60631b60448201526064016102e3565b6001805460ff60801b1916600160801b60ff8416908102919091179091556040519081527fc2e7293b347ac956898a90e36061ef247c8d3516f25e87a91009be115ce27ac4906020016107ee565b600180546001600160801b039081165f8181526005602090815260408083208054336001600160a01b03199091168117909155808452600483528184208054808901825590855283852060028204018054919098166010026101000a9687021916958502959095179095558451838152908101939093529290917fbafbc0bfd4afd8a222b8cd09b01ce310b06b0beb42503ea91a76135e6a532e92910160405180910390a1600180546001600160801b0316905f610a1583610d61565b91906101000a8154816001600160801b0302191690836001600160801b03160217905550508091505090565b5f546001600160a01b031633146103ff5760405163118cdaa760e01b81523360048201526024016102e3565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80471015610ae65760405163cf47918160e01b8152476004820152602481018290526044016102e3565b5f5f836001600160a01b0316836040515f6040518083038185875af1925050503d805f8114610b30576040519150601f19603f3d011682016040523d82523d5f602084013e610b35565b606091505b509150915081610b4857610b4881610b4e565b50505050565b805115610b5e5780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b80356001600160a01b0381168114610b8d575f5ffd5b919050565b5f5f60408385031215610ba3575f5ffd5b610bac83610b77565b9150602083013560038110610bbf575f5ffd5b809150509250929050565b5f60208284031215610bda575f5ffd5b610be382610b77565b9392505050565b634e487b7160e01b5f52602160045260245ffd5b60038110610c1a57634e487b7160e01b5f52602160045260245ffd5b9052565b60208101610c2c8284610bfe565b92915050565b80356001600160801b0381168114610b8d575f5ffd5b5f5f60408385031215610c59575f5ffd5b610c6283610b77565b9150610c7060208401610c32565b90509250929050565b5f60208284031215610c89575f5ffd5b610be382610c32565b5f5f60408385031215610ca3575f5ffd5b610cac83610b77565b946020939093013593505050565b5f60208284031215610cca575f5ffd5b813560ff81168114610be3575f5ffd5b60208082526018908201527f556e617574686f72697a65643a2041646d696e206f6e6c790000000000000000604082015260600190565b6001600160a01b038316815260408101610be36020830184610bfe565b634e487b7160e01b5f52601160045260245ffd5b6001600160801b038181168382160190811115610c2c57610c2c610d2e565b5f6001600160801b0382166001600160801b038103610d8257610d82610d2e565b6001019291505056fea264697066735822122013a7fda9534c1974a615d7b81ade2632c397a89d9409dc994e977aceec8e4a1c64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x88 SHL SUB NOT AND PUSH17 0x500000000000000000000000000000001 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH1 0x31 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER DUP1 PUSH1 0x56 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5D DUP2 PUSH1 0x7E JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xCD JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xDC1 DUP1 PUSH2 0xDA PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAE9A4655 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xF3F43703 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xF7937282 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xFA20FCA7 EQ PUSH2 0x299 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xAE9A4655 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0xD72E481D EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0xD76D571A EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0xE28D7A18 EQ PUSH2 0x223 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x99374642 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xA0E31EC4 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0xABCA88F0 EQ PUSH2 0x1B5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x14D90E1B EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x603EF649 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x630A195B EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x147 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x107 PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x107 SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0xB92 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x145 PUSH2 0x3EE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x115 JUMP JUMPDEST PUSH2 0x195 PUSH2 0x181 CALLDATASIZE PUSH1 0x4 PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0xC1E JUMP JUMPDEST PUSH2 0x145 PUSH2 0x1B0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC48 JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC79 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x1EB CALLDATASIZE PUSH1 0x4 PUSH2 0xC48 JUMP JUMPDEST PUSH2 0x4CE JUMP JUMPDEST PUSH2 0x145 PUSH2 0x66E JUMP JUMPDEST PUSH2 0x20B PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0xC92 JUMP JUMPDEST PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x115 JUMP JUMPDEST PUSH2 0x20B PUSH2 0x231 CALLDATASIZE PUSH1 0x4 PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x259 CALLDATASIZE PUSH1 0x4 PUSH2 0xBCA JUMP JUMPDEST PUSH2 0x840 JUMP JUMPDEST PUSH2 0x20B PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x294 CALLDATASIZE PUSH1 0x4 PUSH2 0xCBA JUMP JUMPDEST PUSH2 0x87D JUMP JUMPDEST PUSH2 0x20B PUSH2 0x958 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 DUP2 GT ISZERO PUSH2 0x2C6 JUMPI PUSH2 0x2C6 PUSH2 0xBEA JUMP JUMPDEST EQ PUSH2 0x2EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x334 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 PUSH1 0xFF NOT SWAP1 SWAP2 AND SWAP1 PUSH1 0x1 SWAP1 DUP5 SWAP1 DUP2 GT ISZERO PUSH2 0x36D JUMPI PUSH2 0x36D PUSH2 0xBEA JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x386 JUMPI PUSH2 0x386 PUSH2 0xBEA JUMP JUMPDEST EQ PUSH2 0x3B1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND SWAP1 SSTORE JUMPDEST PUSH32 0x4AC36FA53F167CEB85964BE512E01DE2A3B8BDB9862F917DA079DEEEFF689B38 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3E2 SWAP3 SWAP2 SWAP1 PUSH2 0xD11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x3F6 PUSH2 0xA41 JUMP JUMPDEST PUSH2 0x3FF PUSH0 PUSH2 0xA6D JUMP JUMPDEST JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x43B JUMPI POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 DUP2 GT ISZERO PUSH2 0x439 JUMPI PUSH2 0x439 PUSH2 0xBEA JUMP JUMPDEST EQ JUMPDEST PUSH2 0x476 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x155B985D5D1A1BDC9A5E9959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x4A6 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0xD42 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x536 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2737BA103932B9BA30BAB930B73A1037BBB732B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x57E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657374617572616E7420646F6573206E6F7420657869737400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x6 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE PUSH32 0x69A85D8F30649B59EEB2B4393EA9EB9C9ED001F6974226D94A7FA2DFD562F15B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 DUP2 GT ISZERO PUSH2 0x693 JUMPI PUSH2 0x693 PUSH2 0xBEA JUMP JUMPDEST EQ PUSH2 0x6B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0xCDA JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 PUSH2 0x6C5 PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 POP DUP1 PUSH2 0x72B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F2066756E647320617661696C61626C65 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 PUSH2 0x740 PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH2 0x79A SWAP1 DUP3 AND PUSH2 0x78B PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0xABC JUMP JUMPDEST PUSH32 0x15ED0A7026C7F7B2319E041DA1E43E0B566E892499962BC6B464292EF9D38757 PUSH2 0x7CC PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND PUSH1 0x20 DUP4 ADD MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x812 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x10 MUL SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x848 PUSH2 0xA41 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x871 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x87A DUP2 PUSH2 0xA6D JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 DUP2 GT ISZERO PUSH2 0x8A2 JUMPI PUSH2 0x8A2 PUSH2 0xBEA JUMP JUMPDEST EQ PUSH2 0x8BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x14 PUSH1 0xFF DUP3 AND GT ISZERO PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0xA6CAE4ECD2C6CA40CCCACA40E8DEDE40D0D2CED PUSH1 0x63 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL PUSH1 0xFF DUP5 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC2E7293B347AC956898A90E36061EF247C8D3516F25E87A91009BE115CE27AC4 SWAP1 PUSH1 0x20 ADD PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE DUP1 DUP5 MSTORE PUSH1 0x4 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD DUP1 DUP10 ADD DUP3 SSTORE SWAP1 DUP6 MSTORE DUP4 DUP6 KECCAK256 PUSH1 0x2 DUP3 DIV ADD DUP1 SLOAD SWAP2 SWAP1 SWAP9 AND PUSH1 0x10 MUL PUSH2 0x100 EXP SWAP7 DUP8 MUL NOT AND SWAP6 DUP6 MUL SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP6 SSTORE DUP5 MLOAD DUP4 DUP2 MSTORE SWAP1 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP3 SWAP1 SWAP2 PUSH32 0xBAFBC0BFD4AFD8A222B8CD09B01CE310B06B0BEB42503EA91A76135E6A532E92 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 PUSH0 PUSH2 0xA15 DUP4 PUSH2 0xD61 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0xAE6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCF479181 PUSH1 0xE0 SHL DUP2 MSTORE SELFBALANCE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xB30 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB35 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xB48 JUMPI PUSH2 0xB48 DUP2 PUSH2 0xB4E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xB5E JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB8D JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBA3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xBAC DUP4 PUSH2 0xB77 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0xBBF JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBDA JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xBE3 DUP3 PUSH2 0xB77 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0xC1A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xC2C DUP3 DUP5 PUSH2 0xBFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB8D JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC59 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xC62 DUP4 PUSH2 0xB77 JUMP JUMPDEST SWAP2 POP PUSH2 0xC70 PUSH1 0x20 DUP5 ADD PUSH2 0xC32 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC89 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xBE3 DUP3 PUSH2 0xC32 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCA3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xCAC DUP4 PUSH2 0xB77 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCCA JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xBE3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65643A2041646D696E206F6E6C790000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD PUSH2 0xBE3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBFE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0xC2C JUMPI PUSH2 0xC2C PUSH2 0xD2E JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 SUB PUSH2 0xD82 JUMPI PUSH2 0xD82 PUSH2 0xD2E JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA7 REVERT 0xA9 MSTORE8 0x4C NOT PUSH21 0xA615D7B81ADE2632C397A89D9409DC994E977ACEEC DUP15 BLOBBASEFEE SHR PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "170:3099:4:-:0;;;336:1;301:36;;-1:-1:-1;;;;;;344:37:4;;;;;1314:83;;;;;;;;;-1:-1:-1;1336:10:4;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;160:51:5;133:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1365:10:4::1;1359:17;::::0;;;1379:10:::1;1359:17;::::0;;;;;;;:30;;-1:-1:-1;;1359:30:4::1;::::0;;::::1;::::0;;170:3099;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;222:127:5:-;170:3099:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MAX_SERVICE_FEE_481": {
									"entryPoint": null,
									"id": 481,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2625,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_419": {
									"entryPoint": null,
									"id": 419,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_406": {
									"entryPoint": 2894,
									"id": 406,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2669,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addPendingWithdrawal_805": {
									"entryPoint": 1025,
									"id": 805,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@assignRole_709": {
									"entryPoint": 673,
									"id": 709,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@assignStaff_666": {
									"entryPoint": 1230,
									"id": 666,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@ownerRestaurants_495": {
									"entryPoint": 2041,
									"id": 495,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingWithdrawals_490": {
									"entryPoint": null,
									"id": 490,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@registerRestaurant_615": {
									"entryPoint": 2392,
									"id": 615,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1006,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@restaurantOwners_499": {
									"entryPoint": null,
									"id": 499,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@roles_486": {
									"entryPoint": null,
									"id": 486,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sendValue_205": {
									"entryPoint": 2748,
									"id": 205,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@serviceFeePercentage_478": {
									"entryPoint": null,
									"id": 478,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setServiceFeePercentage_732": {
									"entryPoint": 2173,
									"id": 732,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@staffRestaurant_503": {
									"entryPoint": null,
									"id": 503,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2112,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawServiceFees_774": {
									"entryPoint": 1646,
									"id": 774,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 2935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_enum$_Role_$472": {
									"entryPoint": 2962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint128": {
									"entryPoint": 3144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint128": {
									"entryPoint": 3193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8": {
									"entryPoint": 3258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint128": {
									"entryPoint": 3122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_enum_Role": {
									"entryPoint": 3070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_enum$_Role_$472__to_t_address_t_uint8__fromStack_reversed": {
									"entryPoint": 3345,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint128__to_t_address_t_uint128__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_Role_$472__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1864f6ba8e67520bd13921f2bc328aff378bb8aa77729a9ff30bb6681c7eb9b1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_af0c48bf390882f3b30e7d67400cc7d549345aa09ba3f0aed93c2f4d89ac3bf6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3290,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e9ced9c0261d8a5c82aa7fb72bab9d19d9ca5cb882ff18a21fecb19a75397620__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fa7c4a9bc5939b8921d635709feaf3071f1ec42fadc192e6bc083ec06fa4fe08__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ffb413f83d4289b35c6fac3b8d2317022415a07bb213b03835936f9b7bebeebe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint128_t_address__to_t_uint128_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint128": {
									"entryPoint": 3394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint128": {
									"entryPoint": 3425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3374,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 3050,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7554:5",
										"nodeType": "YulBlock",
										"src": "0:7554:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "111:87:5",
													"nodeType": "YulBlock",
													"src": "111:87:5",
													"statements": [
														{
															"nativeSrc": "121:26:5",
															"nodeType": "YulAssignment",
															"src": "121:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "133:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "133:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "144:2:5",
																		"nodeType": "YulLiteral",
																		"src": "144:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "129:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "129:3:5"
																},
																"nativeSrc": "129:18:5",
																"nodeType": "YulFunctionCall",
																"src": "129:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "121:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "121:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "163:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "163:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "178:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "178:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "186:4:5",
																				"nodeType": "YulLiteral",
																				"src": "186:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "174:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "174:3:5"
																		},
																		"nativeSrc": "174:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "174:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "156:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "156:6:5"
																},
																"nativeSrc": "156:36:5",
																"nodeType": "YulFunctionCall",
																"src": "156:36:5"
															},
															"nativeSrc": "156:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "156:36:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "14:184:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "80:9:5",
														"nodeType": "YulTypedName",
														"src": "80:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "91:6:5",
														"nodeType": "YulTypedName",
														"src": "91:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "102:4:5",
														"nodeType": "YulTypedName",
														"src": "102:4:5",
														"type": ""
													}
												],
												"src": "14:184:5"
											},
											{
												"body": {
													"nativeSrc": "252:124:5",
													"nodeType": "YulBlock",
													"src": "252:124:5",
													"statements": [
														{
															"nativeSrc": "262:29:5",
															"nodeType": "YulAssignment",
															"src": "262:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "284:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "284:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "271:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "271:12:5"
																},
																"nativeSrc": "271:20:5",
																"nodeType": "YulFunctionCall",
																"src": "271:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "262:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "262:5:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "354:16:5",
																"nodeType": "YulBlock",
																"src": "354:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "363:1:5",
																					"nodeType": "YulLiteral",
																					"src": "363:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "366:1:5",
																					"nodeType": "YulLiteral",
																					"src": "366:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "356:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "356:6:5"
																			},
																			"nativeSrc": "356:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "356:12:5"
																		},
																		"nativeSrc": "356:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "356:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "313:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "313:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "324:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "324:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "339:3:5",
																										"nodeType": "YulLiteral",
																										"src": "339:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "344:1:5",
																										"nodeType": "YulLiteral",
																										"src": "344:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "335:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "335:3:5"
																								},
																								"nativeSrc": "335:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "335:11:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "348:1:5",
																								"nodeType": "YulLiteral",
																								"src": "348:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "331:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "331:3:5"
																						},
																						"nativeSrc": "331:19:5",
																						"nodeType": "YulFunctionCall",
																						"src": "331:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "320:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "320:3:5"
																				},
																				"nativeSrc": "320:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "320:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "310:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "310:2:5"
																		},
																		"nativeSrc": "310:42:5",
																		"nodeType": "YulFunctionCall",
																		"src": "310:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "303:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "303:6:5"
																},
																"nativeSrc": "303:50:5",
																"nodeType": "YulFunctionCall",
																"src": "303:50:5"
															},
															"nativeSrc": "300:70:5",
															"nodeType": "YulIf",
															"src": "300:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "203:173:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "231:6:5",
														"nodeType": "YulTypedName",
														"src": "231:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "242:5:5",
														"nodeType": "YulTypedName",
														"src": "242:5:5",
														"type": ""
													}
												],
												"src": "203:173:5"
											},
											{
												"body": {
													"nativeSrc": "476:243:5",
													"nodeType": "YulBlock",
													"src": "476:243:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "522:16:5",
																"nodeType": "YulBlock",
																"src": "522:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "531:1:5",
																					"nodeType": "YulLiteral",
																					"src": "531:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "534:1:5",
																					"nodeType": "YulLiteral",
																					"src": "534:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "524:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "524:6:5"
																			},
																			"nativeSrc": "524:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "524:12:5"
																		},
																		"nativeSrc": "524:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "524:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "497:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "497:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "506:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "506:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "493:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "493:3:5"
																		},
																		"nativeSrc": "493:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "493:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "518:2:5",
																		"nodeType": "YulLiteral",
																		"src": "518:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "489:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "489:3:5"
																},
																"nativeSrc": "489:32:5",
																"nodeType": "YulFunctionCall",
																"src": "489:32:5"
															},
															"nativeSrc": "486:52:5",
															"nodeType": "YulIf",
															"src": "486:52:5"
														},
														{
															"nativeSrc": "547:39:5",
															"nodeType": "YulAssignment",
															"src": "547:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "576:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "576:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "557:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "557:18:5"
																},
																"nativeSrc": "557:29:5",
																"nodeType": "YulFunctionCall",
																"src": "557:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "547:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "547:6:5"
																}
															]
														},
														{
															"nativeSrc": "595:45:5",
															"nodeType": "YulVariableDeclaration",
															"src": "595:45:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "625:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "625:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "636:2:5",
																				"nodeType": "YulLiteral",
																				"src": "636:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "621:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "621:3:5"
																		},
																		"nativeSrc": "621:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "621:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "608:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "608:12:5"
																},
																"nativeSrc": "608:32:5",
																"nodeType": "YulFunctionCall",
																"src": "608:32:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "599:5:5",
																	"nodeType": "YulTypedName",
																	"src": "599:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "673:16:5",
																"nodeType": "YulBlock",
																"src": "673:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "682:1:5",
																					"nodeType": "YulLiteral",
																					"src": "682:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "685:1:5",
																					"nodeType": "YulLiteral",
																					"src": "685:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "675:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "675:6:5"
																			},
																			"nativeSrc": "675:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "675:12:5"
																		},
																		"nativeSrc": "675:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "675:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "662:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "662:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "669:1:5",
																				"nodeType": "YulLiteral",
																				"src": "669:1:5",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "659:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "659:2:5"
																		},
																		"nativeSrc": "659:12:5",
																		"nodeType": "YulFunctionCall",
																		"src": "659:12:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "652:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "652:6:5"
																},
																"nativeSrc": "652:20:5",
																"nodeType": "YulFunctionCall",
																"src": "652:20:5"
															},
															"nativeSrc": "649:40:5",
															"nodeType": "YulIf",
															"src": "649:40:5"
														},
														{
															"nativeSrc": "698:15:5",
															"nodeType": "YulAssignment",
															"src": "698:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "708:5:5",
																"nodeType": "YulIdentifier",
																"src": "708:5:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "698:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "698:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_enum$_Role_$472",
												"nativeSrc": "381:338:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "434:9:5",
														"nodeType": "YulTypedName",
														"src": "434:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "445:7:5",
														"nodeType": "YulTypedName",
														"src": "445:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "457:6:5",
														"nodeType": "YulTypedName",
														"src": "457:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "465:6:5",
														"nodeType": "YulTypedName",
														"src": "465:6:5",
														"type": ""
													}
												],
												"src": "381:338:5"
											},
											{
												"body": {
													"nativeSrc": "825:102:5",
													"nodeType": "YulBlock",
													"src": "825:102:5",
													"statements": [
														{
															"nativeSrc": "835:26:5",
															"nodeType": "YulAssignment",
															"src": "835:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "847:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "847:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "858:2:5",
																		"nodeType": "YulLiteral",
																		"src": "858:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "843:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "843:3:5"
																},
																"nativeSrc": "843:18:5",
																"nodeType": "YulFunctionCall",
																"src": "843:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "835:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "835:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "877:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "877:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "892:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "892:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "908:3:5",
																								"nodeType": "YulLiteral",
																								"src": "908:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "913:1:5",
																								"nodeType": "YulLiteral",
																								"src": "913:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "904:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "904:3:5"
																						},
																						"nativeSrc": "904:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "904:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "917:1:5",
																						"nodeType": "YulLiteral",
																						"src": "917:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "900:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "900:3:5"
																				},
																				"nativeSrc": "900:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "900:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "888:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "888:3:5"
																		},
																		"nativeSrc": "888:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "888:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "870:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "870:6:5"
																},
																"nativeSrc": "870:51:5",
																"nodeType": "YulFunctionCall",
																"src": "870:51:5"
															},
															"nativeSrc": "870:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "870:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "724:203:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "794:9:5",
														"nodeType": "YulTypedName",
														"src": "794:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "805:6:5",
														"nodeType": "YulTypedName",
														"src": "805:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "816:4:5",
														"nodeType": "YulTypedName",
														"src": "816:4:5",
														"type": ""
													}
												],
												"src": "724:203:5"
											},
											{
												"body": {
													"nativeSrc": "1002:116:5",
													"nodeType": "YulBlock",
													"src": "1002:116:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1048:16:5",
																"nodeType": "YulBlock",
																"src": "1048:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1057:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1057:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1060:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1060:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1050:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1050:6:5"
																			},
																			"nativeSrc": "1050:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1050:12:5"
																		},
																		"nativeSrc": "1050:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1050:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1023:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1023:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1032:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1032:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1019:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1019:3:5"
																		},
																		"nativeSrc": "1019:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1019:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1044:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1044:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1015:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1015:3:5"
																},
																"nativeSrc": "1015:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1015:32:5"
															},
															"nativeSrc": "1012:52:5",
															"nodeType": "YulIf",
															"src": "1012:52:5"
														},
														{
															"nativeSrc": "1073:39:5",
															"nodeType": "YulAssignment",
															"src": "1073:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1102:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1102:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1083:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1083:18:5"
																},
																"nativeSrc": "1083:29:5",
																"nodeType": "YulFunctionCall",
																"src": "1083:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1073:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1073:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "932:186:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "968:9:5",
														"nodeType": "YulTypedName",
														"src": "968:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "979:7:5",
														"nodeType": "YulTypedName",
														"src": "979:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "991:6:5",
														"nodeType": "YulTypedName",
														"src": "991:6:5",
														"type": ""
													}
												],
												"src": "932:186:5"
											},
											{
												"body": {
													"nativeSrc": "1155:95:5",
													"nodeType": "YulBlock",
													"src": "1155:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1172:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1172:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1179:3:5",
																				"nodeType": "YulLiteral",
																				"src": "1179:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1184:10:5",
																				"nodeType": "YulLiteral",
																				"src": "1184:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1175:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1175:3:5"
																		},
																		"nativeSrc": "1175:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1175:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1165:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1165:6:5"
																},
																"nativeSrc": "1165:31:5",
																"nodeType": "YulFunctionCall",
																"src": "1165:31:5"
															},
															"nativeSrc": "1165:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "1165:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1212:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1212:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1215:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1215:4:5",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1205:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1205:6:5"
																},
																"nativeSrc": "1205:15:5",
																"nodeType": "YulFunctionCall",
																"src": "1205:15:5"
															},
															"nativeSrc": "1205:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "1205:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1236:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1236:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1239:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1239:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1229:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1229:6:5"
																},
																"nativeSrc": "1229:15:5",
																"nodeType": "YulFunctionCall",
																"src": "1229:15:5"
															},
															"nativeSrc": "1229:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "1229:15:5"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "1123:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1123:127:5"
											},
											{
												"body": {
													"nativeSrc": "1301:186:5",
													"nodeType": "YulBlock",
													"src": "1301:186:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1343:111:5",
																"nodeType": "YulBlock",
																"src": "1343:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1364:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1364:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1371:3:5",
																							"nodeType": "YulLiteral",
																							"src": "1371:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1376:10:5",
																							"nodeType": "YulLiteral",
																							"src": "1376:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1367:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "1367:3:5"
																					},
																					"nativeSrc": "1367:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1367:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1357:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1357:6:5"
																			},
																			"nativeSrc": "1357:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1357:31:5"
																		},
																		"nativeSrc": "1357:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1357:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1408:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1408:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1411:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1411:4:5",
																					"type": "",
																					"value": "0x21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1401:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1401:6:5"
																			},
																			"nativeSrc": "1401:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1401:15:5"
																		},
																		"nativeSrc": "1401:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1401:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1436:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1436:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1439:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1439:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1429:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1429:6:5"
																			},
																			"nativeSrc": "1429:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1429:15:5"
																		},
																		"nativeSrc": "1429:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1429:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1324:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1324:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1331:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1331:1:5",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1321:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1321:2:5"
																		},
																		"nativeSrc": "1321:12:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1321:12:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1314:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1314:6:5"
																},
																"nativeSrc": "1314:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1314:20:5"
															},
															"nativeSrc": "1311:143:5",
															"nodeType": "YulIf",
															"src": "1311:143:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1470:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1470:3:5"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1475:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1475:5:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1463:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1463:6:5"
																},
																"nativeSrc": "1463:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1463:18:5"
															},
															"nativeSrc": "1463:18:5",
															"nodeType": "YulExpressionStatement",
															"src": "1463:18:5"
														}
													]
												},
												"name": "abi_encode_enum_Role",
												"nativeSrc": "1255:232:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1285:5:5",
														"nodeType": "YulTypedName",
														"src": "1285:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1292:3:5",
														"nodeType": "YulTypedName",
														"src": "1292:3:5",
														"type": ""
													}
												],
												"src": "1255:232:5"
											},
											{
												"body": {
													"nativeSrc": "1599:90:5",
													"nodeType": "YulBlock",
													"src": "1599:90:5",
													"statements": [
														{
															"nativeSrc": "1609:26:5",
															"nodeType": "YulAssignment",
															"src": "1609:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1621:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1621:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1632:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1632:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1617:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1617:3:5"
																},
																"nativeSrc": "1617:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1617:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1609:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1609:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1665:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1665:6:5"
																	},
																	{
																		"name": "headStart",
																		"nativeSrc": "1673:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1673:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_enum_Role",
																	"nativeSrc": "1644:20:5",
																	"nodeType": "YulIdentifier",
																	"src": "1644:20:5"
																},
																"nativeSrc": "1644:39:5",
																"nodeType": "YulFunctionCall",
																"src": "1644:39:5"
															},
															"nativeSrc": "1644:39:5",
															"nodeType": "YulExpressionStatement",
															"src": "1644:39:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Role_$472__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1492:197:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1568:9:5",
														"nodeType": "YulTypedName",
														"src": "1568:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1579:6:5",
														"nodeType": "YulTypedName",
														"src": "1579:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1590:4:5",
														"nodeType": "YulTypedName",
														"src": "1590:4:5",
														"type": ""
													}
												],
												"src": "1492:197:5"
											},
											{
												"body": {
													"nativeSrc": "1743:139:5",
													"nodeType": "YulBlock",
													"src": "1743:139:5",
													"statements": [
														{
															"nativeSrc": "1753:29:5",
															"nodeType": "YulAssignment",
															"src": "1753:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1775:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1775:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1762:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1762:12:5"
																},
																"nativeSrc": "1762:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1762:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1753:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1753:5:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1860:16:5",
																"nodeType": "YulBlock",
																"src": "1860:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1869:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1869:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1872:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1872:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1862:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:5"
																			},
																			"nativeSrc": "1862:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1862:12:5"
																		},
																		"nativeSrc": "1862:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1862:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1804:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1804:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1815:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1815:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1822:34:5",
																						"nodeType": "YulLiteral",
																						"src": "1822:34:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1811:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1811:3:5"
																				},
																				"nativeSrc": "1811:46:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1811:46:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1801:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1801:2:5"
																		},
																		"nativeSrc": "1801:57:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1801:57:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1794:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1794:6:5"
																},
																"nativeSrc": "1794:65:5",
																"nodeType": "YulFunctionCall",
																"src": "1794:65:5"
															},
															"nativeSrc": "1791:85:5",
															"nodeType": "YulIf",
															"src": "1791:85:5"
														}
													]
												},
												"name": "abi_decode_uint128",
												"nativeSrc": "1694:188:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1722:6:5",
														"nodeType": "YulTypedName",
														"src": "1722:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1733:5:5",
														"nodeType": "YulTypedName",
														"src": "1733:5:5",
														"type": ""
													}
												],
												"src": "1694:188:5"
											},
											{
												"body": {
													"nativeSrc": "1974:173:5",
													"nodeType": "YulBlock",
													"src": "1974:173:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2020:16:5",
																"nodeType": "YulBlock",
																"src": "2020:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2029:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2029:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2032:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2032:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2022:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2022:6:5"
																			},
																			"nativeSrc": "2022:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2022:12:5"
																		},
																		"nativeSrc": "2022:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2022:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1995:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1995:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2004:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2004:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1991:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1991:3:5"
																		},
																		"nativeSrc": "1991:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1991:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2016:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2016:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1987:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1987:3:5"
																},
																"nativeSrc": "1987:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1987:32:5"
															},
															"nativeSrc": "1984:52:5",
															"nodeType": "YulIf",
															"src": "1984:52:5"
														},
														{
															"nativeSrc": "2045:39:5",
															"nodeType": "YulAssignment",
															"src": "2045:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2074:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2074:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2055:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2055:18:5"
																},
																"nativeSrc": "2055:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2055:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2045:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2045:6:5"
																}
															]
														},
														{
															"nativeSrc": "2093:48:5",
															"nodeType": "YulAssignment",
															"src": "2093:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2126:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2126:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2137:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2137:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:5"
																		},
																		"nativeSrc": "2122:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint128",
																	"nativeSrc": "2103:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2103:18:5"
																},
																"nativeSrc": "2103:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2103:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2093:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2093:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint128",
												"nativeSrc": "1887:260:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1932:9:5",
														"nodeType": "YulTypedName",
														"src": "1932:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1943:7:5",
														"nodeType": "YulTypedName",
														"src": "1943:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1955:6:5",
														"nodeType": "YulTypedName",
														"src": "1955:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1963:6:5",
														"nodeType": "YulTypedName",
														"src": "1963:6:5",
														"type": ""
													}
												],
												"src": "1887:260:5"
											},
											{
												"body": {
													"nativeSrc": "2222:116:5",
													"nodeType": "YulBlock",
													"src": "2222:116:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2268:16:5",
																"nodeType": "YulBlock",
																"src": "2268:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2277:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2277:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2280:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2280:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2270:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2270:6:5"
																			},
																			"nativeSrc": "2270:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2270:12:5"
																		},
																		"nativeSrc": "2270:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2270:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2243:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2243:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2252:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2252:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2239:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2239:3:5"
																		},
																		"nativeSrc": "2239:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2239:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2264:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2264:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2235:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2235:3:5"
																},
																"nativeSrc": "2235:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2235:32:5"
															},
															"nativeSrc": "2232:52:5",
															"nodeType": "YulIf",
															"src": "2232:52:5"
														},
														{
															"nativeSrc": "2293:39:5",
															"nodeType": "YulAssignment",
															"src": "2293:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2322:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2322:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint128",
																	"nativeSrc": "2303:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2303:18:5"
																},
																"nativeSrc": "2303:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2303:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2293:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2293:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint128",
												"nativeSrc": "2152:186:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2188:9:5",
														"nodeType": "YulTypedName",
														"src": "2188:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2199:7:5",
														"nodeType": "YulTypedName",
														"src": "2199:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2211:6:5",
														"nodeType": "YulTypedName",
														"src": "2211:6:5",
														"type": ""
													}
												],
												"src": "2152:186:5"
											},
											{
												"body": {
													"nativeSrc": "2430:167:5",
													"nodeType": "YulBlock",
													"src": "2430:167:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2476:16:5",
																"nodeType": "YulBlock",
																"src": "2476:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2485:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2485:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2488:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2488:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2478:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2478:6:5"
																			},
																			"nativeSrc": "2478:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2478:12:5"
																		},
																		"nativeSrc": "2478:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2478:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2451:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2451:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2460:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2460:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2447:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2447:3:5"
																		},
																		"nativeSrc": "2447:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2447:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2472:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2472:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2443:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2443:3:5"
																},
																"nativeSrc": "2443:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2443:32:5"
															},
															"nativeSrc": "2440:52:5",
															"nodeType": "YulIf",
															"src": "2440:52:5"
														},
														{
															"nativeSrc": "2501:39:5",
															"nodeType": "YulAssignment",
															"src": "2501:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2530:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2530:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2511:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2511:18:5"
																},
																"nativeSrc": "2511:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2511:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2501:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2501:6:5"
																}
															]
														},
														{
															"nativeSrc": "2549:42:5",
															"nodeType": "YulAssignment",
															"src": "2549:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2576:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2576:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2587:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2587:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2572:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2572:3:5"
																		},
																		"nativeSrc": "2572:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2572:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2559:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2559:12:5"
																},
																"nativeSrc": "2559:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2559:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2549:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2549:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2343:254:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2388:9:5",
														"nodeType": "YulTypedName",
														"src": "2388:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2399:7:5",
														"nodeType": "YulTypedName",
														"src": "2399:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2411:6:5",
														"nodeType": "YulTypedName",
														"src": "2411:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2419:6:5",
														"nodeType": "YulTypedName",
														"src": "2419:6:5",
														"type": ""
													}
												],
												"src": "2343:254:5"
											},
											{
												"body": {
													"nativeSrc": "2703:117:5",
													"nodeType": "YulBlock",
													"src": "2703:117:5",
													"statements": [
														{
															"nativeSrc": "2713:26:5",
															"nodeType": "YulAssignment",
															"src": "2713:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2725:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2725:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2736:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2736:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2721:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2721:3:5"
																},
																"nativeSrc": "2721:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2721:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2713:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2713:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2755:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2755:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2770:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2770:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2778:34:5",
																				"nodeType": "YulLiteral",
																				"src": "2778:34:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2766:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2766:3:5"
																		},
																		"nativeSrc": "2766:47:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2766:47:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2748:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2748:6:5"
																},
																"nativeSrc": "2748:66:5",
																"nodeType": "YulFunctionCall",
																"src": "2748:66:5"
															},
															"nativeSrc": "2748:66:5",
															"nodeType": "YulExpressionStatement",
															"src": "2748:66:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed",
												"nativeSrc": "2602:218:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2672:9:5",
														"nodeType": "YulTypedName",
														"src": "2672:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2683:6:5",
														"nodeType": "YulTypedName",
														"src": "2683:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2694:4:5",
														"nodeType": "YulTypedName",
														"src": "2694:4:5",
														"type": ""
													}
												],
												"src": "2602:218:5"
											},
											{
												"body": {
													"nativeSrc": "2893:201:5",
													"nodeType": "YulBlock",
													"src": "2893:201:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2939:16:5",
																"nodeType": "YulBlock",
																"src": "2939:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2948:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2948:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2951:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2951:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2941:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2941:6:5"
																			},
																			"nativeSrc": "2941:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2941:12:5"
																		},
																		"nativeSrc": "2941:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2941:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2914:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2914:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2923:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2923:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2910:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2910:3:5"
																		},
																		"nativeSrc": "2910:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2910:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2935:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2935:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2906:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2906:3:5"
																},
																"nativeSrc": "2906:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2906:32:5"
															},
															"nativeSrc": "2903:52:5",
															"nodeType": "YulIf",
															"src": "2903:52:5"
														},
														{
															"nativeSrc": "2964:36:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2964:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2990:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2990:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2977:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2977:12:5"
																},
																"nativeSrc": "2977:23:5",
																"nodeType": "YulFunctionCall",
																"src": "2977:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2968:5:5",
																	"nodeType": "YulTypedName",
																	"src": "2968:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3048:16:5",
																"nodeType": "YulBlock",
																"src": "3048:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3057:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3057:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3060:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3060:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3050:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3050:6:5"
																			},
																			"nativeSrc": "3050:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3050:12:5"
																		},
																		"nativeSrc": "3050:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3050:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3022:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3022:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3033:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "3033:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3040:4:5",
																						"nodeType": "YulLiteral",
																						"src": "3040:4:5",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "3029:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3029:3:5"
																				},
																				"nativeSrc": "3029:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3029:16:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3019:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "3019:2:5"
																		},
																		"nativeSrc": "3019:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3019:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3012:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3012:6:5"
																},
																"nativeSrc": "3012:35:5",
																"nodeType": "YulFunctionCall",
																"src": "3012:35:5"
															},
															"nativeSrc": "3009:55:5",
															"nodeType": "YulIf",
															"src": "3009:55:5"
														},
														{
															"nativeSrc": "3073:15:5",
															"nodeType": "YulAssignment",
															"src": "3073:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "3083:5:5",
																"nodeType": "YulIdentifier",
																"src": "3083:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3073:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3073:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8",
												"nativeSrc": "2825:269:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2859:9:5",
														"nodeType": "YulTypedName",
														"src": "2859:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2870:7:5",
														"nodeType": "YulTypedName",
														"src": "2870:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2882:6:5",
														"nodeType": "YulTypedName",
														"src": "2882:6:5",
														"type": ""
													}
												],
												"src": "2825:269:5"
											},
											{
												"body": {
													"nativeSrc": "3273:174:5",
													"nodeType": "YulBlock",
													"src": "3273:174:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3290:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3290:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3301:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3301:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3283:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3283:6:5"
																},
																"nativeSrc": "3283:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3283:21:5"
															},
															"nativeSrc": "3283:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "3283:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3324:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3324:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3335:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3335:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3320:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3320:3:5"
																		},
																		"nativeSrc": "3320:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3320:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3340:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3340:2:5",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3313:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3313:6:5"
																},
																"nativeSrc": "3313:30:5",
																"nodeType": "YulFunctionCall",
																"src": "3313:30:5"
															},
															"nativeSrc": "3313:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "3313:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3363:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3363:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3374:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3374:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3359:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3359:3:5"
																		},
																		"nativeSrc": "3359:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3359:18:5"
																	},
																	{
																		"hexValue": "556e617574686f72697a65643a2041646d696e206f6e6c79",
																		"kind": "string",
																		"nativeSrc": "3379:26:5",
																		"nodeType": "YulLiteral",
																		"src": "3379:26:5",
																		"type": "",
																		"value": "Unauthorized: Admin only"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3352:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3352:6:5"
																},
																"nativeSrc": "3352:54:5",
																"nodeType": "YulFunctionCall",
																"src": "3352:54:5"
															},
															"nativeSrc": "3352:54:5",
															"nodeType": "YulExpressionStatement",
															"src": "3352:54:5"
														},
														{
															"nativeSrc": "3415:26:5",
															"nodeType": "YulAssignment",
															"src": "3415:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3427:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3427:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3438:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3438:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3423:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3423:3:5"
																},
																"nativeSrc": "3423:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3423:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3415:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3415:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_af0c48bf390882f3b30e7d67400cc7d549345aa09ba3f0aed93c2f4d89ac3bf6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3099:348:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3250:9:5",
														"nodeType": "YulTypedName",
														"src": "3250:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3264:4:5",
														"nodeType": "YulTypedName",
														"src": "3264:4:5",
														"type": ""
													}
												],
												"src": "3099:348:5"
											},
											{
												"body": {
													"nativeSrc": "3626:165:5",
													"nodeType": "YulBlock",
													"src": "3626:165:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3643:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3643:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3654:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3654:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3636:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3636:6:5"
																},
																"nativeSrc": "3636:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3636:21:5"
															},
															"nativeSrc": "3636:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "3636:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3677:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3677:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3688:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3688:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3673:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3673:3:5"
																		},
																		"nativeSrc": "3673:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3673:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3693:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3693:2:5",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3666:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3666:6:5"
																},
																"nativeSrc": "3666:30:5",
																"nodeType": "YulFunctionCall",
																"src": "3666:30:5"
															},
															"nativeSrc": "3666:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "3666:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3716:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3716:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3727:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3727:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3712:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3712:3:5"
																		},
																		"nativeSrc": "3712:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3712:18:5"
																	},
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"kind": "string",
																		"nativeSrc": "3732:17:5",
																		"nodeType": "YulLiteral",
																		"src": "3732:17:5",
																		"type": "",
																		"value": "Invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3705:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3705:6:5"
																},
																"nativeSrc": "3705:45:5",
																"nodeType": "YulFunctionCall",
																"src": "3705:45:5"
															},
															"nativeSrc": "3705:45:5",
															"nodeType": "YulExpressionStatement",
															"src": "3705:45:5"
														},
														{
															"nativeSrc": "3759:26:5",
															"nodeType": "YulAssignment",
															"src": "3759:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3771:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3771:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3782:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3782:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3767:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3767:3:5"
																},
																"nativeSrc": "3767:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3767:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3759:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3759:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3452:339:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3603:9:5",
														"nodeType": "YulTypedName",
														"src": "3603:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3617:4:5",
														"nodeType": "YulTypedName",
														"src": "3617:4:5",
														"type": ""
													}
												],
												"src": "3452:339:5"
											},
											{
												"body": {
													"nativeSrc": "3931:159:5",
													"nodeType": "YulBlock",
													"src": "3931:159:5",
													"statements": [
														{
															"nativeSrc": "3941:26:5",
															"nodeType": "YulAssignment",
															"src": "3941:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3953:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3953:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3964:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3964:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3949:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3949:3:5"
																},
																"nativeSrc": "3949:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3949:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3941:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3941:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3983:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3983:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3998:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3998:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4014:3:5",
																								"nodeType": "YulLiteral",
																								"src": "4014:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4019:1:5",
																								"nodeType": "YulLiteral",
																								"src": "4019:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4010:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "4010:3:5"
																						},
																						"nativeSrc": "4010:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "4010:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4023:1:5",
																						"nodeType": "YulLiteral",
																						"src": "4023:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4006:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4006:3:5"
																				},
																				"nativeSrc": "4006:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4006:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3994:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3994:3:5"
																		},
																		"nativeSrc": "3994:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3994:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3976:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3976:6:5"
																},
																"nativeSrc": "3976:51:5",
																"nodeType": "YulFunctionCall",
																"src": "3976:51:5"
															},
															"nativeSrc": "3976:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "3976:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4057:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4057:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4069:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4069:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4080:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4080:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4065:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4065:3:5"
																		},
																		"nativeSrc": "4065:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4065:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_enum_Role",
																	"nativeSrc": "4036:20:5",
																	"nodeType": "YulIdentifier",
																	"src": "4036:20:5"
																},
																"nativeSrc": "4036:48:5",
																"nodeType": "YulFunctionCall",
																"src": "4036:48:5"
															},
															"nativeSrc": "4036:48:5",
															"nodeType": "YulExpressionStatement",
															"src": "4036:48:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_enum$_Role_$472__to_t_address_t_uint8__fromStack_reversed",
												"nativeSrc": "3796:294:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3892:9:5",
														"nodeType": "YulTypedName",
														"src": "3892:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3903:6:5",
														"nodeType": "YulTypedName",
														"src": "3903:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3911:6:5",
														"nodeType": "YulTypedName",
														"src": "3911:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3922:4:5",
														"nodeType": "YulTypedName",
														"src": "3922:4:5",
														"type": ""
													}
												],
												"src": "3796:294:5"
											},
											{
												"body": {
													"nativeSrc": "4269:162:5",
													"nodeType": "YulBlock",
													"src": "4269:162:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4286:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4286:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4297:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4297:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4279:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4279:6:5"
																},
																"nativeSrc": "4279:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4279:21:5"
															},
															"nativeSrc": "4279:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "4279:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4320:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4320:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4331:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4331:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4316:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4316:3:5"
																		},
																		"nativeSrc": "4316:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4316:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4336:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4336:2:5",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4309:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4309:6:5"
																},
																"nativeSrc": "4309:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4309:30:5"
															},
															"nativeSrc": "4309:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "4309:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4359:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4359:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4370:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4370:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4355:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4355:3:5"
																		},
																		"nativeSrc": "4355:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4355:18:5"
																	},
																	{
																		"hexValue": "556e617574686f72697a6564",
																		"kind": "string",
																		"nativeSrc": "4375:14:5",
																		"nodeType": "YulLiteral",
																		"src": "4375:14:5",
																		"type": "",
																		"value": "Unauthorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4348:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4348:6:5"
																},
																"nativeSrc": "4348:42:5",
																"nodeType": "YulFunctionCall",
																"src": "4348:42:5"
															},
															"nativeSrc": "4348:42:5",
															"nodeType": "YulExpressionStatement",
															"src": "4348:42:5"
														},
														{
															"nativeSrc": "4399:26:5",
															"nodeType": "YulAssignment",
															"src": "4399:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4411:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4411:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4422:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4422:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4407:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4407:3:5"
																},
																"nativeSrc": "4407:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4407:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4399:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4399:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4095:336:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4246:9:5",
														"nodeType": "YulTypedName",
														"src": "4246:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4260:4:5",
														"nodeType": "YulTypedName",
														"src": "4260:4:5",
														"type": ""
													}
												],
												"src": "4095:336:5"
											},
											{
												"body": {
													"nativeSrc": "4468:95:5",
													"nodeType": "YulBlock",
													"src": "4468:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4485:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4485:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4492:3:5",
																				"nodeType": "YulLiteral",
																				"src": "4492:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4497:10:5",
																				"nodeType": "YulLiteral",
																				"src": "4497:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4488:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4488:3:5"
																		},
																		"nativeSrc": "4488:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4488:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4478:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4478:6:5"
																},
																"nativeSrc": "4478:31:5",
																"nodeType": "YulFunctionCall",
																"src": "4478:31:5"
															},
															"nativeSrc": "4478:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "4478:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4525:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4525:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4528:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4528:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4518:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4518:6:5"
																},
																"nativeSrc": "4518:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4518:15:5"
															},
															"nativeSrc": "4518:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "4518:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4549:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4549:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4552:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4552:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4542:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4542:6:5"
																},
																"nativeSrc": "4542:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4542:15:5"
															},
															"nativeSrc": "4542:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "4542:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4436:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "4436:127:5"
											},
											{
												"body": {
													"nativeSrc": "4616:192:5",
													"nodeType": "YulBlock",
													"src": "4616:192:5",
													"statements": [
														{
															"nativeSrc": "4626:98:5",
															"nodeType": "YulAssignment",
															"src": "4626:98:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4641:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "4641:1:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4644:34:5",
																				"nodeType": "YulLiteral",
																				"src": "4644:34:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4637:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4637:3:5"
																		},
																		"nativeSrc": "4637:42:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4637:42:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "4685:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "4685:1:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4688:34:5",
																				"nodeType": "YulLiteral",
																				"src": "4688:34:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4681:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4681:3:5"
																		},
																		"nativeSrc": "4681:42:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4681:42:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4633:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4633:3:5"
																},
																"nativeSrc": "4633:91:5",
																"nodeType": "YulFunctionCall",
																"src": "4633:91:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4626:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4626:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4780:22:5",
																"nodeType": "YulBlock",
																"src": "4780:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4782:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "4782:16:5"
																			},
																			"nativeSrc": "4782:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4782:18:5"
																		},
																		"nativeSrc": "4782:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4782:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "4739:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4739:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4744:34:5",
																		"nodeType": "YulLiteral",
																		"src": "4744:34:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4736:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4736:2:5"
																},
																"nativeSrc": "4736:43:5",
																"nodeType": "YulFunctionCall",
																"src": "4736:43:5"
															},
															"nativeSrc": "4733:69:5",
															"nodeType": "YulIf",
															"src": "4733:69:5"
														}
													]
												},
												"name": "checked_add_t_uint128",
												"nativeSrc": "4568:240:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4599:1:5",
														"nodeType": "YulTypedName",
														"src": "4599:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4602:1:5",
														"nodeType": "YulTypedName",
														"src": "4602:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4608:3:5",
														"nodeType": "YulTypedName",
														"src": "4608:3:5",
														"type": ""
													}
												],
												"src": "4568:240:5"
											},
											{
												"body": {
													"nativeSrc": "4987:170:5",
													"nodeType": "YulBlock",
													"src": "4987:170:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5004:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5004:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5015:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5015:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4997:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4997:6:5"
																},
																"nativeSrc": "4997:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4997:21:5"
															},
															"nativeSrc": "4997:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "4997:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5038:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5038:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5049:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5049:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5034:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5034:3:5"
																		},
																		"nativeSrc": "5034:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5034:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5054:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5054:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5027:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5027:6:5"
																},
																"nativeSrc": "5027:30:5",
																"nodeType": "YulFunctionCall",
																"src": "5027:30:5"
															},
															"nativeSrc": "5027:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "5027:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5077:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5077:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5088:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5088:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5073:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5073:3:5"
																		},
																		"nativeSrc": "5073:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5073:18:5"
																	},
																	{
																		"hexValue": "4e6f742072657374617572616e74206f776e6572",
																		"kind": "string",
																		"nativeSrc": "5093:22:5",
																		"nodeType": "YulLiteral",
																		"src": "5093:22:5",
																		"type": "",
																		"value": "Not restaurant owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5066:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5066:6:5"
																},
																"nativeSrc": "5066:50:5",
																"nodeType": "YulFunctionCall",
																"src": "5066:50:5"
															},
															"nativeSrc": "5066:50:5",
															"nodeType": "YulExpressionStatement",
															"src": "5066:50:5"
														},
														{
															"nativeSrc": "5125:26:5",
															"nodeType": "YulAssignment",
															"src": "5125:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5137:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5137:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5148:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5148:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5133:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5133:3:5"
																},
																"nativeSrc": "5133:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5133:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5125:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5125:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ffb413f83d4289b35c6fac3b8d2317022415a07bb213b03835936f9b7bebeebe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4813:344:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4964:9:5",
														"nodeType": "YulTypedName",
														"src": "4964:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4978:4:5",
														"nodeType": "YulTypedName",
														"src": "4978:4:5",
														"type": ""
													}
												],
												"src": "4813:344:5"
											},
											{
												"body": {
													"nativeSrc": "5336:175:5",
													"nodeType": "YulBlock",
													"src": "5336:175:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5353:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5353:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5364:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5364:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5346:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5346:6:5"
																},
																"nativeSrc": "5346:21:5",
																"nodeType": "YulFunctionCall",
																"src": "5346:21:5"
															},
															"nativeSrc": "5346:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "5346:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5387:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5387:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5398:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5398:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5383:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5383:3:5"
																		},
																		"nativeSrc": "5383:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5383:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5403:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5403:2:5",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5376:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5376:6:5"
																},
																"nativeSrc": "5376:30:5",
																"nodeType": "YulFunctionCall",
																"src": "5376:30:5"
															},
															"nativeSrc": "5376:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "5376:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5426:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5426:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5437:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5437:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5422:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5422:3:5"
																		},
																		"nativeSrc": "5422:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5422:18:5"
																	},
																	{
																		"hexValue": "52657374617572616e7420646f6573206e6f74206578697374",
																		"kind": "string",
																		"nativeSrc": "5442:27:5",
																		"nodeType": "YulLiteral",
																		"src": "5442:27:5",
																		"type": "",
																		"value": "Restaurant does not exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5415:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5415:6:5"
																},
																"nativeSrc": "5415:55:5",
																"nodeType": "YulFunctionCall",
																"src": "5415:55:5"
															},
															"nativeSrc": "5415:55:5",
															"nodeType": "YulExpressionStatement",
															"src": "5415:55:5"
														},
														{
															"nativeSrc": "5479:26:5",
															"nodeType": "YulAssignment",
															"src": "5479:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5491:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5491:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5502:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5502:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5487:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5487:3:5"
																},
																"nativeSrc": "5487:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5487:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5479:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5479:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e9ced9c0261d8a5c82aa7fb72bab9d19d9ca5cb882ff18a21fecb19a75397620__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5162:349:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5313:9:5",
														"nodeType": "YulTypedName",
														"src": "5313:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5327:4:5",
														"nodeType": "YulTypedName",
														"src": "5327:4:5",
														"type": ""
													}
												],
												"src": "5162:349:5"
											},
											{
												"body": {
													"nativeSrc": "5645:186:5",
													"nodeType": "YulBlock",
													"src": "5645:186:5",
													"statements": [
														{
															"nativeSrc": "5655:26:5",
															"nodeType": "YulAssignment",
															"src": "5655:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5667:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5667:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5678:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5678:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5663:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5663:3:5"
																},
																"nativeSrc": "5663:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5663:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5655:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5655:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5697:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5697:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5712:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5712:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5728:3:5",
																								"nodeType": "YulLiteral",
																								"src": "5728:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5733:1:5",
																								"nodeType": "YulLiteral",
																								"src": "5733:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5724:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "5724:3:5"
																						},
																						"nativeSrc": "5724:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "5724:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5737:1:5",
																						"nodeType": "YulLiteral",
																						"src": "5737:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5720:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5720:3:5"
																				},
																				"nativeSrc": "5720:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5720:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5708:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5708:3:5"
																		},
																		"nativeSrc": "5708:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5708:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5690:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5690:6:5"
																},
																"nativeSrc": "5690:51:5",
																"nodeType": "YulFunctionCall",
																"src": "5690:51:5"
															},
															"nativeSrc": "5690:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "5690:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5761:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5761:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5772:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5772:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5757:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5757:3:5"
																		},
																		"nativeSrc": "5757:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5757:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "5781:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5781:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5789:34:5",
																				"nodeType": "YulLiteral",
																				"src": "5789:34:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5777:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5777:3:5"
																		},
																		"nativeSrc": "5777:47:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5777:47:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5750:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5750:6:5"
																},
																"nativeSrc": "5750:75:5",
																"nodeType": "YulFunctionCall",
																"src": "5750:75:5"
															},
															"nativeSrc": "5750:75:5",
															"nodeType": "YulExpressionStatement",
															"src": "5750:75:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint128__to_t_address_t_uint128__fromStack_reversed",
												"nativeSrc": "5516:315:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5606:9:5",
														"nodeType": "YulTypedName",
														"src": "5606:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5617:6:5",
														"nodeType": "YulTypedName",
														"src": "5617:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5625:6:5",
														"nodeType": "YulTypedName",
														"src": "5625:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5636:4:5",
														"nodeType": "YulTypedName",
														"src": "5636:4:5",
														"type": ""
													}
												],
												"src": "5516:315:5"
											},
											{
												"body": {
													"nativeSrc": "6010:168:5",
													"nodeType": "YulBlock",
													"src": "6010:168:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6027:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6027:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6038:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6038:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6020:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6020:6:5"
																},
																"nativeSrc": "6020:21:5",
																"nodeType": "YulFunctionCall",
																"src": "6020:21:5"
															},
															"nativeSrc": "6020:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "6020:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6061:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6061:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6072:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6072:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6057:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6057:3:5"
																		},
																		"nativeSrc": "6057:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6057:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6077:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6077:2:5",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6050:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6050:6:5"
																},
																"nativeSrc": "6050:30:5",
																"nodeType": "YulFunctionCall",
																"src": "6050:30:5"
															},
															"nativeSrc": "6050:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "6050:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6100:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6100:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6111:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6111:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6096:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6096:3:5"
																		},
																		"nativeSrc": "6096:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6096:18:5"
																	},
																	{
																		"hexValue": "4e6f2066756e647320617661696c61626c65",
																		"kind": "string",
																		"nativeSrc": "6116:20:5",
																		"nodeType": "YulLiteral",
																		"src": "6116:20:5",
																		"type": "",
																		"value": "No funds available"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6089:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6089:6:5"
																},
																"nativeSrc": "6089:48:5",
																"nodeType": "YulFunctionCall",
																"src": "6089:48:5"
															},
															"nativeSrc": "6089:48:5",
															"nodeType": "YulExpressionStatement",
															"src": "6089:48:5"
														},
														{
															"nativeSrc": "6146:26:5",
															"nodeType": "YulAssignment",
															"src": "6146:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6158:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6158:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6169:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6169:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6154:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6154:3:5"
																},
																"nativeSrc": "6154:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6154:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6146:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6146:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1864f6ba8e67520bd13921f2bc328aff378bb8aa77729a9ff30bb6681c7eb9b1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5836:342:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5987:9:5",
														"nodeType": "YulTypedName",
														"src": "5987:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6001:4:5",
														"nodeType": "YulTypedName",
														"src": "6001:4:5",
														"type": ""
													}
												],
												"src": "5836:342:5"
											},
											{
												"body": {
													"nativeSrc": "6357:170:5",
													"nodeType": "YulBlock",
													"src": "6357:170:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6374:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6374:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6385:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6385:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6367:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6367:6:5"
																},
																"nativeSrc": "6367:21:5",
																"nodeType": "YulFunctionCall",
																"src": "6367:21:5"
															},
															"nativeSrc": "6367:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "6367:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6408:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6408:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6419:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6419:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6404:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6404:3:5"
																		},
																		"nativeSrc": "6404:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6404:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6424:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6424:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6397:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6397:6:5"
																},
																"nativeSrc": "6397:30:5",
																"nodeType": "YulFunctionCall",
																"src": "6397:30:5"
															},
															"nativeSrc": "6397:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "6397:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6447:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6447:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6458:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6458:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6443:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6443:3:5"
																		},
																		"nativeSrc": "6443:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6443:18:5"
																	},
																	{
																		"hexValue": "536572766963652066656520746f6f2068696768",
																		"kind": "string",
																		"nativeSrc": "6463:22:5",
																		"nodeType": "YulLiteral",
																		"src": "6463:22:5",
																		"type": "",
																		"value": "Service fee too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6436:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6436:6:5"
																},
																"nativeSrc": "6436:50:5",
																"nodeType": "YulFunctionCall",
																"src": "6436:50:5"
															},
															"nativeSrc": "6436:50:5",
															"nodeType": "YulExpressionStatement",
															"src": "6436:50:5"
														},
														{
															"nativeSrc": "6495:26:5",
															"nodeType": "YulAssignment",
															"src": "6495:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6507:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6507:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6518:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6518:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6503:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6503:3:5"
																},
																"nativeSrc": "6503:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6503:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6495:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6495:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fa7c4a9bc5939b8921d635709feaf3071f1ec42fadc192e6bc083ec06fa4fe08__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6183:344:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6334:9:5",
														"nodeType": "YulTypedName",
														"src": "6334:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6348:4:5",
														"nodeType": "YulTypedName",
														"src": "6348:4:5",
														"type": ""
													}
												],
												"src": "6183:344:5"
											},
											{
												"body": {
													"nativeSrc": "6661:186:5",
													"nodeType": "YulBlock",
													"src": "6661:186:5",
													"statements": [
														{
															"nativeSrc": "6671:26:5",
															"nodeType": "YulAssignment",
															"src": "6671:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6683:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6683:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6694:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6694:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6679:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6679:3:5"
																},
																"nativeSrc": "6679:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6679:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6671:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6671:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6713:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6713:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6728:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6728:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6736:34:5",
																				"nodeType": "YulLiteral",
																				"src": "6736:34:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6724:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6724:3:5"
																		},
																		"nativeSrc": "6724:47:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6724:47:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6706:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6706:6:5"
																},
																"nativeSrc": "6706:66:5",
																"nodeType": "YulFunctionCall",
																"src": "6706:66:5"
															},
															"nativeSrc": "6706:66:5",
															"nodeType": "YulExpressionStatement",
															"src": "6706:66:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6792:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6792:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6803:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6803:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6788:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6788:3:5"
																		},
																		"nativeSrc": "6788:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6788:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "6812:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6812:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6828:3:5",
																								"nodeType": "YulLiteral",
																								"src": "6828:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6833:1:5",
																								"nodeType": "YulLiteral",
																								"src": "6833:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6824:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "6824:3:5"
																						},
																						"nativeSrc": "6824:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "6824:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6837:1:5",
																						"nodeType": "YulLiteral",
																						"src": "6837:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6820:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6820:3:5"
																				},
																				"nativeSrc": "6820:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6820:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6808:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6808:3:5"
																		},
																		"nativeSrc": "6808:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6808:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6781:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6781:6:5"
																},
																"nativeSrc": "6781:60:5",
																"nodeType": "YulFunctionCall",
																"src": "6781:60:5"
															},
															"nativeSrc": "6781:60:5",
															"nodeType": "YulExpressionStatement",
															"src": "6781:60:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint128_t_address__to_t_uint128_t_address__fromStack_reversed",
												"nativeSrc": "6532:315:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6622:9:5",
														"nodeType": "YulTypedName",
														"src": "6622:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6633:6:5",
														"nodeType": "YulTypedName",
														"src": "6633:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6641:6:5",
														"nodeType": "YulTypedName",
														"src": "6641:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6652:4:5",
														"nodeType": "YulTypedName",
														"src": "6652:4:5",
														"type": ""
													}
												],
												"src": "6532:315:5"
											},
											{
												"body": {
													"nativeSrc": "6899:190:5",
													"nodeType": "YulBlock",
													"src": "6899:190:5",
													"statements": [
														{
															"nativeSrc": "6909:61:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6909:61:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6928:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6928:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6935:34:5",
																		"nodeType": "YulLiteral",
																		"src": "6935:34:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6924:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6924:3:5"
																},
																"nativeSrc": "6924:46:5",
																"nodeType": "YulFunctionCall",
																"src": "6924:46:5"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "6913:7:5",
																	"nodeType": "YulTypedName",
																	"src": "6913:7:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7030:22:5",
																"nodeType": "YulBlock",
																"src": "7030:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7032:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "7032:16:5"
																			},
																			"nativeSrc": "7032:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7032:18:5"
																		},
																		"nativeSrc": "7032:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7032:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "6985:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "6985:7:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6994:34:5",
																		"nodeType": "YulLiteral",
																		"src": "6994:34:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6982:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "6982:2:5"
																},
																"nativeSrc": "6982:47:5",
																"nodeType": "YulFunctionCall",
																"src": "6982:47:5"
															},
															"nativeSrc": "6979:73:5",
															"nodeType": "YulIf",
															"src": "6979:73:5"
														},
														{
															"nativeSrc": "7061:22:5",
															"nodeType": "YulAssignment",
															"src": "7061:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "7072:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "7072:7:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7081:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7081:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7068:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7068:3:5"
																},
																"nativeSrc": "7068:15:5",
																"nodeType": "YulFunctionCall",
																"src": "7068:15:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7061:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7061:3:5"
																}
															]
														}
													]
												},
												"name": "increment_t_uint128",
												"nativeSrc": "6852:237:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6881:5:5",
														"nodeType": "YulTypedName",
														"src": "6881:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6891:3:5",
														"nodeType": "YulTypedName",
														"src": "6891:3:5",
														"type": ""
													}
												],
												"src": "6852:237:5"
											},
											{
												"body": {
													"nativeSrc": "7223:119:5",
													"nodeType": "YulBlock",
													"src": "7223:119:5",
													"statements": [
														{
															"nativeSrc": "7233:26:5",
															"nodeType": "YulAssignment",
															"src": "7233:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7245:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7245:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7256:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7256:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7241:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7241:3:5"
																},
																"nativeSrc": "7241:18:5",
																"nodeType": "YulFunctionCall",
																"src": "7241:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7233:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7233:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7275:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7275:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "7286:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7286:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7268:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7268:6:5"
																},
																"nativeSrc": "7268:25:5",
																"nodeType": "YulFunctionCall",
																"src": "7268:25:5"
															},
															"nativeSrc": "7268:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "7268:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7313:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7313:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7324:2:5",
																				"nodeType": "YulLiteral",
																				"src": "7324:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7309:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7309:3:5"
																		},
																		"nativeSrc": "7309:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7309:18:5"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7329:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7329:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7302:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7302:6:5"
																},
																"nativeSrc": "7302:34:5",
																"nodeType": "YulFunctionCall",
																"src": "7302:34:5"
															},
															"nativeSrc": "7302:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "7302:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7094:248:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7184:9:5",
														"nodeType": "YulTypedName",
														"src": "7184:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7195:6:5",
														"nodeType": "YulTypedName",
														"src": "7195:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7203:6:5",
														"nodeType": "YulTypedName",
														"src": "7203:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7214:4:5",
														"nodeType": "YulTypedName",
														"src": "7214:4:5",
														"type": ""
													}
												],
												"src": "7094:248:5"
											},
											{
												"body": {
													"nativeSrc": "7538:14:5",
													"nodeType": "YulBlock",
													"src": "7538:14:5",
													"statements": [
														{
															"nativeSrc": "7540:10:5",
															"nodeType": "YulAssignment",
															"src": "7540:10:5",
															"value": {
																"name": "pos",
																"nativeSrc": "7547:3:5",
																"nodeType": "YulIdentifier",
																"src": "7547:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7540:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7540:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7347:205:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7522:3:5",
														"nodeType": "YulTypedName",
														"src": "7522:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7530:3:5",
														"nodeType": "YulTypedName",
														"src": "7530:3:5",
														"type": ""
													}
												],
												"src": "7347:205:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_enum$_Role_$472(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(lt(value, 3)) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_enum_Role(value, pos)\n    {\n        if iszero(lt(value, 3))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_t_enum$_Role_$472__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        abi_encode_enum_Role(value0, headStart)\n    }\n    function abi_decode_uint128(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint128(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_uint128(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint128(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint128(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_af0c48bf390882f3b30e7d67400cc7d549345aa09ba3f0aed93c2f4d89ac3bf6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Unauthorized: Admin only\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_enum$_Role_$472__to_t_address_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        abi_encode_enum_Role(value1, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Unauthorized\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint128(x, y) -> sum\n    {\n        sum := add(and(x, 0xffffffffffffffffffffffffffffffff), and(y, 0xffffffffffffffffffffffffffffffff))\n        if gt(sum, 0xffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_ffb413f83d4289b35c6fac3b8d2317022415a07bb213b03835936f9b7bebeebe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Not restaurant owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e9ced9c0261d8a5c82aa7fb72bab9d19d9ca5cb882ff18a21fecb19a75397620__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Restaurant does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint128__to_t_address_t_uint128__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_1864f6ba8e67520bd13921f2bc328aff378bb8aa77729a9ff30bb6681c7eb9b1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"No funds available\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fa7c4a9bc5939b8921d635709feaf3071f1ec42fadc192e6bc083ec06fa4fe08__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Service fee too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint128_t_address__to_t_uint128_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function increment_t_uint128(value) -> ret\n    {\n        let value_1 := and(value, 0xffffffffffffffffffffffffffffffff)\n        if eq(value_1, 0xffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100fb575f3560e01c8063ae9a465511610093578063f2fde38b11610063578063f2fde38b1461024b578063f3f437031461025e578063f793728214610286578063fa20fca714610299575f5ffd5b8063ae9a4655146101dd578063d72e481d146101f0578063d76d571a146101f8578063e28d7a1814610223575f5ffd5b80638da5cb5b116100ce5780638da5cb5b1461014f5780639937464214610173578063a0e31ec4146101a2578063abca88f0146101b5575f5ffd5b806314d90e1b146100ff578063603ef6491461011e578063630a195b14610132578063715018a614610147575b5f5ffd5b610107601481565b60405160ff90911681526020015b60405180910390f35b60015461010790600160801b900460ff1681565b610145610140366004610b92565b6102a1565b005b6101456103ee565b5f546001600160a01b03165b6040516001600160a01b039091168152602001610115565b610195610181366004610bca565b60026020525f908152604090205460ff1681565b6040516101159190610c1e565b6101456101b0366004610c48565b610401565b61015b6101c3366004610c79565b60056020525f90815260409020546001600160a01b031681565b6101456101eb366004610c48565b6104ce565b61014561066e565b61020b610206366004610c92565b6107f9565b6040516001600160801b039091168152602001610115565b61020b610231366004610bca565b60066020525f90815260409020546001600160801b031681565b610145610259366004610bca565b610840565b61020b61026c366004610bca565b60036020525f90815260409020546001600160801b031681565b610145610294366004610cba565b61087d565b61020b610958565b335f9081526002602081905260409091205460ff16818111156102c6576102c6610bea565b146102ec5760405162461bcd60e51b81526004016102e390610cda565b60405180910390fd5b6001600160a01b0382166103345760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064016102e3565b6001600160a01b0382165f9081526002602081905260409091208054839260ff1990911690600190849081111561036d5761036d610bea565b0217905550600181600281111561038657610386610bea565b146103b1576001600160a01b0382165f90815260066020526040902080546001600160801b03191690555b7f4ac36fa53f167ceb85964be512e01de2a3b8bdb9862f917da079deeeff689b3882826040516103e2929190610d11565b60405180910390a15050565b6103f6610a41565b6103ff5f610a6d565b565b5f546001600160a01b031633148061043b5750335f9081526002602081905260409091205460ff168181111561043957610439610bea565b145b6104765760405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b60448201526064016102e3565b6001600160a01b0382165f90815260036020526040812080548392906104a69084906001600160801b0316610d42565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505050565b6001600160801b0381165f9081526005602052604090205481906001600160a01b031633146105365760405162461bcd60e51b81526020600482015260146024820152732737ba103932b9ba30bab930b73a1037bbb732b960611b60448201526064016102e3565b6001600160a01b03831661057e5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064016102e3565b6001600160801b0382165f908152600560205260409020546001600160a01b03166105eb5760405162461bcd60e51b815260206004820152601960248201527f52657374617572616e7420646f6573206e6f742065786973740000000000000060448201526064016102e3565b6001600160a01b0383165f818152600260209081526040808320805460ff19166001179055600682529182902080546001600160801b0387166001600160801b031990911681179091558251938452908301527f69a85d8f30649b59eeb2b4393ea9eb9c9ed001f6974226d94a7fa2dfd562f15b910160405180910390a1505050565b335f9081526002602081905260409091205460ff168181111561069357610693610bea565b146106b05760405162461bcd60e51b81526004016102e390610cda565b5f60035f6106c55f546001600160a01b031690565b6001600160a01b0316815260208101919091526040015f20546001600160801b031690508061072b5760405162461bcd60e51b81526020600482015260126024820152714e6f2066756e647320617661696c61626c6560701b60448201526064016102e3565b5f60035f6107405f546001600160a01b031690565b6001600160a01b0316815260208101919091526040015f2080546001600160801b039283166001600160801b031990911617905561079a90821661078b5f546001600160a01b031690565b6001600160a01b031690610abc565b7f15ed0a7026c7f7b2319e041da1e43e0b566e892499962bc6b464292ef9d387576107cc5f546001600160a01b031690565b604080516001600160a01b0390921682526001600160801b0384166020830152015b60405180910390a150565b6004602052815f5260405f208181548110610812575f80fd5b905f5260205f209060029182820401919006601002915091509054906101000a90046001600160801b031681565b610848610a41565b6001600160a01b03811661087157604051631e4fbdf760e01b81525f60048201526024016102e3565b61087a81610a6d565b50565b335f9081526002602081905260409091205460ff16818111156108a2576108a2610bea565b146108bf5760405162461bcd60e51b81526004016102e390610cda565b601460ff8216111561090a5760405162461bcd60e51b81526020600482015260146024820152730a6cae4ecd2c6ca40cccaca40e8dede40d0d2ced60631b60448201526064016102e3565b6001805460ff60801b1916600160801b60ff8416908102919091179091556040519081527fc2e7293b347ac956898a90e36061ef247c8d3516f25e87a91009be115ce27ac4906020016107ee565b600180546001600160801b039081165f8181526005602090815260408083208054336001600160a01b03199091168117909155808452600483528184208054808901825590855283852060028204018054919098166010026101000a9687021916958502959095179095558451838152908101939093529290917fbafbc0bfd4afd8a222b8cd09b01ce310b06b0beb42503ea91a76135e6a532e92910160405180910390a1600180546001600160801b0316905f610a1583610d61565b91906101000a8154816001600160801b0302191690836001600160801b03160217905550508091505090565b5f546001600160a01b031633146103ff5760405163118cdaa760e01b81523360048201526024016102e3565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80471015610ae65760405163cf47918160e01b8152476004820152602481018290526044016102e3565b5f5f836001600160a01b0316836040515f6040518083038185875af1925050503d805f8114610b30576040519150601f19603f3d011682016040523d82523d5f602084013e610b35565b606091505b509150915081610b4857610b4881610b4e565b50505050565b805115610b5e5780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b80356001600160a01b0381168114610b8d575f5ffd5b919050565b5f5f60408385031215610ba3575f5ffd5b610bac83610b77565b9150602083013560038110610bbf575f5ffd5b809150509250929050565b5f60208284031215610bda575f5ffd5b610be382610b77565b9392505050565b634e487b7160e01b5f52602160045260245ffd5b60038110610c1a57634e487b7160e01b5f52602160045260245ffd5b9052565b60208101610c2c8284610bfe565b92915050565b80356001600160801b0381168114610b8d575f5ffd5b5f5f60408385031215610c59575f5ffd5b610c6283610b77565b9150610c7060208401610c32565b90509250929050565b5f60208284031215610c89575f5ffd5b610be382610c32565b5f5f60408385031215610ca3575f5ffd5b610cac83610b77565b946020939093013593505050565b5f60208284031215610cca575f5ffd5b813560ff81168114610be3575f5ffd5b60208082526018908201527f556e617574686f72697a65643a2041646d696e206f6e6c790000000000000000604082015260600190565b6001600160a01b038316815260408101610be36020830184610bfe565b634e487b7160e01b5f52601160045260245ffd5b6001600160801b038181168382160190811115610c2c57610c2c610d2e565b5f6001600160801b0382166001600160801b038103610d8257610d82610d2e565b6001019291505056fea264697066735822122013a7fda9534c1974a615d7b81ade2632c397a89d9409dc994e977aceec8e4a1c64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAE9A4655 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xF3F43703 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xF7937282 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xFA20FCA7 EQ PUSH2 0x299 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xAE9A4655 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0xD72E481D EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0xD76D571A EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0xE28D7A18 EQ PUSH2 0x223 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x99374642 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xA0E31EC4 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0xABCA88F0 EQ PUSH2 0x1B5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x14D90E1B EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x603EF649 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x630A195B EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x147 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x107 PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x107 SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0xB92 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x145 PUSH2 0x3EE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x115 JUMP JUMPDEST PUSH2 0x195 PUSH2 0x181 CALLDATASIZE PUSH1 0x4 PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0xC1E JUMP JUMPDEST PUSH2 0x145 PUSH2 0x1B0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC48 JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC79 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x1EB CALLDATASIZE PUSH1 0x4 PUSH2 0xC48 JUMP JUMPDEST PUSH2 0x4CE JUMP JUMPDEST PUSH2 0x145 PUSH2 0x66E JUMP JUMPDEST PUSH2 0x20B PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0xC92 JUMP JUMPDEST PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x115 JUMP JUMPDEST PUSH2 0x20B PUSH2 0x231 CALLDATASIZE PUSH1 0x4 PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x259 CALLDATASIZE PUSH1 0x4 PUSH2 0xBCA JUMP JUMPDEST PUSH2 0x840 JUMP JUMPDEST PUSH2 0x20B PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x294 CALLDATASIZE PUSH1 0x4 PUSH2 0xCBA JUMP JUMPDEST PUSH2 0x87D JUMP JUMPDEST PUSH2 0x20B PUSH2 0x958 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 DUP2 GT ISZERO PUSH2 0x2C6 JUMPI PUSH2 0x2C6 PUSH2 0xBEA JUMP JUMPDEST EQ PUSH2 0x2EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x334 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 PUSH1 0xFF NOT SWAP1 SWAP2 AND SWAP1 PUSH1 0x1 SWAP1 DUP5 SWAP1 DUP2 GT ISZERO PUSH2 0x36D JUMPI PUSH2 0x36D PUSH2 0xBEA JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x386 JUMPI PUSH2 0x386 PUSH2 0xBEA JUMP JUMPDEST EQ PUSH2 0x3B1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND SWAP1 SSTORE JUMPDEST PUSH32 0x4AC36FA53F167CEB85964BE512E01DE2A3B8BDB9862F917DA079DEEEFF689B38 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3E2 SWAP3 SWAP2 SWAP1 PUSH2 0xD11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x3F6 PUSH2 0xA41 JUMP JUMPDEST PUSH2 0x3FF PUSH0 PUSH2 0xA6D JUMP JUMPDEST JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x43B JUMPI POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 DUP2 GT ISZERO PUSH2 0x439 JUMPI PUSH2 0x439 PUSH2 0xBEA JUMP JUMPDEST EQ JUMPDEST PUSH2 0x476 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x155B985D5D1A1BDC9A5E9959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x4A6 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0xD42 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x536 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2737BA103932B9BA30BAB930B73A1037BBB732B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x57E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657374617572616E7420646F6573206E6F7420657869737400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x6 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE PUSH32 0x69A85D8F30649B59EEB2B4393EA9EB9C9ED001F6974226D94A7FA2DFD562F15B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 DUP2 GT ISZERO PUSH2 0x693 JUMPI PUSH2 0x693 PUSH2 0xBEA JUMP JUMPDEST EQ PUSH2 0x6B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0xCDA JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 PUSH2 0x6C5 PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 POP DUP1 PUSH2 0x72B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F2066756E647320617661696C61626C65 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 PUSH2 0x740 PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH2 0x79A SWAP1 DUP3 AND PUSH2 0x78B PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0xABC JUMP JUMPDEST PUSH32 0x15ED0A7026C7F7B2319E041DA1E43E0B566E892499962BC6B464292EF9D38757 PUSH2 0x7CC PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND PUSH1 0x20 DUP4 ADD MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x812 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x10 MUL SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x848 PUSH2 0xA41 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x871 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x87A DUP2 PUSH2 0xA6D JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 DUP2 GT ISZERO PUSH2 0x8A2 JUMPI PUSH2 0x8A2 PUSH2 0xBEA JUMP JUMPDEST EQ PUSH2 0x8BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x14 PUSH1 0xFF DUP3 AND GT ISZERO PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0xA6CAE4ECD2C6CA40CCCACA40E8DEDE40D0D2CED PUSH1 0x63 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL PUSH1 0xFF DUP5 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC2E7293B347AC956898A90E36061EF247C8D3516F25E87A91009BE115CE27AC4 SWAP1 PUSH1 0x20 ADD PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE DUP1 DUP5 MSTORE PUSH1 0x4 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD DUP1 DUP10 ADD DUP3 SSTORE SWAP1 DUP6 MSTORE DUP4 DUP6 KECCAK256 PUSH1 0x2 DUP3 DIV ADD DUP1 SLOAD SWAP2 SWAP1 SWAP9 AND PUSH1 0x10 MUL PUSH2 0x100 EXP SWAP7 DUP8 MUL NOT AND SWAP6 DUP6 MUL SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP6 SSTORE DUP5 MLOAD DUP4 DUP2 MSTORE SWAP1 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP3 SWAP1 SWAP2 PUSH32 0xBAFBC0BFD4AFD8A222B8CD09B01CE310B06B0BEB42503EA91A76135E6A532E92 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 PUSH0 PUSH2 0xA15 DUP4 PUSH2 0xD61 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0xAE6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCF479181 PUSH1 0xE0 SHL DUP2 MSTORE SELFBALANCE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xB30 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB35 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xB48 JUMPI PUSH2 0xB48 DUP2 PUSH2 0xB4E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xB5E JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB8D JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBA3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xBAC DUP4 PUSH2 0xB77 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0xBBF JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBDA JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xBE3 DUP3 PUSH2 0xB77 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0xC1A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xC2C DUP3 DUP5 PUSH2 0xBFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB8D JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC59 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xC62 DUP4 PUSH2 0xB77 JUMP JUMPDEST SWAP2 POP PUSH2 0xC70 PUSH1 0x20 DUP5 ADD PUSH2 0xC32 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC89 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xBE3 DUP3 PUSH2 0xC32 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCA3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xCAC DUP4 PUSH2 0xB77 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCCA JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xBE3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65643A2041646D696E206F6E6C790000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD PUSH2 0xBE3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBFE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0xC2C JUMPI PUSH2 0xC2C PUSH2 0xD2E JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 SUB PUSH2 0xD82 JUMPI PUSH2 0xD82 PUSH2 0xD2E JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA7 REVERT 0xA9 MSTORE8 0x4C NOT PUSH21 0xA615D7B81ADE2632C397A89D9409DC994E977ACEEC DUP15 BLOBBASEFEE SHR PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "170:3099:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;388:42;;428:2;388:42;;;;;186:4:5;174:17;;;156:36;;144:2;129:18;388:42:4;;;;;;;;344:37;;;;;-1:-1:-1;;;344:37:4;;;;;;2189:287;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;1638:85::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;;-1:-1:-1;;;;;888:32:5;;;870:51;;858:2;843:18;1638:85:0;724:203:5;439:37:4;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;3042:224::-;;;;;;:::i;:::-;;:::i;603:51::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;603:51:4;;;1761:420;;;;;;:::i;:::-;;:::i;2732:304::-;;;:::i;543:53::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2766:47:5;;;2748:66;;2736:2;2721:18;543:53:4;2602:218:5;661:50:4;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;661:50:4;;;2543:215:0;;;;;;:::i;:::-;;:::i;483:53:4:-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;483:53:4;;;2484:240;;;;;;:::i;:::-;;:::i;1405:348::-;;;:::i;2189:287::-;1065:10;1059:17;;;;1080:10;1059:17;;;;;;;;;;;:31;;;;;;;;:::i;:::-;;1051:68;;;;-1:-1:-1;;;1051:68:4;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;2272:18:4;::::1;2264:46;;;::::0;-1:-1:-1;;;2264:46:4;;3654:2:5;2264:46:4::1;::::0;::::1;3636:21:5::0;3693:2;3673:18;;;3666:30;-1:-1:-1;;;3712:18:5;;;3705:45;3767:18;;2264:46:4::1;3452:339:5::0;2264:46:4::1;-1:-1:-1::0;;;;;2321:11:4;::::1;;::::0;;;:5:::1;:11;::::0;;;;;;;:18;;2335:4;;-1:-1:-1;;2321:18:4;;::::1;::::0;;;2335:4;;2321:18;::::1;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;2362:10:4::1;2354:4;:18;;;;;;;;:::i;:::-;;2350:79;;-1:-1:-1::0;;;;;2396:21:4;::::1;;::::0;;;:15:::1;:21;::::0;;;;2389:28;;-1:-1:-1;;;;;;2389:28:4::1;::::0;;2350:79:::1;2444:24;2457:4;2463;2444:24;;;;;;;:::i;:::-;;;;;;;;2189:287:::0;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3042:224:4:-;1684:7:0;1710:6;-1:-1:-1;;;;;1710:6:0;3135:10:4;:21;;:56;;-1:-1:-1;3166:10:4;3160:17;;;;3181:10;3160:17;;;;;;;;;;;:31;;;;;;;;:::i;:::-;;3135:56;3127:81;;;;-1:-1:-1;;;3127:81:4;;4297:2:5;3127:81:4;;;4279:21:5;4336:2;4316:18;;;4309:30;-1:-1:-1;;;4355:18:5;;;4348:42;4407:18;;3127:81:4;4095:336:5;3127:81:4;-1:-1:-1;;;;;3219:29:4;;;;;;:18;:29;;;;;:39;;3252:6;;3219:29;:39;;3252:6;;-1:-1:-1;;;;;3219:39:4;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;3219:39:4;;;;;-1:-1:-1;;;;;3219:39:4;;;;;;3042:224;;:::o;1761:420::-;-1:-1:-1;;;;;1217:30:4;;;;;;:16;:30;;;;;;1868:12;;-1:-1:-1;;;;;1217:30:4;1251:10;1217:44;1209:77;;;;-1:-1:-1;;;1209:77:4;;5015:2:5;1209:77:4;;;4997:21:5;5054:2;5034:18;;;5027:30;-1:-1:-1;;;5073:18:5;;;5066:50;5133:18;;1209:77:4;4813:344:5;1209:77:4;-1:-1:-1;;;;;1907:19:4;::::1;1899:47;;;::::0;-1:-1:-1;;;1899:47:4;;3654:2:5;1899:47:4::1;::::0;::::1;3636:21:5::0;3693:2;3673:18;;;3666:30;-1:-1:-1;;;3712:18:5;;;3705:45;3767:18;;1899:47:4::1;3452:339:5::0;1899:47:4::1;-1:-1:-1::0;;;;;1965:30:4;::::1;2007:1;1965:30:::0;;;:16:::1;:30;::::0;;;;;-1:-1:-1;;;;;1965:30:4::1;1957:82;;;::::0;-1:-1:-1;;;1957:82:4;;5364:2:5;1957:82:4::1;::::0;::::1;5346:21:5::0;5403:2;5383:18;;;5376:30;5442:27;5422:18;;;5415:55;5487:18;;1957:82:4::1;5162:349:5::0;1957:82:4::1;-1:-1:-1::0;;;;;2050:12:4;::::1;;::::0;;;:5:::1;:12;::::0;;;;;;;:25;;-1:-1:-1;;2050:25:4::1;2065:10;2050:25;::::0;;2086:15:::1;:22:::0;;;;;;:37;;-1:-1:-1;;;;;2086:37:4;::::1;-1:-1:-1::0;;;;;;2086:37:4;;::::1;::::0;::::1;::::0;;;2139:34;;5690:51:5;;;5757:18;;;5750:75;2139:34:4::1;::::0;5663:18:5;2139:34:4::1;;;;;;;1761:420:::0;;;:::o;2732:304::-;1065:10;1059:17;;;;1080:10;1059:17;;;;;;;;;;;:31;;;;;;;;:::i;:::-;;1051:68;;;;-1:-1:-1;;;1051:68:4;;;;;;;:::i;:::-;2793:15:::1;2811:18;:27;2830:7;1684::0::0;1710:6;-1:-1:-1;;;;;1710:6:0;;1638:85;2830:7:4::1;-1:-1:-1::0;;;;;2811:27:4::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;2811:27:4;;-1:-1:-1;;;;;2811:27:4::1;::::0;-1:-1:-1;2857:11:4;2849:42:::1;;;::::0;-1:-1:-1;;;2849:42:4;;6038:2:5;2849:42:4::1;::::0;::::1;6020:21:5::0;6077:2;6057:18;;;6050:30;-1:-1:-1;;;6096:18:5;;;6089:48;6154:18;;2849:42:4::1;5836:342:5::0;2849:42:4::1;2932:1;2902:18;:27;2921:7;1684::0::0;1710:6;-1:-1:-1;;;;;1710:6:0;;1638:85;2921:7:4::1;-1:-1:-1::0;;;;;2902:27:4::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;2902:27:4;:31;;-1:-1:-1;;;;;2902:31:4;;::::1;-1:-1:-1::0;;;;;;2902:31:4;;::::1;;::::0;;2944:35:::1;::::0;;::::1;2952:7;1684::0::0;1710:6;-1:-1:-1;;;;;1710:6:0;;1638:85;2952:7:4::1;-1:-1:-1::0;;;;;2944:26:4::1;::::0;::::1;:35::i;:::-;2995:33;3011:7;1684::0::0;1710:6;-1:-1:-1;;;;;1710:6:0;;1638:85;3011:7:4::1;2995:33;::::0;;-1:-1:-1;;;;;5708:32:5;;;5690:51;;-1:-1:-1;;;;;5777:47:5;;5772:2;5757:18;;5750:75;5663:18;2995:33:4::1;;;;;;;;2782:254;2732:304::o:0;543:53::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;543:53:4;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;870:51:5::0;843:18;;2672:31:0::1;724:203:5::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2484:240:4:-;1065:10;1059:17;;;;1080:10;1059:17;;;;;;;;;;;:31;;;;;;;;:::i;:::-;;1051:68;;;;-1:-1:-1;;;1051:68:4;;;;;;;:::i;:::-;428:2:::1;2573:29;::::0;::::1;;;2565:62;;;::::0;-1:-1:-1;;;2565:62:4;;6385:2:5;2565:62:4::1;::::0;::::1;6367:21:5::0;6424:2;6404:18;;;6397:30;-1:-1:-1;;;6443:18:5;;;6436:50;6503:18;;2565:62:4::1;6183:344:5::0;2565:62:4::1;2638:20;:33:::0;;-1:-1:-1;;;;2638:33:4::1;-1:-1:-1::0;;;2638:33:4::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;2687:29:::1;::::0;156:36:5;;;2687:29:4::1;::::0;144:2:5;129:18;2687:29:4::1;14:184:5::0;1405:348:4;1496:16;;;-1:-1:-1;;;;;1496:16:4;;;1453:7;1523:30;;;:16;:30;;;;;;;;:43;;1556:10;-1:-1:-1;;;;;;1523:43:4;;;;;;;;1577:28;;;:16;:28;;;;;:47;;;;;;;;;;;;;;;;;;;;;;;;;1496:16;1577:47;;;;;;;;;;;;;;;;1640:46;;6706:66:5;;;6788:18;;;6781:60;;;;1453:7:4;1496:16;;1640:46;;6679:18:5;1640:46:4;;;;;;;1697:16;:18;;-1:-1:-1;;;;;1697:18:4;;:16;:18;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;1697:18:4;;;;;-1:-1:-1;;;;;1697:18:4;;;;;;;1733:12;1726:19;;;1405:348;:::o;1796:162:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:2;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:2;1901:40:0;;;870:51:5;843:18;;1901:40:0;724:203:5;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;1290:365:1:-;1399:6;1375:21;:30;1371:125;;;1428:57;;-1:-1:-1;;;1428:57:1;;1455:21;1428:57;;;7268:25:5;7309:18;;;7302:34;;;7241:18;;1428:57:1;7094:248:5;1371:125:1;1507:12;1521:23;1548:9;-1:-1:-1;;;;;1548:14:1;1570:6;1548:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1506:75;;;;1596:7;1591:58;;1619:19;1627:10;1619:7;:19::i;:::-;1361:294;;1290:365;;:::o;5559:487::-;5690:17;;:21;5686:354;;5887:10;5881:17;5943:15;5930:10;5926:2;5922:19;5915:44;5686:354;6010:19;;-1:-1:-1;;;6010:19:1;;;;;;;;;;;203:173:5;271:20;;-1:-1:-1;;;;;320:31:5;;310:42;;300:70;;366:1;363;356:12;300:70;203:173;;;:::o;381:338::-;457:6;465;518:2;506:9;497:7;493:23;489:32;486:52;;;534:1;531;524:12;486:52;557:29;576:9;557:29;:::i;:::-;547:39;;636:2;625:9;621:18;608:32;669:1;662:5;659:12;649:40;;685:1;682;675:12;649:40;708:5;698:15;;;381:338;;;;;:::o;932:186::-;991:6;1044:2;1032:9;1023:7;1019:23;1015:32;1012:52;;;1060:1;1057;1050:12;1012:52;1083:29;1102:9;1083:29;:::i;:::-;1073:39;932:186;-1:-1:-1;;;932:186:5:o;1123:127::-;1184:10;1179:3;1175:20;1172:1;1165:31;1215:4;1212:1;1205:15;1239:4;1236:1;1229:15;1255:232;1331:1;1324:5;1321:12;1311:143;;1376:10;1371:3;1367:20;1364:1;1357:31;1411:4;1408:1;1401:15;1439:4;1436:1;1429:15;1311:143;1463:18;;1255:232::o;1492:197::-;1632:2;1617:18;;1644:39;1621:9;1665:6;1644:39;:::i;:::-;1492:197;;;;:::o;1694:188::-;1762:20;;-1:-1:-1;;;;;1811:46:5;;1801:57;;1791:85;;1872:1;1869;1862:12;1887:260;1955:6;1963;2016:2;2004:9;1995:7;1991:23;1987:32;1984:52;;;2032:1;2029;2022:12;1984:52;2055:29;2074:9;2055:29;:::i;:::-;2045:39;;2103:38;2137:2;2126:9;2122:18;2103:38;:::i;:::-;2093:48;;1887:260;;;;;:::o;2152:186::-;2211:6;2264:2;2252:9;2243:7;2239:23;2235:32;2232:52;;;2280:1;2277;2270:12;2232:52;2303:29;2322:9;2303:29;:::i;2343:254::-;2411:6;2419;2472:2;2460:9;2451:7;2447:23;2443:32;2440:52;;;2488:1;2485;2478:12;2440:52;2511:29;2530:9;2511:29;:::i;:::-;2501:39;2587:2;2572:18;;;;2559:32;;-1:-1:-1;;;2343:254:5:o;2825:269::-;2882:6;2935:2;2923:9;2914:7;2910:23;2906:32;2903:52;;;2951:1;2948;2941:12;2903:52;2990:9;2977:23;3040:4;3033:5;3029:16;3022:5;3019:27;3009:55;;3060:1;3057;3050:12;3099:348;3301:2;3283:21;;;3340:2;3320:18;;;3313:30;3379:26;3374:2;3359:18;;3352:54;3438:2;3423:18;;3099:348::o;3796:294::-;-1:-1:-1;;;;;3994:32:5;;3976:51;;3964:2;3949:18;;4036:48;4080:2;4065:18;;4057:6;4036:48;:::i;4436:127::-;4497:10;4492:3;4488:20;4485:1;4478:31;4528:4;4525:1;4518:15;4552:4;4549:1;4542:15;4568:240;-1:-1:-1;;;;;4637:42:5;;;4681;;;4633:91;;4736:43;;4733:69;;;4782:18;;:::i;6852:237::-;6891:3;-1:-1:-1;;;;;6928:5:5;6924:46;-1:-1:-1;;;;;6985:7:5;6982:47;6979:73;;7032:18;;:::i;:::-;7081:1;7068:15;;6852:237;-1:-1:-1;;6852:237:5:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "704200",
								"executionCost": "75140",
								"totalCost": "779340"
							},
							"external": {
								"MAX_SERVICE_FEE()": "216",
								"addPendingWithdrawal(address,uint128)": "infinite",
								"assignRole(address,uint8)": "52876",
								"assignStaff(address,uint128)": "infinite",
								"owner()": "2341",
								"ownerRestaurants(address,uint256)": "6504",
								"pendingWithdrawals(address)": "2599",
								"registerRestaurant()": "104858",
								"renounceOwnership()": "infinite",
								"restaurantOwners(uint128)": "2644",
								"roles(address)": "2648",
								"serviceFeePercentage()": "2364",
								"setServiceFeePercentage(uint8)": "27918",
								"staffRestaurant(address)": "2644",
								"transferOwnership(address)": "28351",
								"withdrawServiceFees()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 170,
									"end": 3269,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 170,
									"end": 3269,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 170,
									"end": 3269,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 336,
									"end": 337,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 301,
									"end": 337,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 301,
									"end": 337,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "88"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 344,
									"end": 381,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 344,
									"end": 381,
									"name": "PUSH",
									"source": 4,
									"value": "500000000000000000000000000000001"
								},
								{
									"begin": 344,
									"end": 381,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 344,
									"end": 381,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 344,
									"end": 381,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1314,
									"end": 1397,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1314,
									"end": 1397,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1314,
									"end": 1397,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1314,
									"end": 1397,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1314,
									"end": 1397,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1314,
									"end": 1397,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1314,
									"end": 1397,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1314,
									"end": 1397,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1314,
									"end": 1397,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1314,
									"end": 1397,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1336,
									"end": 1346,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 1336,
									"end": 1346,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 160,
									"end": 211,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 133,
									"end": 151,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 133,
									"end": 151,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1365,
									"end": 1375,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 1359,
									"end": 1376,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1359,
									"end": 1376,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1359,
									"end": 1376,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1359,
									"end": 1376,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1379,
									"end": 1389,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1359,
									"end": 1376,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1359,
									"end": 1376,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1359,
									"end": 1376,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1359,
									"end": 1376,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1359,
									"end": 1376,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1359,
									"end": 1376,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1359,
									"end": 1376,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1359,
									"end": 1376,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 1359,
									"end": 1389,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1359,
									"end": 1389,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1359,
									"end": 1389,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1359,
									"end": 1389,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1359,
									"end": 1389,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1359,
									"end": 1389,
									"modifierDepth": 1,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1359,
									"end": 1389,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1359,
									"end": 1389,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 170,
									"end": 3269,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 170,
									"end": 3269,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 222,
									"end": 349,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 222,
									"end": 349,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 170,
									"end": 3269,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 3269,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 170,
									"end": 3269,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 3269,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 3269,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 170,
									"end": 3269,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 3269,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122013a7fda9534c1974a615d7b81ade2632c397a89d9409dc994e977aceec8e4a1c64736f6c634300081e0033",
									".code": [
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "AE9A4655"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "F3F43703"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "F7937282"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "FA20FCA7"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "AE9A4655"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "D72E481D"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "D76D571A"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "E28D7A18"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "99374642"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "A0E31EC4"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "ABCA88F0"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "14D90E1B"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "603EF649"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "630A195B"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 3269,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 388,
											"end": 430,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 388,
											"end": 430,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 388,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 428,
											"end": 430,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 388,
											"end": 430,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 388,
											"end": 430,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 388,
											"end": 430,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 388,
											"end": 430,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 388,
											"end": 430,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 388,
											"end": 430,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 186,
											"end": 190,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 174,
											"end": 191,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 174,
											"end": 191,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 174,
											"end": 191,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 156,
											"end": 192,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 156,
											"end": 192,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 144,
											"end": 146,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 129,
											"end": 147,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 388,
											"end": 430,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 388,
											"end": 430,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 388,
											"end": 430,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 388,
											"end": 430,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 388,
											"end": 430,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 388,
											"end": 430,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 388,
											"end": 430,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 388,
											"end": 430,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 388,
											"end": 430,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 344,
											"end": 381,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 344,
											"end": 381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 344,
											"end": 381,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 344,
											"end": 381,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 344,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 344,
											"end": 381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 344,
											"end": 381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 344,
											"end": 381,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 344,
											"end": 381,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 344,
											"end": 381,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 344,
											"end": 381,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 344,
											"end": 381,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2476,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2189,
											"end": 2476,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2189,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2189,
											"end": 2476,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2476,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2189,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2189,
											"end": 2476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2476,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2189,
											"end": 2476,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2189,
											"end": 2476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2476,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2189,
											"end": 2476,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2476,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 888,
											"end": 920,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 888,
											"end": 920,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 888,
											"end": 920,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 870,
											"end": 921,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 870,
											"end": 921,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 858,
											"end": 860,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 724,
											"end": 927,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 439,
											"end": 476,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 439,
											"end": 476,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 439,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 439,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 439,
											"end": 476,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 439,
											"end": 476,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 439,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 439,
											"end": 476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 439,
											"end": 476,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 439,
											"end": 476,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 439,
											"end": 476,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 439,
											"end": 476,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 439,
											"end": 476,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 439,
											"end": 476,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 476,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 439,
											"end": 476,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 439,
											"end": 476,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 439,
											"end": 476,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 439,
											"end": 476,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 439,
											"end": 476,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 439,
											"end": 476,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 439,
											"end": 476,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 439,
											"end": 476,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 439,
											"end": 476,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 439,
											"end": 476,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 439,
											"end": 476,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 439,
											"end": 476,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 439,
											"end": 476,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 439,
											"end": 476,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 439,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 439,
											"end": 476,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 439,
											"end": 476,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 439,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 439,
											"end": 476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3042,
											"end": 3266,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3042,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3042,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3042,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3042,
											"end": 3266,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3042,
											"end": 3266,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3042,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3042,
											"end": 3266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3042,
											"end": 3266,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3042,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3042,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3042,
											"end": 3266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 603,
											"end": 654,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 603,
											"end": 654,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 603,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 603,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 603,
											"end": 654,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 603,
											"end": 654,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 603,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 603,
											"end": 654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 603,
											"end": 654,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 603,
											"end": 654,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 603,
											"end": 654,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 603,
											"end": 654,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 654,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 603,
											"end": 654,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 654,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 603,
											"end": 654,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 603,
											"end": 654,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 603,
											"end": 654,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 654,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 603,
											"end": 654,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 603,
											"end": 654,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 603,
											"end": 654,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 603,
											"end": 654,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 603,
											"end": 654,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1761,
											"end": 2181,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1761,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1761,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1761,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1761,
											"end": 2181,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1761,
											"end": 2181,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1761,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1761,
											"end": 2181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1761,
											"end": 2181,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1761,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1761,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1761,
											"end": 2181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2732,
											"end": 3036,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2732,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2732,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2732,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2732,
											"end": 3036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 543,
											"end": 596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 543,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 543,
											"end": 596,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 543,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 543,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 543,
											"end": 596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 543,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 543,
											"end": 596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 543,
											"end": 596,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2766,
											"end": 2813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2766,
											"end": 2813,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2766,
											"end": 2813,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2748,
											"end": 2814,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2748,
											"end": 2814,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2736,
											"end": 2738,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2721,
											"end": 2739,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 543,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2602,
											"end": 2820,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 661,
											"end": 711,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 661,
											"end": 711,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 661,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 661,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 661,
											"end": 711,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 661,
											"end": 711,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 661,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 661,
											"end": 711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 661,
											"end": 711,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 661,
											"end": 711,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 661,
											"end": 711,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 661,
											"end": 711,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 661,
											"end": 711,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 661,
											"end": 711,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 711,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 661,
											"end": 711,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 661,
											"end": 711,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 661,
											"end": 711,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 711,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 661,
											"end": 711,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 661,
											"end": 711,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 661,
											"end": 711,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 661,
											"end": 711,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 661,
											"end": 711,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 483,
											"end": 536,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 483,
											"end": 536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 483,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 483,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 483,
											"end": 536,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 483,
											"end": 536,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 483,
											"end": 536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 483,
											"end": 536,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 483,
											"end": 536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 483,
											"end": 536,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 483,
											"end": 536,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 536,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 483,
											"end": 536,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 536,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 483,
											"end": 536,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 483,
											"end": 536,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 483,
											"end": 536,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 536,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 483,
											"end": 536,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 483,
											"end": 536,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 483,
											"end": 536,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 483,
											"end": 536,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 483,
											"end": 536,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2484,
											"end": 2724,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2484,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2484,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2484,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2484,
											"end": 2724,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2484,
											"end": 2724,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2484,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2484,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2484,
											"end": 2724,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2484,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2484,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2484,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1405,
											"end": 1753,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1405,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1405,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1405,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1405,
											"end": 1753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2476,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2189,
											"end": 2476,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1075,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1080,
											"end": 1090,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1059,
											"end": 1090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1051,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2272,
											"end": 2290,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2272,
											"end": 2290,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2264,
											"end": 2310,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2264,
											"end": 2310,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2264,
											"end": 2310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2264,
											"end": 2310,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2264,
											"end": 2310,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2264,
											"end": 2310,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3654,
											"end": 3656,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2264,
											"end": 2310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2264,
											"end": 2310,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2264,
											"end": 2310,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3657,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3693,
											"end": 3695,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3666,
											"end": 3696,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C69642061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3712,
											"end": 3730,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3712,
											"end": 3730,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3712,
											"end": 3730,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3705,
											"end": 3750,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3785,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3767,
											"end": 3785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2310,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3452,
											"end": 3791,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2310,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2264,
											"end": 2310,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2321,
											"end": 2332,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2332,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2332,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2332,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2321,
											"end": 2332,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2321,
											"end": 2332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2332,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2321,
											"end": 2332,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2332,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2332,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2339,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2339,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2335,
											"end": 2339,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2335,
											"end": 2339,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2321,
											"end": 2339,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2339,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2339,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2339,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2339,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2321,
											"end": 2339,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2335,
											"end": 2339,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2335,
											"end": 2339,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2339,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2339,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2339,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2321,
											"end": 2339,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2321,
											"end": 2339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2321,
											"end": 2339,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2339,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2321,
											"end": 2339,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2339,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2339,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2339,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2339,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2362,
											"end": 2372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2354,
											"end": 2358,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2354,
											"end": 2372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2354,
											"end": 2372,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2354,
											"end": 2372,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2354,
											"end": 2372,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2354,
											"end": 2372,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2354,
											"end": 2372,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2354,
											"end": 2372,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2354,
											"end": 2372,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2354,
											"end": 2372,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2354,
											"end": 2372,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2354,
											"end": 2372,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2354,
											"end": 2372,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2350,
											"end": 2429,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2350,
											"end": 2429,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2396,
											"end": 2417,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2396,
											"end": 2417,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2396,
											"end": 2417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2396,
											"end": 2417,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2396,
											"end": 2417,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2396,
											"end": 2417,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2396,
											"end": 2411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2396,
											"end": 2417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2396,
											"end": 2417,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2396,
											"end": 2417,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2396,
											"end": 2417,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2396,
											"end": 2417,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2389,
											"end": 2417,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2389,
											"end": 2417,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2389,
											"end": 2417,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2389,
											"end": 2417,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2389,
											"end": 2417,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2350,
											"end": 2429,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2350,
											"end": 2429,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2444,
											"end": 2468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4AC36FA53F167CEB85964BE512E01DE2A3B8BDB9862F917DA079DEEEFF689B38"
										},
										{
											"begin": 2457,
											"end": 2461,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2467,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2444,
											"end": 2468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2444,
											"end": 2468,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2444,
											"end": 2468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2444,
											"end": 2468,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2444,
											"end": 2468,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2444,
											"end": 2468,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2444,
											"end": 2468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2444,
											"end": 2468,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2444,
											"end": 2468,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2444,
											"end": 2468,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2444,
											"end": 2468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2444,
											"end": 2468,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2444,
											"end": 2468,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2444,
											"end": 2468,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2444,
											"end": 2468,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2444,
											"end": 2468,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2444,
											"end": 2468,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2476,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2476,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3266,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3042,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3145,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3135,
											"end": 3156,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3135,
											"end": 3156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3166,
											"end": 3176,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3177,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3160,
											"end": 3177,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3177,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3177,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3181,
											"end": 3191,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3160,
											"end": 3177,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3160,
											"end": 3177,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3177,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3177,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3177,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3160,
											"end": 3177,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3177,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3177,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3177,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3177,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3160,
											"end": 3177,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3191,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3191,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3191,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3191,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 3160,
											"end": 3191,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 3160,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 3160,
											"end": 3191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3191,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 3160,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3191,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3127,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3127,
											"end": 3208,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3127,
											"end": 3208,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3127,
											"end": 3208,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3127,
											"end": 3208,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3127,
											"end": 3208,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4297,
											"end": 4299,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3127,
											"end": 3208,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3127,
											"end": 3208,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3127,
											"end": 3208,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4300,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4336,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 4316,
											"end": 4334,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4316,
											"end": 4334,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4316,
											"end": 4334,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4309,
											"end": 4339,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "155B985D5D1A1BDC9A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4355,
											"end": 4373,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4355,
											"end": 4373,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4373,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4390,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4407,
											"end": 4425,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4407,
											"end": 4425,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3127,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 4095,
											"end": 4431,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3127,
											"end": 3208,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3127,
											"end": 3208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3219,
											"end": 3248,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3248,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3248,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3248,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3248,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3248,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3237,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3219,
											"end": 3248,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3219,
											"end": 3248,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3248,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3219,
											"end": 3248,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3248,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3258,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3258,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3252,
											"end": 3258,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3252,
											"end": 3258,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3248,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 3219,
											"end": 3258,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3252,
											"end": 3258,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3252,
											"end": 3258,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3219,
											"end": 3258,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 3219,
											"end": 3258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3258,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 3219,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3258,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3258,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3258,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3219,
											"end": 3258,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3258,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3258,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3258,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3219,
											"end": 3258,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3258,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3258,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3258,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3258,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3219,
											"end": 3258,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3258,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3258,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3258,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3258,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3258,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3042,
											"end": 3266,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3042,
											"end": 3266,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3042,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1761,
											"end": 2181,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1761,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1217,
											"end": 1247,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1247,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1247,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1247,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1247,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1247,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1233,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1217,
											"end": 1247,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1217,
											"end": 1247,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1247,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1217,
											"end": 1247,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1247,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1247,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 1880,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 1880,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1217,
											"end": 1247,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1261,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1261,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1209,
											"end": 1286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1286,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1209,
											"end": 1286,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1209,
											"end": 1286,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1286,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5015,
											"end": 5017,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1209,
											"end": 1286,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1209,
											"end": 1286,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1286,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4997,
											"end": 5018,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5054,
											"end": 5056,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 5034,
											"end": 5052,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5034,
											"end": 5052,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5052,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5027,
											"end": 5057,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA103932B9BA30BAB930B73A1037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5073,
											"end": 5091,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5073,
											"end": 5091,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5073,
											"end": 5091,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5066,
											"end": 5116,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5133,
											"end": 5151,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5133,
											"end": 5151,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1209,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 4813,
											"end": 5157,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1209,
											"end": 1286,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1209,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1907,
											"end": 1926,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 1926,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1946,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1899,
											"end": 1946,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1899,
											"end": 1946,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1899,
											"end": 1946,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1946,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3654,
											"end": 3656,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 1946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1899,
											"end": 1946,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1946,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3657,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3693,
											"end": 3695,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3666,
											"end": 3696,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C69642061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3712,
											"end": 3730,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3712,
											"end": 3730,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3712,
											"end": 3730,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3705,
											"end": 3750,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3785,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3767,
											"end": 3785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1899,
											"end": 1946,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3452,
											"end": 3791,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1899,
											"end": 1946,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1899,
											"end": 1946,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1965,
											"end": 1995,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1965,
											"end": 1995,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2007,
											"end": 2008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1965,
											"end": 1995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1965,
											"end": 1995,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1965,
											"end": 1995,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1965,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1965,
											"end": 1995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1965,
											"end": 1995,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1965,
											"end": 1995,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1965,
											"end": 1995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1965,
											"end": 1995,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1965,
											"end": 1995,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1965,
											"end": 1995,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1957,
											"end": 2039,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 1957,
											"end": 2039,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1957,
											"end": 2039,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1957,
											"end": 2039,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1957,
											"end": 2039,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1957,
											"end": 2039,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5364,
											"end": 5366,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1957,
											"end": 2039,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1957,
											"end": 2039,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1957,
											"end": 2039,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5346,
											"end": 5367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5403,
											"end": 5405,
											"name": "PUSH",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 5383,
											"end": 5401,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5383,
											"end": 5401,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5401,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5376,
											"end": 5406,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5442,
											"end": 5469,
											"name": "PUSH",
											"source": 5,
											"value": "52657374617572616E7420646F6573206E6F7420657869737400000000000000"
										},
										{
											"begin": 5422,
											"end": 5440,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5422,
											"end": 5440,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5422,
											"end": 5440,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5470,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5505,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5487,
											"end": 5505,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1957,
											"end": 2039,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 5162,
											"end": 5511,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1957,
											"end": 2039,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 1957,
											"end": 2039,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2050,
											"end": 2062,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2050,
											"end": 2062,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2050,
											"end": 2062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2050,
											"end": 2062,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2050,
											"end": 2062,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2050,
											"end": 2062,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2050,
											"end": 2055,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2050,
											"end": 2062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2050,
											"end": 2062,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2050,
											"end": 2062,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2050,
											"end": 2062,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2050,
											"end": 2062,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2050,
											"end": 2062,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2050,
											"end": 2062,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2050,
											"end": 2062,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2050,
											"end": 2075,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2050,
											"end": 2075,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2050,
											"end": 2075,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2050,
											"end": 2075,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2050,
											"end": 2075,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2050,
											"end": 2075,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2086,
											"end": 2108,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2108,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2108,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2108,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2108,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2123,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2123,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2086,
											"end": 2123,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2123,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2086,
											"end": 2123,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2123,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2123,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2123,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2123,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2123,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2123,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2123,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2139,
											"end": 2173,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2139,
											"end": 2173,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5690,
											"end": 5741,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5690,
											"end": 5741,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5690,
											"end": 5741,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5775,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5775,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5775,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5750,
											"end": 5825,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2139,
											"end": 2173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "69A85D8F30649B59EEB2B4393EA9EB9C9ED001F6974226D94A7FA2DFD562F15B"
										},
										{
											"begin": 2139,
											"end": 2173,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5663,
											"end": 5681,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2139,
											"end": 2173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2139,
											"end": 2173,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2139,
											"end": 2173,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2139,
											"end": 2173,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2139,
											"end": 2173,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2139,
											"end": 2173,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2139,
											"end": 2173,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 1761,
											"end": 2181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1761,
											"end": 2181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1761,
											"end": 2181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1761,
											"end": 2181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2732,
											"end": 3036,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2732,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1075,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1080,
											"end": 1090,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1059,
											"end": 1090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1051,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2793,
											"end": 2808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2811,
											"end": 2838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2837,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2837,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2830,
											"end": 2837,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2811,
											"end": 2838,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2838,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2838,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2811,
											"end": 2838,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2838,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2838,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2838,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2838,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2838,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2838,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2811,
											"end": 2838,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2838,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2838,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2811,
											"end": 2838,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2838,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2857,
											"end": 2868,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2891,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2849,
											"end": 2891,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2891,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2849,
											"end": 2891,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2891,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6038,
											"end": 6040,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2849,
											"end": 2891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2849,
											"end": 2891,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2891,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6020,
											"end": 6041,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6077,
											"end": 6079,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 6057,
											"end": 6075,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6057,
											"end": 6075,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6057,
											"end": 6075,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6050,
											"end": 6080,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F2066756E647320617661696C61626C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6096,
											"end": 6114,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 6096,
											"end": 6114,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6096,
											"end": 6114,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6089,
											"end": 6137,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6154,
											"end": 6172,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6154,
											"end": 6172,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2891,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 5836,
											"end": 6178,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2891,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2849,
											"end": 2891,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2932,
											"end": 2933,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2902,
											"end": 2920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2902,
											"end": 2929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2921,
											"end": 2928,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2921,
											"end": 2928,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2921,
											"end": 2928,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2902,
											"end": 2929,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2929,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2929,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2902,
											"end": 2929,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2929,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2929,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2929,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2929,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2929,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2929,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2902,
											"end": 2929,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2902,
											"end": 2929,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2933,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2933,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2902,
											"end": 2933,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2933,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2933,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2902,
											"end": 2933,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2933,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2933,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2933,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2933,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2933,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2944,
											"end": 2979,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2944,
											"end": 2979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2944,
											"end": 2979,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2944,
											"end": 2979,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 2959,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2952,
											"end": 2959,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2952,
											"end": 2959,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2944,
											"end": 2970,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2944,
											"end": 2970,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2944,
											"end": 2970,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2944,
											"end": 2979,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2944,
											"end": 2979,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2944,
											"end": 2979,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2995,
											"end": 3028,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "15ED0A7026C7F7B2319E041DA1E43E0B566E892499962BC6B464292EF9D38757"
										},
										{
											"begin": 3011,
											"end": 3018,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3018,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3011,
											"end": 3018,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2995,
											"end": 3028,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2995,
											"end": 3028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2995,
											"end": 3028,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5708,
											"end": 5740,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5708,
											"end": 5740,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5708,
											"end": 5740,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5690,
											"end": 5741,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5690,
											"end": 5741,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5777,
											"end": 5824,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5777,
											"end": 5824,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5772,
											"end": 5774,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5757,
											"end": 5775,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5775,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5750,
											"end": 5825,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5663,
											"end": 5681,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2995,
											"end": 3028,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2995,
											"end": 3028,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2995,
											"end": 3028,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2995,
											"end": 3028,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2995,
											"end": 3028,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2995,
											"end": 3028,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2995,
											"end": 3028,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2995,
											"end": 3028,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2995,
											"end": 3028,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 2782,
											"end": 3036,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2732,
											"end": 3036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 543,
											"end": 596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 543,
											"end": 596,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 543,
											"end": 596,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 543,
											"end": 596,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 543,
											"end": 596,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 543,
											"end": 596,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 543,
											"end": 596,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 543,
											"end": 596,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 543,
											"end": 596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 543,
											"end": 596,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 543,
											"end": 596,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 543,
											"end": 596,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 543,
											"end": 596,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "MOD",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 543,
											"end": 596,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 543,
											"end": 596,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 543,
											"end": 596,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 543,
											"end": 596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 870,
											"end": 921,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 724,
											"end": 927,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2724,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2484,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1075,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1080,
											"end": 1090,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1059,
											"end": 1076,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1059,
											"end": 1090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1051,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1051,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 428,
											"end": 430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2573,
											"end": 2602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2573,
											"end": 2602,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2573,
											"end": 2602,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2573,
											"end": 2602,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2573,
											"end": 2602,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2627,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2565,
											"end": 2627,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2627,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2565,
											"end": 2627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2627,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6385,
											"end": 6387,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2565,
											"end": 2627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2627,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2627,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6367,
											"end": 6388,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6424,
											"end": 6426,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 6404,
											"end": 6422,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6404,
											"end": 6422,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6404,
											"end": 6422,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6397,
											"end": 6427,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A6CAE4ECD2C6CA40CCCACA40E8DEDE40D0D2CED"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "63"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6443,
											"end": 6461,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 6443,
											"end": 6461,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6443,
											"end": 6461,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6436,
											"end": 6486,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6503,
											"end": 6521,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6503,
											"end": 6521,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2627,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 6183,
											"end": 6527,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2627,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2565,
											"end": 2627,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2638,
											"end": 2671,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2671,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2638,
											"end": 2671,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2638,
											"end": 2671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2638,
											"end": 2671,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2671,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2671,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2671,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2671,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2671,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2671,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2671,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2671,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2716,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2687,
											"end": 2716,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 156,
											"end": 192,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 156,
											"end": 192,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 156,
											"end": 192,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2716,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "C2E7293B347AC956898A90E36061EF247C8D3516F25E87A91009BE115CE27AC4"
										},
										{
											"begin": 2687,
											"end": 2716,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 144,
											"end": 146,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 129,
											"end": 147,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2716,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 14,
											"end": 198,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1405,
											"end": 1753,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1405,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1512,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1496,
											"end": 1512,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1512,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1496,
											"end": 1512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1512,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1512,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1453,
											"end": 1460,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1523,
											"end": 1553,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1553,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1553,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1539,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1523,
											"end": 1553,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1523,
											"end": 1553,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1553,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1553,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1553,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1523,
											"end": 1553,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1553,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1553,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1566,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1566,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1556,
											"end": 1566,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1523,
											"end": 1566,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1566,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1566,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1566,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1566,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1566,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1566,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1566,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1605,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1605,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1605,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1593,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1577,
											"end": 1605,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1605,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1605,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1605,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1605,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1512,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1624,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1686,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1686,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6706,
											"end": 6772,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6772,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6772,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6788,
											"end": 6806,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6788,
											"end": 6806,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6788,
											"end": 6806,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6781,
											"end": 6841,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6781,
											"end": 6841,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6781,
											"end": 6841,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6781,
											"end": 6841,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1460,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1512,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1686,
											"name": "PUSH",
											"source": 4,
											"value": "BAFBC0BFD4AFD8A222B8CD09B01CE310B06B0BEB42503EA91A76135E6A532E92"
										},
										{
											"begin": 1640,
											"end": 1686,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6679,
											"end": 6697,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1686,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1640,
											"end": 1686,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1686,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1686,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1686,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1686,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1686,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1713,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1713,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 1697,
											"end": 1715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1745,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1745,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1405,
											"end": 1753,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1405,
											"end": 1753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 870,
											"end": 921,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 724,
											"end": 927,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1290,
											"end": 1655,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1290,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1399,
											"end": 1405,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1396,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1405,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1496,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 1371,
											"end": 1496,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CF479181"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1476,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7268,
											"end": 7293,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7309,
											"end": 7327,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7309,
											"end": 7327,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7309,
											"end": 7327,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7302,
											"end": 7336,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7302,
											"end": 7336,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7302,
											"end": 7336,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7241,
											"end": 7259,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 7241,
											"end": 7259,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 7094,
											"end": 7342,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1496,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 1371,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1521,
											"end": 1544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1557,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1506,
											"end": 1581,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1506,
											"end": 1581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1506,
											"end": 1581,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1506,
											"end": 1581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1596,
											"end": 1603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1591,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 1591,
											"end": 1649,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 1627,
											"end": 1637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 1619,
											"end": 1638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1638,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 1619,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1361,
											"end": 1655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1361,
											"end": 1655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5559,
											"end": 6046,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 5559,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5707,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5707,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5711,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5887,
											"end": 5897,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5881,
											"end": 5898,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5958,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5930,
											"end": 5940,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5926,
											"end": 5928,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5922,
											"end": 5941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5915,
											"end": 5959,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D6BDA275"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 203,
											"end": 376,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 203,
											"end": 376,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 271,
											"end": 291,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 320,
											"end": 351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 320,
											"end": 351,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 310,
											"end": 352,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 310,
											"end": 352,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 300,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 300,
											"end": 370,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 366,
											"end": 367,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 364,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 356,
											"end": 368,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 300,
											"end": 370,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 300,
											"end": 370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 203,
											"end": 376,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 203,
											"end": 376,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 203,
											"end": 376,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 203,
											"end": 376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 381,
											"end": 719,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 381,
											"end": 719,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 457,
											"end": 463,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 465,
											"end": 471,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 518,
											"end": 520,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 506,
											"end": 515,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 497,
											"end": 504,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 493,
											"end": 516,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 489,
											"end": 521,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 486,
											"end": 538,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 486,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 486,
											"end": 538,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 534,
											"end": 535,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 532,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 536,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 486,
											"end": 538,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 486,
											"end": 538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 557,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 576,
											"end": 585,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 557,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 557,
											"end": 586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 557,
											"end": 586,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 557,
											"end": 586,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 547,
											"end": 586,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 547,
											"end": 586,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 636,
											"end": 638,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 625,
											"end": 634,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 621,
											"end": 639,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 608,
											"end": 640,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 669,
											"end": 670,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 662,
											"end": 667,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 659,
											"end": 671,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 649,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 649,
											"end": 689,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 685,
											"end": 686,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 682,
											"end": 683,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 687,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 649,
											"end": 689,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 649,
											"end": 689,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 708,
											"end": 713,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 698,
											"end": 713,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 698,
											"end": 713,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 698,
											"end": 713,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 381,
											"end": 719,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 381,
											"end": 719,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 381,
											"end": 719,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 381,
											"end": 719,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 381,
											"end": 719,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 381,
											"end": 719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 932,
											"end": 1118,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 932,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 991,
											"end": 997,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1046,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1032,
											"end": 1041,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1030,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1019,
											"end": 1042,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1015,
											"end": 1047,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1060,
											"end": 1061,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1050,
											"end": 1062,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1083,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 1102,
											"end": 1111,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1083,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 1083,
											"end": 1112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1083,
											"end": 1112,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 1083,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1073,
											"end": 1112,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 932,
											"end": 1118,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 932,
											"end": 1118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1250,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 1123,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1184,
											"end": 1194,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 1179,
											"end": 1182,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1175,
											"end": 1195,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1172,
											"end": 1173,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1215,
											"end": 1219,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1212,
											"end": 1213,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1205,
											"end": 1220,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1243,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1236,
											"end": 1237,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1244,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1255,
											"end": 1487,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 1255,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1332,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1324,
											"end": 1329,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1333,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1311,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 1311,
											"end": 1454,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1376,
											"end": 1386,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 1371,
											"end": 1374,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1367,
											"end": 1387,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1365,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1357,
											"end": 1388,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1415,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1408,
											"end": 1409,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1401,
											"end": 1416,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1443,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1436,
											"end": 1437,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1444,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1311,
											"end": 1454,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 1311,
											"end": 1454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1481,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1481,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1255,
											"end": 1487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1689,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1492,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1632,
											"end": 1634,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1617,
											"end": 1635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1617,
											"end": 1635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 1621,
											"end": 1630,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1665,
											"end": 1671,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 1644,
											"end": 1683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1683,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 1644,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1689,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1689,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1689,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1689,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1694,
											"end": 1882,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 1694,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 1782,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 1782,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1811,
											"end": 1857,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1811,
											"end": 1857,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 1858,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 1858,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 1791,
											"end": 1876,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1873,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1869,
											"end": 1870,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1874,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 2147,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1887,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1955,
											"end": 1961,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 1969,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2016,
											"end": 2018,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2004,
											"end": 2013,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1995,
											"end": 2002,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1991,
											"end": 2014,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1987,
											"end": 2019,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1984,
											"end": 2036,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1984,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 1984,
											"end": 2036,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2033,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2029,
											"end": 2030,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2034,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1984,
											"end": 2036,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 1984,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2055,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 2074,
											"end": 2083,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2055,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 2055,
											"end": 2084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2055,
											"end": 2084,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 2055,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2045,
											"end": 2084,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2045,
											"end": 2084,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 2137,
											"end": 2139,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2126,
											"end": 2135,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2140,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 2103,
											"end": 2141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2141,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 2103,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2141,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2141,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 2147,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 2147,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 2147,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 2147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 2147,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 2147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2152,
											"end": 2338,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2152,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2217,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2266,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2252,
											"end": 2261,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2250,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2239,
											"end": 2262,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2235,
											"end": 2267,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2284,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 2232,
											"end": 2284,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2280,
											"end": 2281,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2277,
											"end": 2278,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2270,
											"end": 2282,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2284,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 2232,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 2322,
											"end": 2331,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 2303,
											"end": 2332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2343,
											"end": 2597,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2343,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2411,
											"end": 2417,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2419,
											"end": 2425,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2472,
											"end": 2474,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2469,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2458,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2470,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2475,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2492,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 2440,
											"end": 2492,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2489,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2485,
											"end": 2486,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2492,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 2440,
											"end": 2492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 2530,
											"end": 2539,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 2511,
											"end": 2540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2540,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 2511,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2501,
											"end": 2540,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2587,
											"end": 2589,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2590,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2572,
											"end": 2590,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2572,
											"end": 2590,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2572,
											"end": 2590,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2559,
											"end": 2591,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2559,
											"end": 2591,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2343,
											"end": 2597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2825,
											"end": 3094,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2825,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2882,
											"end": 2888,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2935,
											"end": 2937,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2923,
											"end": 2932,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2921,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2910,
											"end": 2933,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2906,
											"end": 2938,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2903,
											"end": 2955,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2903,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 2903,
											"end": 2955,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 2952,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2948,
											"end": 2949,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 2953,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2903,
											"end": 2955,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 2903,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2990,
											"end": 2999,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 3000,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3040,
											"end": 3044,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3033,
											"end": 3038,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3029,
											"end": 3045,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3022,
											"end": 3027,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3019,
											"end": 3046,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3009,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 3009,
											"end": 3064,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3060,
											"end": 3061,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3057,
											"end": 3058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3050,
											"end": 3062,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3099,
											"end": 3447,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3099,
											"end": 3447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3303,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3283,
											"end": 3304,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3283,
											"end": 3304,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3283,
											"end": 3304,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3340,
											"end": 3342,
											"name": "PUSH",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 3320,
											"end": 3338,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3320,
											"end": 3338,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3320,
											"end": 3338,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3313,
											"end": 3343,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3379,
											"end": 3405,
											"name": "PUSH",
											"source": 5,
											"value": "556E617574686F72697A65643A2041646D696E206F6E6C790000000000000000"
										},
										{
											"begin": 3374,
											"end": 3376,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3377,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3377,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3406,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3438,
											"end": 3440,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3423,
											"end": 3441,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3423,
											"end": 3441,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3099,
											"end": 3447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3796,
											"end": 4090,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3796,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3994,
											"end": 4026,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3994,
											"end": 4026,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4027,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4027,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3964,
											"end": 3966,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3949,
											"end": 3967,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3949,
											"end": 3967,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4036,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 4080,
											"end": 4082,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4065,
											"end": 4083,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4065,
											"end": 4083,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4057,
											"end": 4063,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4036,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 4036,
											"end": 4084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4436,
											"end": 4563,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 4436,
											"end": 4563,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4497,
											"end": 4507,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 4492,
											"end": 4495,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4488,
											"end": 4508,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4485,
											"end": 4486,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4478,
											"end": 4509,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4532,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 4525,
											"end": 4526,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4518,
											"end": 4533,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4552,
											"end": 4556,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4549,
											"end": 4550,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4542,
											"end": 4557,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4568,
											"end": 4808,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 4568,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4637,
											"end": 4679,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4637,
											"end": 4679,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4637,
											"end": 4679,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4681,
											"end": 4723,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4681,
											"end": 4723,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4681,
											"end": 4723,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4633,
											"end": 4724,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4633,
											"end": 4724,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4736,
											"end": 4779,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4736,
											"end": 4779,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4733,
											"end": 4802,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4733,
											"end": 4802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 4733,
											"end": 4802,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4782,
											"end": 4800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 4782,
											"end": 4800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 4782,
											"end": 4800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6852,
											"end": 7089,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 6852,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6891,
											"end": 6894,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6928,
											"end": 6933,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6924,
											"end": 6970,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6985,
											"end": 6992,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6982,
											"end": 7029,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6979,
											"end": 7052,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 6979,
											"end": 7052,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7032,
											"end": 7050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 7032,
											"end": 7050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 7032,
											"end": 7050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7032,
											"end": 7050,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 7032,
											"end": 7050,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7081,
											"end": 7082,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7068,
											"end": 7083,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7068,
											"end": 7083,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6852,
											"end": 7089,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6852,
											"end": 7089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"contracts/RestaurantManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MAX_SERVICE_FEE()": "14d90e1b",
							"addPendingWithdrawal(address,uint128)": "a0e31ec4",
							"assignRole(address,uint8)": "630a195b",
							"assignStaff(address,uint128)": "ae9a4655",
							"owner()": "8da5cb5b",
							"ownerRestaurants(address,uint256)": "d76d571a",
							"pendingWithdrawals(address)": "f3f43703",
							"registerRestaurant()": "fa20fca7",
							"renounceOwnership()": "715018a6",
							"restaurantOwners(uint128)": "abca88f0",
							"roles(address)": "99374642",
							"serviceFeePercentage()": "603ef649",
							"setServiceFeePercentage(uint8)": "f7937282",
							"staffRestaurant(address)": "e28d7a18",
							"transferOwnership(address)": "f2fde38b",
							"withdrawServiceFees()": "d72e481d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"PaymentReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"restaurantId\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"RestaurantRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum RestaurantManager.Role\",\"name\":\"role\",\"type\":\"uint8\"}],\"name\":\"RoleAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"newPercentage\",\"type\":\"uint8\"}],\"name\":\"ServiceFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staff\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"restaurantId\",\"type\":\"uint128\"}],\"name\":\"StaffAssigned\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_SERVICE_FEE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"addPendingWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"enum RestaurantManager.Role\",\"name\":\"role\",\"type\":\"uint8\"}],\"name\":\"assignRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staff\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"restaurantId\",\"type\":\"uint128\"}],\"name\":\"assignStaff\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerRestaurants\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingWithdrawals\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerRestaurant\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"name\":\"restaurantOwners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"roles\",\"outputs\":[{\"internalType\":\"enum RestaurantManager.Role\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"serviceFeePercentage\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"percentage\",\"type\":\"uint8\"}],\"name\":\"setServiceFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"staffRestaurant\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawServiceFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RestaurantManager.sol\":\"RestaurantManager\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"contracts/RestaurantManager.sol\":{\"keccak256\":\"0x770cf251c8a60e6946de3cb361ea406231c9905f8e8791e0c4f9df9d2e753328\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcacfd56a4b47863a68f7f9dc3a447fba0ff60515441a4fe887c97deb5bd25d9\",\"dweb:/ipfs/QmahXE2eKRXcVG3HBtZPeJHUmrNWCV26cgUb3iA7N9RKfY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/RestaurantManager.sol:RestaurantManager",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 475,
								"contract": "contracts/RestaurantManager.sol:RestaurantManager",
								"label": "nextRestaurantId",
								"offset": 0,
								"slot": "1",
								"type": "t_uint128"
							},
							{
								"astId": 478,
								"contract": "contracts/RestaurantManager.sol:RestaurantManager",
								"label": "serviceFeePercentage",
								"offset": 16,
								"slot": "1",
								"type": "t_uint8"
							},
							{
								"astId": 486,
								"contract": "contracts/RestaurantManager.sol:RestaurantManager",
								"label": "roles",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_enum(Role)472)"
							},
							{
								"astId": 490,
								"contract": "contracts/RestaurantManager.sol:RestaurantManager",
								"label": "pendingWithdrawals",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint128)"
							},
							{
								"astId": 495,
								"contract": "contracts/RestaurantManager.sol:RestaurantManager",
								"label": "ownerRestaurants",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_array(t_uint128)dyn_storage)"
							},
							{
								"astId": 499,
								"contract": "contracts/RestaurantManager.sol:RestaurantManager",
								"label": "restaurantOwners",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint128,t_address)"
							},
							{
								"astId": 503,
								"contract": "contracts/RestaurantManager.sol:RestaurantManager",
								"label": "staffRestaurant",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint128)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint128)dyn_storage": {
								"base": "t_uint128",
								"encoding": "dynamic_array",
								"label": "uint128[]",
								"numberOfBytes": "32"
							},
							"t_enum(Role)472": {
								"encoding": "inplace",
								"label": "enum RestaurantManager.Role",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_array(t_uint128)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint128[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint128)dyn_storage"
							},
							"t_mapping(t_address,t_enum(Role)472)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => enum RestaurantManager.Role)",
								"numberOfBytes": "32",
								"value": "t_enum(Role)472"
							},
							"t_mapping(t_address,t_uint128)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint128)",
								"numberOfBytes": "32",
								"value": "t_uint128"
							},
							"t_mapping(t_uint128,t_address)": {
								"encoding": "mapping",
								"key": "t_uint128",
								"label": "mapping(uint128 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_uint128": {
								"encoding": "inplace",
								"label": "uint128",
								"numberOfBytes": "16"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							437
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 438,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 437,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 437,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								437
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 419,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							407
						],
						"Errors": [
							459
						]
					},
					"id": 408,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 408,
							"sourceUnit": 460,
							"src": "127:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 459,
										"src": "135:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 152,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:1",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 407,
							"linearizedBaseContracts": [
								407
							],
							"name": "Address",
							"nameLocation": "241:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:1",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 157,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "358:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:1"
									},
									"src": "335:39:1"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "1361:294:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 167,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$407",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$407",
																		"typeString": "library Address"
																	}
																],
																"id": 166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 165,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:1",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 170,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "1399:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 184,
												"nodeType": "IfStatement",
												"src": "1371:125:1",
												"trueBody": {
													"id": 183,
													"nodeType": "Block",
													"src": "1407:89:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 177,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$407",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$407",
																						"typeString": "library Address"
																					}
																				],
																				"id": 176,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 175,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:1",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 180,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 162,
																		"src": "1478:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 172,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 459,
																		"src": "1428:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$459_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:1",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 447,
																	"src": "1428:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 182,
															"nodeType": "RevertStatement",
															"src": "1421:64:1"
														}
													]
												}
											},
											{
												"assignments": [
													186,
													188
												],
												"declarations": [
													{
														"constant": false,
														"id": 186,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 204,
														"src": "1507:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 185,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 188,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "1534:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 204,
														"src": "1521:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 187,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1521:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 195,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1578:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 189,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 160,
																"src": "1548:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1558:4:1",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1548:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 191,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 162,
																"src": "1570:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1548:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:75:1"
											},
											{
												"condition": {
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1595:8:1",
													"subExpression": {
														"id": 196,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "1596:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 203,
												"nodeType": "IfStatement",
												"src": "1591:58:1",
												"trueBody": {
													"id": 202,
													"nodeType": "Block",
													"src": "1605:44:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 199,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 188,
																		"src": "1627:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 198,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "1619:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1619:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 201,
															"nodeType": "ExpressionStatement",
															"src": "1619:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:1",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1309:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1336:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:1"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:1"
									},
									"scope": 407,
									"src": "1290:365:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "2589:62:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 216,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "2628:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 217,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "2636:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2642:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 215,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "2606:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2606:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 214,
												"id": 220,
												"nodeType": "Return",
												"src": "2599:45:1"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "1661:834:1",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2509:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2530:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "2522:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2551:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "2538:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 209,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2538:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2521:35:1"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "2575:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 212,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2575:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:14:1"
									},
									"scope": 407,
									"src": "2500:151:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "3088:294:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 236,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3110:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$407",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$407",
																		"typeString": "library Address"
																	}
																],
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3102:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 234,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3102:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3102:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3116:7:1",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3102:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 239,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "3126:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3102:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 253,
												"nodeType": "IfStatement",
												"src": "3098:123:1",
												"trueBody": {
													"id": 252,
													"nodeType": "Block",
													"src": "3133:88:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 246,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3189:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$407",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$407",
																						"typeString": "library Address"
																					}
																				],
																				"id": 245,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3181:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 244,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3181:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 247,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3181:13:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3195:7:1",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3181:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 249,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 229,
																		"src": "3204:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 241,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 459,
																		"src": "3154:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$459_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3161:19:1",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 447,
																	"src": "3154:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3154:56:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 251,
															"nodeType": "RevertStatement",
															"src": "3147:63:1"
														}
													]
												}
											},
											{
												"assignments": [
													255,
													257
												],
												"declarations": [
													{
														"constant": false,
														"id": 255,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3236:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 271,
														"src": "3231:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 254,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3231:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 257,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3258:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 271,
														"src": "3245:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 256,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3245:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 264,
												"initialValue": {
													"arguments": [
														{
															"id": 262,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "3298:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 258,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "3272:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3279:4:1",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3272:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 260,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "3291:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3272:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3272:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3230:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 266,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "3347:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 267,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "3355:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 268,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "3364:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 265,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "3320:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3320:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 233,
												"id": 270,
												"nodeType": "Return",
												"src": "3313:62:1"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "2657:313:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2984:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3014:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3006:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3006:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3035:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3022:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 226,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3022:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3049:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3041:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3005:50:1"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3074:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 231,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3074:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3073:14:1"
									},
									"scope": 407,
									"src": "2975:407:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "3621:154:1",
										"statements": [
											{
												"assignments": [
													283,
													285
												],
												"declarations": [
													{
														"constant": false,
														"id": 283,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3637:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 297,
														"src": "3632:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 282,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3632:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 285,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3659:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 297,
														"src": "3646:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 284,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3646:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 290,
												"initialValue": {
													"arguments": [
														{
															"id": 288,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "3691:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 286,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "3673:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3680:10:1",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3673:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3673:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3631:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 292,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "3740:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 293,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "3748:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 294,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "3757:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 291,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "3713:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3713:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 281,
												"id": 296,
												"nodeType": "Return",
												"src": "3706:62:1"
											}
										]
									},
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "3388:128:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3530:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3557:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3549:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3578:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3565:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 276,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3565:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3548:35:1"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3607:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 279,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3607:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3606:14:1"
									},
									"scope": 407,
									"src": "3521:254:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 323,
										"nodeType": "Block",
										"src": "4013:156:1",
										"statements": [
											{
												"assignments": [
													309,
													311
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4029:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 323,
														"src": "4024:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 308,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4024:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 311,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4051:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 323,
														"src": "4038:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 310,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4038:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 316,
												"initialValue": {
													"arguments": [
														{
															"id": 314,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "4085:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 312,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "4065:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4072:12:1",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4065:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4065:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4023:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 318,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "4134:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 319,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4142:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 320,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "4151:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 317,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "4107:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4107:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 307,
												"id": 322,
												"nodeType": "Return",
												"src": "4100:62:1"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "3781:130:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3925:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3954:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "3946:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3975:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "3962:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 302,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3962:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3945:35:1"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "3999:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 305,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3999:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3998:14:1"
									},
									"scope": 407,
									"src": "3916:253:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "4595:424:1",
										"statements": [
											{
												"condition": {
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4609:8:1",
													"subExpression": {
														"id": 336,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "4610:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 361,
													"nodeType": "Block",
													"src": "4669:344:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 343,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 331,
																			"src": "4857:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4868:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4857:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4878:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4857:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 347,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 327,
																				"src": "4883:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4890:4:1",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4883:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4895:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4883:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4905:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4883:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4857:49:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 358,
															"nodeType": "IfStatement",
															"src": "4853:119:1",
															"trueBody": {
																"id": 357,
																"nodeType": "Block",
																"src": "4908:64:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 354,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 327,
																					"src": "4950:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 353,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 157,
																				"src": "4933:16:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4933:24:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 356,
																		"nodeType": "RevertStatement",
																		"src": "4926:31:1"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 359,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "4992:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 335,
															"id": 360,
															"nodeType": "Return",
															"src": "4985:17:1"
														}
													]
												},
												"id": 362,
												"nodeType": "IfStatement",
												"src": "4605:408:1",
												"trueBody": {
													"id": 342,
													"nodeType": "Block",
													"src": "4619:44:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 339,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 331,
																		"src": "4641:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 338,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "4633:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4633:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 341,
															"nodeType": "ExpressionStatement",
															"src": "4633:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "4175:257:1",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4446:26:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4490:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "4482:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4511:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "4506:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 328,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4506:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4541:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "4528:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 330,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4528:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4472:85:1"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "4581:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 333,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4581:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4580:14:1"
									},
									"scope": 407,
									"src": "4437:582:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "5323:122:1",
										"statements": [
											{
												"condition": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5337:8:1",
													"subExpression": {
														"id": 374,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "5338:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 383,
													"nodeType": "Block",
													"src": "5397:42:1",
													"statements": [
														{
															"expression": {
																"id": 381,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "5418:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 373,
															"id": 382,
															"nodeType": "Return",
															"src": "5411:17:1"
														}
													]
												},
												"id": 384,
												"nodeType": "IfStatement",
												"src": "5333:106:1",
												"trueBody": {
													"id": 380,
													"nodeType": "Block",
													"src": "5347:44:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 377,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 369,
																		"src": "5369:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 376,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "5361:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5361:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 379,
															"nodeType": "ExpressionStatement",
															"src": "5361:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "5025:191:1",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5230:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5252:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "5247:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 366,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5247:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5274:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "5261:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 368,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5261:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:39:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "5309:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 371,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5309:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5308:14:1"
									},
									"scope": 407,
									"src": "5221:224:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "5614:432:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 392,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "5690:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5701:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5690:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5710:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5690:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 403,
													"nodeType": "Block",
													"src": "5989:51:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 398,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 459,
																		"src": "6010:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$459_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6017:10:1",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 450,
																	"src": "6010:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6010:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 402,
															"nodeType": "RevertStatement",
															"src": "6003:26:1"
														}
													]
												},
												"id": 404,
												"nodeType": "IfStatement",
												"src": "5686:354:1",
												"trueBody": {
													"id": 397,
													"nodeType": "Block",
													"src": "5713:270:1",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5840:133:1",
																"nodeType": "YulBlock",
																"src": "5840:133:1",
																"statements": [
																	{
																		"nativeSrc": "5858:40:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5858:40:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5887:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "5887:10:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5881:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5881:5:1"
																			},
																			"nativeSrc": "5881:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5881:17:1"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5862:15:1",
																				"nodeType": "YulTypedName",
																				"src": "5862:15:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5926:2:1",
																							"nodeType": "YulLiteral",
																							"src": "5926:2:1",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5930:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "5930:10:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5922:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "5922:3:1"
																					},
																					"nativeSrc": "5922:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5922:19:1"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5943:15:1",
																					"nodeType": "YulIdentifier",
																					"src": "5943:15:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5915:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5915:6:1"
																			},
																			"nativeSrc": "5915:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5915:44:1"
																		},
																		"nativeSrc": "5915:44:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5915:44:1"
																	}
																]
															},
															"evmVersion": "prague",
															"externalReferences": [
																{
																	"declaration": 389,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5887:10:1",
																	"valueSize": 1
																},
																{
																	"declaration": 389,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5930:10:1",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 396,
															"nodeType": "InlineAssembly",
															"src": "5815:158:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "5451:103:1",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5568:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5589:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "5576:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 388,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5576:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5575:25:1"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5614:0:1"
									},
									"scope": 407,
									"src": "5559:487:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 408,
							"src": "233:5815:1",
							"usedErrors": [
								157
							],
							"usedEvents": []
						}
					],
					"src": "101:5948:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							437
						]
					},
					"id": 438,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 409,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 410,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 437,
							"linearizedBaseContracts": [
								437
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 415,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 414,
												"id": 417,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 437,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 424,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 423,
												"id": 426,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 437,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 435,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 432,
												"id": 434,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 437,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 438,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							459
						]
					},
					"id": 460,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 439,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 440,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:3",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 459,
							"linearizedBaseContracts": [
								459
							],
							"name": "Errors",
							"nameLocation": "419:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:3",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 447,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "557:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "574:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:3"
									},
									"src": "531:59:3"
								},
								{
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:3",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 450,
									"name": "FailedCall",
									"nameLocation": "696:10:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:3"
									},
									"src": "690:19:3"
								},
								{
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:3",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 453,
									"name": "FailedDeployment",
									"nameLocation": "772:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:3"
									},
									"src": "766:25:3"
								},
								{
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:3",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 458,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "884:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:3"
									},
									"src": "860:33:3"
								}
							],
							"scope": 460,
							"src": "411:484:3",
							"usedErrors": [
								447,
								450,
								453,
								458
							],
							"usedEvents": []
						}
					],
					"src": "100:796:3"
				},
				"id": 3
			},
			"contracts/RestaurantManager.sol": {
				"ast": {
					"absolutePath": "contracts/RestaurantManager.sol",
					"exportedSymbols": {
						"Address": [
							407
						],
						"Context": [
							437
						],
						"Errors": [
							459
						],
						"Ownable": [
							147
						],
						"RestaurantManager": [
							806
						]
					},
					"id": 807,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 461,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 462,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 807,
							"sourceUnit": 148,
							"src": "61:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 463,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 807,
							"sourceUnit": 408,
							"src": "115:51:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 464,
										"name": "Ownable",
										"nameLocations": [
											"200:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "200:7:4"
									},
									"id": 465,
									"nodeType": "InheritanceSpecifier",
									"src": "200:7:4"
								}
							],
							"canonicalName": "RestaurantManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 806,
							"linearizedBaseContracts": [
								806,
								147,
								437
							],
							"name": "RestaurantManager",
							"nameLocation": "179:17:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 468,
									"libraryName": {
										"id": 466,
										"name": "Address",
										"nameLocations": [
											"221:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 407,
										"src": "221:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "215:34:4",
									"typeName": {
										"id": 467,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "233:15:4",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									}
								},
								{
									"canonicalName": "RestaurantManager.Role",
									"id": 472,
									"members": [
										{
											"id": 469,
											"name": "Customer",
											"nameLocation": "269:8:4",
											"nodeType": "EnumValue",
											"src": "269:8:4"
										},
										{
											"id": 470,
											"name": "Staff",
											"nameLocation": "279:5:4",
											"nodeType": "EnumValue",
											"src": "279:5:4"
										},
										{
											"id": 471,
											"name": "Admin",
											"nameLocation": "286:5:4",
											"nodeType": "EnumValue",
											"src": "286:5:4"
										}
									],
									"name": "Role",
									"nameLocation": "262:4:4",
									"nodeType": "EnumDefinition",
									"src": "257:36:4"
								},
								{
									"constant": false,
									"id": 475,
									"mutability": "mutable",
									"name": "nextRestaurantId",
									"nameLocation": "317:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 806,
									"src": "301:36:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									},
									"typeName": {
										"id": 473,
										"name": "uint128",
										"nodeType": "ElementaryTypeName",
										"src": "301:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 474,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "336:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "603ef649",
									"id": 478,
									"mutability": "mutable",
									"name": "serviceFeePercentage",
									"nameLocation": "357:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 806,
									"src": "344:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 476,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "344:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 477,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "380:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "14d90e1b",
									"id": 481,
									"mutability": "constant",
									"name": "MAX_SERVICE_FEE",
									"nameLocation": "410:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 806,
									"src": "388:42:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 479,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "388:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 480,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "428:2:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "99374642",
									"id": 486,
									"mutability": "mutable",
									"name": "roles",
									"nameLocation": "471:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 806,
									"src": "439:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_enum$_Role_$472_$",
										"typeString": "mapping(address => enum RestaurantManager.Role)"
									},
									"typeName": {
										"id": 485,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 482,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "447:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "439:24:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_enum$_Role_$472_$",
											"typeString": "mapping(address => enum RestaurantManager.Role)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 484,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 483,
												"name": "Role",
												"nameLocations": [
													"458:4:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 472,
												"src": "458:4:4"
											},
											"referencedDeclaration": 472,
											"src": "458:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_Role_$472",
												"typeString": "enum RestaurantManager.Role"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f3f43703",
									"id": 490,
									"mutability": "mutable",
									"name": "pendingWithdrawals",
									"nameLocation": "518:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 806,
									"src": "483:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint128_$",
										"typeString": "mapping(address => uint128)"
									},
									"typeName": {
										"id": 489,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 487,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "491:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "483:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint128_$",
											"typeString": "mapping(address => uint128)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 488,
											"name": "uint128",
											"nodeType": "ElementaryTypeName",
											"src": "502:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d76d571a",
									"id": 495,
									"mutability": "mutable",
									"name": "ownerRestaurants",
									"nameLocation": "580:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 806,
									"src": "543:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint128_$dyn_storage_$",
										"typeString": "mapping(address => uint128[])"
									},
									"typeName": {
										"id": 494,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 491,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "551:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "543:29:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint128_$dyn_storage_$",
											"typeString": "mapping(address => uint128[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 492,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "562:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"id": 493,
											"nodeType": "ArrayTypeName",
											"src": "562:9:4",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint128_$dyn_storage_ptr",
												"typeString": "uint128[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "abca88f0",
									"id": 499,
									"mutability": "mutable",
									"name": "restaurantOwners",
									"nameLocation": "638:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 806,
									"src": "603:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint128_$_t_address_$",
										"typeString": "mapping(uint128 => address)"
									},
									"typeName": {
										"id": 498,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 496,
											"name": "uint128",
											"nodeType": "ElementaryTypeName",
											"src": "611:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											}
										},
										"nodeType": "Mapping",
										"src": "603:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint128_$_t_address_$",
											"typeString": "mapping(uint128 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 497,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "622:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e28d7a18",
									"id": 503,
									"mutability": "mutable",
									"name": "staffRestaurant",
									"nameLocation": "696:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 806,
									"src": "661:50:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint128_$",
										"typeString": "mapping(address => uint128)"
									},
									"typeName": {
										"id": 502,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 500,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "669:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "661:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint128_$",
											"typeString": "mapping(address => uint128)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 501,
											"name": "uint128",
											"nodeType": "ElementaryTypeName",
											"src": "680:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "bafbc0bfd4afd8a222b8cd09b01ce310b06b0beb42503ea91a76135e6a532e92",
									"id": 509,
									"name": "RestaurantRegistered",
									"nameLocation": "726:20:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"indexed": false,
												"mutability": "mutable",
												"name": "restaurantId",
												"nameLocation": "755:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "747:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 504,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "777:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "769:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:37:4"
									},
									"src": "720:64:4"
								},
								{
									"anonymous": false,
									"eventSelector": "69a85d8f30649b59eeb2b4393ea9eb9c9ed001f6974226d94a7fa2dfd562f15b",
									"id": 515,
									"name": "StaffAssigned",
									"nameLocation": "796:13:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"indexed": false,
												"mutability": "mutable",
												"name": "staff",
												"nameLocation": "818:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "810:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "810:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"indexed": false,
												"mutability": "mutable",
												"name": "restaurantId",
												"nameLocation": "833:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "825:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 512,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "825:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "809:37:4"
									},
									"src": "790:57:4"
								},
								{
									"anonymous": false,
									"eventSelector": "4ac36fa53f167ceb85964be512e01de2a3b8bdb9862f917da079deeeff689b38",
									"id": 522,
									"name": "RoleAssigned",
									"nameLocation": "859:12:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "880:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "872:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "872:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"indexed": false,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "891:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "886:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Role_$472",
													"typeString": "enum RestaurantManager.Role"
												},
												"typeName": {
													"id": 519,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 518,
														"name": "Role",
														"nameLocations": [
															"886:4:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 472,
														"src": "886:4:4"
													},
													"referencedDeclaration": 472,
													"src": "886:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Role_$472",
														"typeString": "enum RestaurantManager.Role"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "871:25:4"
									},
									"src": "853:44:4"
								},
								{
									"anonymous": false,
									"eventSelector": "c2e7293b347ac956898a90e36061ef247c8d3516f25e87a91009be115ce27ac4",
									"id": 526,
									"name": "ServiceFeeUpdated",
									"nameLocation": "909:17:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"indexed": false,
												"mutability": "mutable",
												"name": "newPercentage",
												"nameLocation": "933:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "927:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 523,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "927:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "926:21:4"
									},
									"src": "903:45:4"
								},
								{
									"anonymous": false,
									"eventSelector": "15ed0a7026c7f7b2319e041da1e43e0b566e892499962bc6b464292ef9d38757",
									"id": 532,
									"name": "PaymentReleased",
									"nameLocation": "960:15:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "984:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "976:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1003:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "995:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 529,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "995:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:35:4"
									},
									"src": "954:57:4"
								},
								{
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "1040:99:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Role_$472",
																"typeString": "enum RestaurantManager.Role"
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 535,
																	"name": "roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "1059:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_enum$_Role_$472_$",
																		"typeString": "mapping(address => enum RestaurantManager.Role)"
																	}
																},
																"id": 538,
																"indexExpression": {
																	"expression": {
																		"id": 536,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1065:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1069:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1065:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1059:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$472",
																	"typeString": "enum RestaurantManager.Role"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 539,
																	"name": "Role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "1080:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Role_$472_$",
																		"typeString": "type(enum RestaurantManager.Role)"
																	}
																},
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1085:5:4",
																"memberName": "Admin",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 471,
																"src": "1080:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$472",
																	"typeString": "enum RestaurantManager.Role"
																}
															},
															"src": "1059:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e617574686f72697a65643a2041646d696e206f6e6c79",
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1092:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af0c48bf390882f3b30e7d67400cc7d549345aa09ba3f0aed93c2f4d89ac3bf6",
																"typeString": "literal_string \"Unauthorized: Admin only\""
															},
															"value": "Unauthorized: Admin only"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af0c48bf390882f3b30e7d67400cc7d549345aa09ba3f0aed93c2f4d89ac3bf6",
																"typeString": "literal_string \"Unauthorized: Admin only\""
															}
														],
														"id": 534,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1051:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1051:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "1051:68:4"
											},
											{
												"id": 545,
												"nodeType": "PlaceholderStatement",
												"src": "1130:1:4"
											}
										]
									},
									"id": 547,
									"name": "onlyAdmin",
									"nameLocation": "1028:9:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1037:2:4"
									},
									"src": "1019:120:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "1198:108:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 552,
																	"name": "restaurantOwners",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 499,
																	"src": "1217:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint128_$_t_address_$",
																		"typeString": "mapping(uint128 => address)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "restaurantId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 549,
																	"src": "1234:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1217:30:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 555,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1251:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1255:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1251:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1217:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742072657374617572616e74206f776e6572",
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1263:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ffb413f83d4289b35c6fac3b8d2317022415a07bb213b03835936f9b7bebeebe",
																"typeString": "literal_string \"Not restaurant owner\""
															},
															"value": "Not restaurant owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ffb413f83d4289b35c6fac3b8d2317022415a07bb213b03835936f9b7bebeebe",
																"typeString": "literal_string \"Not restaurant owner\""
															}
														],
														"id": 551,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1209:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1209:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "1209:77:4"
											},
											{
												"id": 561,
												"nodeType": "PlaceholderStatement",
												"src": "1297:1:4"
											}
										]
									},
									"id": 563,
									"name": "onlyRestaurantOwner",
									"nameLocation": "1156:19:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "restaurantId",
												"nameLocation": "1184:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "1176:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 548,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1175:22:4"
									},
									"src": "1147:159:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "1348:49:4",
										"statements": [
											{
												"expression": {
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 570,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "1359:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_enum$_Role_$472_$",
																"typeString": "mapping(address => enum RestaurantManager.Role)"
															}
														},
														"id": 573,
														"indexExpression": {
															"expression": {
																"id": 571,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1365:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1369:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1365:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1359:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Role_$472",
															"typeString": "enum RestaurantManager.Role"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 574,
															"name": "Role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "1379:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Role_$472_$",
																"typeString": "type(enum RestaurantManager.Role)"
															}
														},
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1384:5:4",
														"memberName": "Admin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 471,
														"src": "1379:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Role_$472",
															"typeString": "enum RestaurantManager.Role"
														}
													},
													"src": "1359:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Role_$472",
														"typeString": "enum RestaurantManager.Role"
													}
												},
												"id": 577,
												"nodeType": "ExpressionStatement",
												"src": "1359:30:4"
											}
										]
									},
									"id": 579,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 566,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1336:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1340:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1336:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 568,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 565,
												"name": "Ownable",
												"nameLocations": [
													"1328:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1328:7:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1328:19:4"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1325:2:4"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1348:0:4"
									},
									"scope": 806,
									"src": "1314:83:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "1462:291:4",
										"statements": [
											{
												"assignments": [
													585
												],
												"declarations": [
													{
														"constant": false,
														"id": 585,
														"mutability": "mutable",
														"name": "restaurantId",
														"nameLocation": "1481:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 614,
														"src": "1473:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 584,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "1473:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 587,
												"initialValue": {
													"id": 586,
													"name": "nextRestaurantId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 475,
													"src": "1496:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1473:39:4"
											},
											{
												"expression": {
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 588,
															"name": "restaurantOwners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "1523:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint128_$_t_address_$",
																"typeString": "mapping(uint128 => address)"
															}
														},
														"id": 590,
														"indexExpression": {
															"id": 589,
															"name": "restaurantId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "1540:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1523:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 591,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1556:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 592,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1560:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1556:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1523:43:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "1523:43:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 600,
															"name": "restaurantId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "1611:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 595,
																"name": "ownerRestaurants",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "1577:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint128_$dyn_storage_$",
																	"typeString": "mapping(address => uint128[] storage ref)"
																}
															},
															"id": 598,
															"indexExpression": {
																"expression": {
																	"id": 596,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1594:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1598:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1594:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1577:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint128_$dyn_storage",
																"typeString": "uint128[] storage ref"
															}
														},
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1606:4:4",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1577:33:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint128_$dyn_storage_ptr_$_t_uint128_$returns$__$attached_to$_t_array$_t_uint128_$dyn_storage_ptr_$",
															"typeString": "function (uint128[] storage pointer,uint128)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1577:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "1577:47:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 604,
															"name": "restaurantId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "1661:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"expression": {
																"id": 605,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1675:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1679:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1675:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 603,
														"name": "RestaurantRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "1640:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint128_$_t_address_$returns$__$",
															"typeString": "function (uint128,address)"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1640:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 608,
												"nodeType": "EmitStatement",
												"src": "1635:51:4"
											},
											{
												"expression": {
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1697:18:4",
													"subExpression": {
														"id": 609,
														"name": "nextRestaurantId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "1697:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 611,
												"nodeType": "ExpressionStatement",
												"src": "1697:18:4"
											},
											{
												"expression": {
													"id": 612,
													"name": "restaurantId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 585,
													"src": "1733:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 583,
												"id": 613,
												"nodeType": "Return",
												"src": "1726:19:4"
											}
										]
									},
									"functionSelector": "fa20fca7",
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "registerRestaurant",
									"nameLocation": "1414:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1432:2:4"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "1453:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 581,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1453:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1452:9:4"
									},
									"scope": 806,
									"src": "1405:348:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "1888:293:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 626,
																"name": "staff",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 617,
																"src": "1907:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1924:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1916:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 627,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1916:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1916:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1907:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1928:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 625,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1899:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1899:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 634,
												"nodeType": "ExpressionStatement",
												"src": "1899:47:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 636,
																	"name": "restaurantOwners",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 499,
																	"src": "1965:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint128_$_t_address_$",
																		"typeString": "mapping(uint128 => address)"
																	}
																},
																"id": 638,
																"indexExpression": {
																	"id": 637,
																	"name": "restaurantId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 619,
																	"src": "1982:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1965:30:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2007:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1999:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 639,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1999:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 642,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1999:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1965:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52657374617572616e7420646f6573206e6f74206578697374",
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2011:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e9ced9c0261d8a5c82aa7fb72bab9d19d9ca5cb882ff18a21fecb19a75397620",
																"typeString": "literal_string \"Restaurant does not exist\""
															},
															"value": "Restaurant does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e9ced9c0261d8a5c82aa7fb72bab9d19d9ca5cb882ff18a21fecb19a75397620",
																"typeString": "literal_string \"Restaurant does not exist\""
															}
														],
														"id": 635,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1957:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1957:82:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "1957:82:4"
											},
											{
												"expression": {
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 647,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "2050:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_enum$_Role_$472_$",
																"typeString": "mapping(address => enum RestaurantManager.Role)"
															}
														},
														"id": 649,
														"indexExpression": {
															"id": 648,
															"name": "staff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "2056:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2050:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Role_$472",
															"typeString": "enum RestaurantManager.Role"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 650,
															"name": "Role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "2065:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Role_$472_$",
																"typeString": "type(enum RestaurantManager.Role)"
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2070:5:4",
														"memberName": "Staff",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 470,
														"src": "2065:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Role_$472",
															"typeString": "enum RestaurantManager.Role"
														}
													},
													"src": "2050:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Role_$472",
														"typeString": "enum RestaurantManager.Role"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "2050:25:4"
											},
											{
												"expression": {
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 654,
															"name": "staffRestaurant",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "2086:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint128_$",
																"typeString": "mapping(address => uint128)"
															}
														},
														"id": 656,
														"indexExpression": {
															"id": 655,
															"name": "staff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "2102:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2086:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 657,
														"name": "restaurantId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "2111:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "2086:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "2086:37:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 661,
															"name": "staff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "2153:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 662,
															"name": "restaurantId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "2160:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"id": 660,
														"name": "StaffAssigned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "2139:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint128_$returns$__$",
															"typeString": "function (address,uint128)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2139:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 664,
												"nodeType": "EmitStatement",
												"src": "2134:39:4"
											}
										]
									},
									"functionSelector": "ae9a4655",
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 622,
													"name": "restaurantId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 619,
													"src": "1868:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												}
											],
											"id": 623,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 621,
												"name": "onlyRestaurantOwner",
												"nameLocations": [
													"1848:19:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 563,
												"src": "1848:19:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1848:33:4"
										}
									],
									"name": "assignStaff",
									"nameLocation": "1770:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "staff",
												"nameLocation": "1790:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "1782:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1782:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "restaurantId",
												"nameLocation": "1805:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "1797:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 618,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1797:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1781:37:4"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1888:0:4"
									},
									"scope": 806,
									"src": "1761:420:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "2253:223:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 677,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 668,
																"src": "2272:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2288:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2280:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 678,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2280:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2280:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2272:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2292:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 676,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2264:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2264:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 685,
												"nodeType": "ExpressionStatement",
												"src": "2264:46:4"
											},
											{
												"expression": {
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 686,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "2321:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_enum$_Role_$472_$",
																"typeString": "mapping(address => enum RestaurantManager.Role)"
															}
														},
														"id": 688,
														"indexExpression": {
															"id": 687,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "2327:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2321:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Role_$472",
															"typeString": "enum RestaurantManager.Role"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 689,
														"name": "role",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "2335:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Role_$472",
															"typeString": "enum RestaurantManager.Role"
														}
													},
													"src": "2321:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Role_$472",
														"typeString": "enum RestaurantManager.Role"
													}
												},
												"id": 691,
												"nodeType": "ExpressionStatement",
												"src": "2321:18:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Role_$472",
														"typeString": "enum RestaurantManager.Role"
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 692,
														"name": "role",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "2354:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Role_$472",
															"typeString": "enum RestaurantManager.Role"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 693,
															"name": "Role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "2362:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Role_$472_$",
																"typeString": "type(enum RestaurantManager.Role)"
															}
														},
														"id": 694,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2367:5:4",
														"memberName": "Staff",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 470,
														"src": "2362:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Role_$472",
															"typeString": "enum RestaurantManager.Role"
														}
													},
													"src": "2354:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 702,
												"nodeType": "IfStatement",
												"src": "2350:79:4",
												"trueBody": {
													"id": 701,
													"nodeType": "Block",
													"src": "2374:55:4",
													"statements": [
														{
															"expression": {
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "2389:28:4",
																"subExpression": {
																	"baseExpression": {
																		"id": 696,
																		"name": "staffRestaurant",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 503,
																		"src": "2396:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint128_$",
																			"typeString": "mapping(address => uint128)"
																		}
																	},
																	"id": 698,
																	"indexExpression": {
																		"id": 697,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 668,
																		"src": "2412:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2396:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 700,
															"nodeType": "ExpressionStatement",
															"src": "2389:28:4"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 704,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "2457:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 705,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "2463:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Role_$472",
																"typeString": "enum RestaurantManager.Role"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_enum$_Role_$472",
																"typeString": "enum RestaurantManager.Role"
															}
														],
														"id": 703,
														"name": "RoleAssigned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "2444:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_enum$_Role_$472_$returns$__$",
															"typeString": "function (address,enum RestaurantManager.Role)"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2444:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 707,
												"nodeType": "EmitStatement",
												"src": "2439:29:4"
											}
										]
									},
									"functionSelector": "630a195b",
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 674,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 673,
												"name": "onlyAdmin",
												"nameLocations": [
													"2243:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 547,
												"src": "2243:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2243:9:4"
										}
									],
									"name": "assignRole",
									"nameLocation": "2198:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2217:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "2209:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2209:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2228:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "2223:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Role_$472",
													"typeString": "enum RestaurantManager.Role"
												},
												"typeName": {
													"id": 670,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 669,
														"name": "Role",
														"nameLocations": [
															"2223:4:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 472,
														"src": "2223:4:4"
													},
													"referencedDeclaration": 472,
													"src": "2223:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Role_$472",
														"typeString": "enum RestaurantManager.Role"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2208:25:4"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2253:0:4"
									},
									"scope": 806,
									"src": "2189:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "2554:170:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 717,
																"name": "percentage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 711,
																"src": "2573:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 718,
																"name": "MAX_SERVICE_FEE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 481,
																"src": "2587:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "2573:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536572766963652066656520746f6f2068696768",
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2604:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fa7c4a9bc5939b8921d635709feaf3071f1ec42fadc192e6bc083ec06fa4fe08",
																"typeString": "literal_string \"Service fee too high\""
															},
															"value": "Service fee too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fa7c4a9bc5939b8921d635709feaf3071f1ec42fadc192e6bc083ec06fa4fe08",
																"typeString": "literal_string \"Service fee too high\""
															}
														],
														"id": 716,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2565:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2565:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 722,
												"nodeType": "ExpressionStatement",
												"src": "2565:62:4"
											},
											{
												"expression": {
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 723,
														"name": "serviceFeePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 478,
														"src": "2638:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 724,
														"name": "percentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "2661:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "2638:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "2638:33:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 728,
															"name": "percentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "2705:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 727,
														"name": "ServiceFeeUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "2687:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2687:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 730,
												"nodeType": "EmitStatement",
												"src": "2682:34:4"
											}
										]
									},
									"functionSelector": "f7937282",
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 714,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 713,
												"name": "onlyAdmin",
												"nameLocations": [
													"2544:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 547,
												"src": "2544:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2544:9:4"
										}
									],
									"name": "setServiceFeePercentage",
									"nameLocation": "2493:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "percentage",
												"nameLocation": "2523:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "2517:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 710,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2517:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2516:18:4"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2554:0:4"
									},
									"scope": 806,
									"src": "2484:240:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 773,
										"nodeType": "Block",
										"src": "2782:254:4",
										"statements": [
											{
												"assignments": [
													738
												],
												"declarations": [
													{
														"constant": false,
														"id": 738,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "2801:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 773,
														"src": "2793:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 737,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "2793:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 743,
												"initialValue": {
													"baseExpression": {
														"id": 739,
														"name": "pendingWithdrawals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "2811:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint128_$",
															"typeString": "mapping(address => uint128)"
														}
													},
													"id": 742,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 740,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "2830:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2830:7:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2811:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2793:45:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 745,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "2857:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 746,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2867:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2857:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2066756e647320617661696c61626c65",
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2870:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1864f6ba8e67520bd13921f2bc328aff378bb8aa77729a9ff30bb6681c7eb9b1",
																"typeString": "literal_string \"No funds available\""
															},
															"value": "No funds available"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1864f6ba8e67520bd13921f2bc328aff378bb8aa77729a9ff30bb6681c7eb9b1",
																"typeString": "literal_string \"No funds available\""
															}
														],
														"id": 744,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2849:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2849:42:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 750,
												"nodeType": "ExpressionStatement",
												"src": "2849:42:4"
											},
											{
												"expression": {
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 751,
															"name": "pendingWithdrawals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "2902:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint128_$",
																"typeString": "mapping(address => uint128)"
															}
														},
														"id": 754,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 752,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "2921:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2921:7:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2902:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2932:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2902:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 757,
												"nodeType": "ExpressionStatement",
												"src": "2902:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 764,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "2971:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 760,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "2952:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2952:7:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2944:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 758,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2944:8:4",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2944:16:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2961:9:4",
														"memberName": "sendValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 205,
														"src": "2944:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$attached_to$_t_address_payable_$",
															"typeString": "function (address payable,uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2944:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 766,
												"nodeType": "ExpressionStatement",
												"src": "2944:35:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 768,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "3011:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3011:7:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 770,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "3020:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"id": 767,
														"name": "PaymentReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "2995:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint128_$returns$__$",
															"typeString": "function (address,uint128)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2995:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "EmitStatement",
												"src": "2990:38:4"
											}
										]
									},
									"functionSelector": "d72e481d",
									"id": 774,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 735,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 734,
												"name": "onlyAdmin",
												"nameLocations": [
													"2772:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 547,
												"src": "2772:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2772:9:4"
										}
									],
									"name": "withdrawServiceFees",
									"nameLocation": "2741:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2760:2:4"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2782:0:4"
									},
									"scope": 806,
									"src": "2732:304:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 804,
										"nodeType": "Block",
										"src": "3116:150:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 782,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3135:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3139:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3135:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 784,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "3149:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3149:7:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3135:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Role_$472",
																	"typeString": "enum RestaurantManager.Role"
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 787,
																		"name": "roles",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 486,
																		"src": "3160:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_enum$_Role_$472_$",
																			"typeString": "mapping(address => enum RestaurantManager.Role)"
																		}
																	},
																	"id": 790,
																	"indexExpression": {
																		"expression": {
																			"id": 788,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3166:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3170:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3166:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3160:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$472",
																		"typeString": "enum RestaurantManager.Role"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 791,
																		"name": "Role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 472,
																		"src": "3181:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Role_$472_$",
																			"typeString": "type(enum RestaurantManager.Role)"
																		}
																	},
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3186:5:4",
																	"memberName": "Admin",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 471,
																	"src": "3181:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$472",
																		"typeString": "enum RestaurantManager.Role"
																	}
																},
																"src": "3160:31:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3135:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e617574686f72697a6564",
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3193:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
																"typeString": "literal_string \"Unauthorized\""
															},
															"value": "Unauthorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
																"typeString": "literal_string \"Unauthorized\""
															}
														],
														"id": 781,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3127:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3127:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "3127:81:4"
											},
											{
												"expression": {
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 798,
															"name": "pendingWithdrawals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "3219:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint128_$",
																"typeString": "mapping(address => uint128)"
															}
														},
														"id": 800,
														"indexExpression": {
															"id": 799,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "3238:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3219:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 801,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "3252:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "3219:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 803,
												"nodeType": "ExpressionStatement",
												"src": "3219:39:4"
											}
										]
									},
									"functionSelector": "a0e31ec4",
									"id": 805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addPendingWithdrawal",
									"nameLocation": "3051:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3080:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "3072:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3072:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3099:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "3091:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 777,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3091:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3071:35:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3116:0:4"
									},
									"scope": 806,
									"src": "3042:224:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 807,
							"src": "170:3099:4",
							"usedErrors": [
								13,
								18,
								447,
								450
							],
							"usedEvents": [
								24,
								509,
								515,
								522,
								526,
								532
							]
						}
					],
					"src": "33:3236:4"
				},
				"id": 4
			}
		}
	}
}