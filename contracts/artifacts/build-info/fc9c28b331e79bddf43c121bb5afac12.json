{
	"id": "fc9c28b331e79bddf43c121bb5afac12",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/RestaurantManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\nimport \"../structs/FoodTypes.sol\";\r\nimport \"../access/RoleAccess.sol\";\r\nimport \"../interfaces/IRestaurantManager.sol\";\r\n\r\ncontract RestaurantManager is OwnableUpgradeable, RoleAccess, IRestaurantManager {\r\n    uint128 public nextRestaurantId;\r\n    mapping(uint128 => address) public restaurantOwners;\r\n\r\n    function initialize(address _owner) public initializer {\r\n        __Ownable_init(_owner);\r\n        initializeRoles(_owner);\r\n        nextRestaurantId = 1;\r\n    }\r\n\r\n    function registerRestaurant() external onlyAdmin returns (uint128) {\r\n        uint128 restaurantId = nextRestaurantId;\r\n        restaurantOwners[restaurantId] = msg.sender;\r\n        emit RestaurantRegistered(restaurantId, msg.sender);\r\n        nextRestaurantId++;\r\n        return restaurantId;\r\n    }\r\n\r\n    function getRestaurantOwner(uint128 restaurantId) external view override returns (address) {\r\n        return restaurantOwners[restaurantId];\r\n    }\r\n}"
			},
			"interfaces/IRestaurantManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\ninterface IRestaurantManager {\r\n    event RestaurantRegistered(uint128 indexed restaurantId, address indexed owner);\r\n\r\n    function registerRestaurant() external returns (uint128);\r\n    function getRestaurantOwner(uint128 restaurantId) external view returns (address);\r\n}"
			},
			"access/RoleAccess.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nimport \"../structs/FoodTypes.sol\";\r\n\r\ncontract RoleAccess {\r\n    mapping(address => Role) public roles;\r\n    mapping(address => uint128) public staffRestaurants;\r\n\r\n    modifier onlyAdmin() {\r\n        require(roles[msg.sender] == Role.Admin, \"Only admin\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyStaff(uint128 restaurantId) {\r\n        require(staffRestaurants[msg.sender] == restaurantId, \"Only staff of this restaurant\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyCustomer() {\r\n        require(roles[msg.sender] == Role.Customer || roles[msg.sender] == Role.Staff, \"Only customer\");\r\n        _;\r\n    }\r\n\r\n    function initializeRoles(address admin) internal {\r\n        roles[admin] = Role.Admin;\r\n    }\r\n\r\n    function assignStaff(address staff, uint128 restaurantId) external onlyAdmin {\r\n        roles[staff] = Role.Staff;\r\n        staffRestaurants[staff] = restaurantId;\r\n    }\r\n\r\n    function removeStaff(address staff) external onlyAdmin {\r\n        delete staffRestaurants[staff];\r\n        roles[staff] = Role.Customer;\r\n    }\r\n}"
			},
			"structs/FoodTypes.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nenum Role { Admin, Staff, Customer }\r\nenum OrderStatus { Placed, Confirmed, Preparing, Ready, Cancelled, Completed }\r\n\r\nstruct MenuItem {\r\n    uint128 id;\r\n    uint128 restaurantId;\r\n    string name;\r\n    uint128 price;\r\n    bool available;\r\n    string description;\r\n    string category;\r\n    uint128 totalRating;\r\n    uint128 ratingCount;\r\n    uint128 preparationTime;\r\n}\r\n\r\nstruct Order {\r\n    uint128 id;\r\n    address customer;\r\n    uint128 restaurantId;\r\n    uint128[] itemIds;\r\n    uint128[] quantities;\r\n    uint128 totalPrice;\r\n    OrderStatus status;\r\n    uint128 timestamp;\r\n    uint128 preparationTime;\r\n}\r\n\r\nstruct Review {\r\n    address customer;\r\n    uint128 restaurantId;\r\n    uint8 rating;\r\n    string comment;\r\n    uint128 timestamp;\r\n}"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"access/RoleAccess.sol": {
				"RoleAccess": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "staff",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "restaurantId",
									"type": "uint128"
								}
							],
							"name": "assignStaff",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "staff",
									"type": "address"
								}
							],
							"name": "removeStaff",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "roles",
							"outputs": [
								{
									"internalType": "enum Role",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "staffRestaurants",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"access/RoleAccess.sol\":99:1093  contract RoleAccess {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"access/RoleAccess.sol\":99:1093  contract RoleAccess {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2d3238fe\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x99374642\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xae9a4655\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc4522c92\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"access/RoleAccess.sol\":170:221  mapping(address => uint128) public staffRestaurants */\n    tag_3:\n      tag_7\n      tag_8\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_8:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_7:\n      mload(0x40)\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":547:594   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":529:595   */\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"access/RoleAccess.sol\":170:221  mapping(address => uint128) public staffRestaurants */\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"access/RoleAccess.sol\":126:163  mapping(address => Role) public roles */\n    tag_4:\n      tag_13\n      tag_14\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_14:\n      0x00\n      0x20\n      dup2\n      swap1\n      mstore\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_13:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n        /* \"access/RoleAccess.sol\":769:939  function assignStaff(address staff, uint128 restaurantId) external onlyAdmin {... */\n    tag_5:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      stop\n        /* \"access/RoleAccess.sol\":947:1090  function removeStaff(address staff) external onlyAdmin {... */\n    tag_6:\n      tag_18\n      tag_23\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_23:\n      tag_24\n      jump\t// in\n        /* \"access/RoleAccess.sol\":769:939  function assignStaff(address staff, uint128 restaurantId) external onlyAdmin {... */\n    tag_21:\n        /* \"access/RoleAccess.sol\":276:286  msg.sender */\n      caller\n        /* \"access/RoleAccess.sol\":291:301  Role.Admin */\n      0x00\n        /* \"access/RoleAccess.sol\":270:287  roles[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"access/RoleAccess.sol\":270:301  roles[msg.sender] == Role.Admin */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_30\n      jumpi\n      tag_30\n      tag_28\n      jump\t// in\n    tag_30:\n      eq\n        /* \"access/RoleAccess.sol\":262:316  require(roles[msg.sender] == Role.Admin, \"Only admin\") */\n      tag_31\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1661:1663   */\n      0x20\n        /* \"access/RoleAccess.sol\":262:316  require(roles[msg.sender] == Role.Admin, \"Only admin\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1643:1664   */\n      mstore\n        /* \"#utility.yul\":1700:1702   */\n      0x0a\n        /* \"#utility.yul\":1680:1698   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1673:1703   */\n      mstore\n      shl(0xb1, 0x27b7363c9030b236b4b7)\n        /* \"#utility.yul\":1719:1737   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1712:1752   */\n      mstore\n        /* \"#utility.yul\":1769:1787   */\n      0x64\n      add\n        /* \"access/RoleAccess.sol\":262:316  require(roles[msg.sender] == Role.Admin, \"Only admin\") */\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_31:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"access/RoleAccess.sol\":857:869  roles[staff] */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"access/RoleAccess.sol\":857:862  roles */\n      0x00\n        /* \"access/RoleAccess.sol\":857:869  roles[staff] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"access/RoleAccess.sol\":857:882  roles[staff] = Role.Staff */\n      dup1\n      sload\n        /* \"access/RoleAccess.sol\":872:882  Role.Staff */\n      0x01\n      not(0xff)\n        /* \"access/RoleAccess.sol\":857:882  roles[staff] = Role.Staff */\n      swap1\n      swap2\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"access/RoleAccess.sol\":893:916  staffRestaurants[staff] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"access/RoleAccess.sol\":893:931  staffRestaurants[staff] = restaurantId */\n      dup1\n      sload\n      not(sub(shl(0x80, 0x01), 0x01))\n      and\n      sub(shl(0x80, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"access/RoleAccess.sol\":769:939  function assignStaff(address staff, uint128 restaurantId) external onlyAdmin {... */\n      jump\t// out\n        /* \"access/RoleAccess.sol\":947:1090  function removeStaff(address staff) external onlyAdmin {... */\n    tag_24:\n        /* \"access/RoleAccess.sol\":276:286  msg.sender */\n      caller\n        /* \"access/RoleAccess.sol\":291:301  Role.Admin */\n      0x00\n        /* \"access/RoleAccess.sol\":270:287  roles[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"access/RoleAccess.sol\":270:301  roles[msg.sender] == Role.Admin */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_41\n      jumpi\n      tag_41\n      tag_28\n      jump\t// in\n    tag_41:\n      eq\n        /* \"access/RoleAccess.sol\":262:316  require(roles[msg.sender] == Role.Admin, \"Only admin\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1661:1663   */\n      0x20\n        /* \"access/RoleAccess.sol\":262:316  require(roles[msg.sender] == Role.Admin, \"Only admin\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1643:1664   */\n      mstore\n        /* \"#utility.yul\":1700:1702   */\n      0x0a\n        /* \"#utility.yul\":1680:1698   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1673:1703   */\n      mstore\n      shl(0xb1, 0x27b7363c9030b236b4b7)\n        /* \"#utility.yul\":1719:1737   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1712:1752   */\n      mstore\n        /* \"#utility.yul\":1769:1787   */\n      0x64\n      add\n        /* \"access/RoleAccess.sol\":262:316  require(roles[msg.sender] == Role.Admin, \"Only admin\") */\n      tag_32\n        /* \"#utility.yul\":1459:1793   */\n      jump\n        /* \"access/RoleAccess.sol\":262:316  require(roles[msg.sender] == Role.Admin, \"Only admin\") */\n    tag_42:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"access/RoleAccess.sol\":1020:1043  staffRestaurants[staff] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"access/RoleAccess.sol\":1020:1036  staffRestaurants */\n      0x01\n        /* \"access/RoleAccess.sol\":1020:1043  staffRestaurants[staff] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"access/RoleAccess.sol\":1013:1043  delete staffRestaurants[staff] */\n      dup1\n      sload\n      not(sub(shl(0x80, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"access/RoleAccess.sol\":1054:1066  roles[staff] */\n      swap1\n      dup3\n      swap1\n      mstore\n      swap1\n      keccak256\n        /* \"access/RoleAccess.sol\":1054:1082  roles[staff] = Role.Customer */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"access/RoleAccess.sol\":1069:1082  Role.Customer */\n      0x02\n        /* \"access/RoleAccess.sol\":1054:1082  roles[staff] = Role.Customer */\n      or\n      swap1\n      sstore\n        /* \"access/RoleAccess.sol\":947:1090  function removeStaff(address staff) external onlyAdmin {... */\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_47:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_50\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      0x00\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_50:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_9:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_52\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_52:\n        /* \"#utility.yul\":343:372   */\n      tag_53\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_47\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":606:733   */\n    tag_28:\n        /* \"#utility.yul\":667:677   */\n      0x4e487b71\n        /* \"#utility.yul\":662:665   */\n      0xe0\n        /* \"#utility.yul\":658:678   */\n      shl\n        /* \"#utility.yul\":655:656   */\n      0x00\n        /* \"#utility.yul\":648:679   */\n      mstore\n        /* \"#utility.yul\":698:702   */\n      0x21\n        /* \"#utility.yul\":695:696   */\n      0x04\n        /* \"#utility.yul\":688:703   */\n      mstore\n        /* \"#utility.yul\":722:726   */\n      0x24\n        /* \"#utility.yul\":719:720   */\n      0x00\n        /* \"#utility.yul\":712:727   */\n      revert\n        /* \"#utility.yul\":738:1074   */\n    tag_17:\n        /* \"#utility.yul\":878:880   */\n      0x20\n        /* \"#utility.yul\":863:881   */\n      dup2\n      add\n        /* \"#utility.yul\":911:912   */\n      0x03\n        /* \"#utility.yul\":900:913   */\n      dup4\n      lt\n        /* \"#utility.yul\":890:1034   */\n      tag_57\n      jumpi\n        /* \"#utility.yul\":956:966   */\n      0x4e487b71\n        /* \"#utility.yul\":951:954   */\n      0xe0\n        /* \"#utility.yul\":947:967   */\n      shl\n        /* \"#utility.yul\":944:945   */\n      0x00\n        /* \"#utility.yul\":937:968   */\n      mstore\n        /* \"#utility.yul\":991:995   */\n      0x21\n        /* \"#utility.yul\":988:989   */\n      0x04\n        /* \"#utility.yul\":981:996   */\n      mstore\n        /* \"#utility.yul\":1019:1023   */\n      0x24\n        /* \"#utility.yul\":1016:1017   */\n      0x00\n        /* \"#utility.yul\":1009:1024   */\n      revert\n        /* \"#utility.yul\":890:1034   */\n    tag_57:\n        /* \"#utility.yul\":1043:1068   */\n      swap2\n      swap1\n      mstore\n        /* \"#utility.yul\":738:1074   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1079:1454   */\n    tag_20:\n        /* \"#utility.yul\":1147:1153   */\n      0x00\n        /* \"#utility.yul\":1155:1161   */\n      0x00\n        /* \"#utility.yul\":1208:1210   */\n      0x40\n        /* \"#utility.yul\":1196:1205   */\n      dup4\n        /* \"#utility.yul\":1187:1194   */\n      dup6\n        /* \"#utility.yul\":1183:1206   */\n      sub\n        /* \"#utility.yul\":1179:1211   */\n      slt\n        /* \"#utility.yul\":1176:1228   */\n      iszero\n      tag_59\n      jumpi\n        /* \"#utility.yul\":1224:1225   */\n      0x00\n        /* \"#utility.yul\":1221:1222   */\n      0x00\n        /* \"#utility.yul\":1214:1226   */\n      revert\n        /* \"#utility.yul\":1176:1228   */\n    tag_59:\n        /* \"#utility.yul\":1247:1276   */\n      tag_60\n        /* \"#utility.yul\":1266:1275   */\n      dup4\n        /* \"#utility.yul\":1247:1276   */\n      tag_47\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1237:1276   */\n      swap2\n      pop\n        /* \"#utility.yul\":1326:1328   */\n      0x20\n        /* \"#utility.yul\":1315:1324   */\n      dup4\n        /* \"#utility.yul\":1311:1329   */\n      add\n        /* \"#utility.yul\":1298:1330   */\n      calldataload\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":1363:1368   */\n      dup2\n        /* \"#utility.yul\":1359:1405   */\n      and\n        /* \"#utility.yul\":1352:1357   */\n      dup2\n        /* \"#utility.yul\":1349:1406   */\n      eq\n        /* \"#utility.yul\":1339:1424   */\n      tag_61\n      jumpi\n        /* \"#utility.yul\":1420:1421   */\n      0x00\n        /* \"#utility.yul\":1417:1418   */\n      0x00\n        /* \"#utility.yul\":1410:1422   */\n      revert\n        /* \"#utility.yul\":1339:1424   */\n    tag_61:\n        /* \"#utility.yul\":1443:1448   */\n      dup1\n        /* \"#utility.yul\":1433:1448   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1079:1454   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208a2736e0885b0893d32fdc53eedcf0885dddaa517d82f142439cf262a5e4e81f64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b5061031b8061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061004a575f3560e01c80632d3238fe1461004e5780639937464214610093578063ae9a4655146100c2578063c4522c92146100d7575b5f5ffd5b61007661005c36600461024b565b60016020525f90815260409020546001600160801b031681565b6040516001600160801b0390911681526020015b60405180910390f35b6100b56100a136600461024b565b5f6020819052908152604090205460ff1681565b60405161008a919061027f565b6100d56100d03660046102a5565b6100ea565b005b6100d56100e536600461024b565b610199565b335f9081526020819052604081205460ff16600281111561010d5761010d61026b565b1461014c5760405162461bcd60e51b815260206004820152600a60248201526927b7363c9030b236b4b760b11b60448201526064015b60405180910390fd5b6001600160a01b03919091165f908152602081815260408083208054600160ff199091168117909155909152902080546001600160801b0319166001600160801b03909216919091179055565b335f9081526020819052604081205460ff1660028111156101bc576101bc61026b565b146101f65760405162461bcd60e51b815260206004820152600a60248201526927b7363c9030b236b4b760b11b6044820152606401610143565b6001600160a01b03165f90815260016020908152604080832080546001600160801b0319169055908290529020805460ff19166002179055565b80356001600160a01b0381168114610246575f5ffd5b919050565b5f6020828403121561025b575f5ffd5b61026482610230565b9392505050565b634e487b7160e01b5f52602160045260245ffd5b602081016003831061029f57634e487b7160e01b5f52602160045260245ffd5b91905290565b5f5f604083850312156102b6575f5ffd5b6102bf83610230565b915060208301356001600160801b03811681146102da575f5ffd5b80915050925092905056fea26469706673582212208a2736e0885b0893d32fdc53eedcf0885dddaa517d82f142439cf262a5e4e81f64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x31B DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2D3238FE EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x99374642 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0xAE9A4655 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0xC4522C92 EQ PUSH2 0xD7 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x76 PUSH2 0x5C CALLDATASIZE PUSH1 0x4 PUSH2 0x24B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB5 PUSH2 0xA1 CALLDATASIZE PUSH1 0x4 PUSH2 0x24B JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x27F JUMP JUMPDEST PUSH2 0xD5 PUSH2 0xD0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A5 JUMP JUMPDEST PUSH2 0xEA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD5 PUSH2 0xE5 CALLDATASIZE PUSH1 0x4 PUSH2 0x24B JUMP JUMPDEST PUSH2 0x199 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x10D JUMPI PUSH2 0x10D PUSH2 0x26B JUMP JUMPDEST EQ PUSH2 0x14C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1BC JUMPI PUSH2 0x1BC PUSH2 0x26B JUMP JUMPDEST EQ PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x143 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND SWAP1 SSTORE SWAP1 DUP3 SWAP1 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x246 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x264 DUP3 PUSH2 0x230 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0x29F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x2BF DUP4 PUSH2 0x230 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2DA JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0x27 CALLDATASIZE RJUMP 0x885B ADDMOD SWAP4 0xD3 0x2F 0xDC MSTORE8 RETURNCONTRACT 0xDC CREATE DUP9 TSTORE 0xDD 0xAA MLOAD PUSH30 0x82F142439CF262A5E4E81F64736F6C634300081E00330000000000000000 ",
							"sourceMap": "99:994:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@assignStaff_610": {
									"entryPoint": 234,
									"id": 610,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@removeStaff_630": {
									"entryPoint": 409,
									"id": 630,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@roles_516": {
									"entryPoint": null,
									"id": 516,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@staffRestaurants_520": {
									"entryPoint": null,
									"id": 520,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint128": {
									"entryPoint": 677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_enum$_Role_$740__to_t_uint8__fromStack_reversed": {
									"entryPoint": 639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 619,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1795:7",
										"nodeType": "YulBlock",
										"src": "0:1795:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "63:124:7",
													"nodeType": "YulBlock",
													"src": "63:124:7",
													"statements": [
														{
															"nativeSrc": "73:29:7",
															"nodeType": "YulAssignment",
															"src": "73:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "95:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "82:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:7"
																},
																"nativeSrc": "82:20:7",
																"nodeType": "YulFunctionCall",
																"src": "82:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "73:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "165:16:7",
																"nodeType": "YulBlock",
																"src": "165:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "174:1:7",
																					"nodeType": "YulLiteral",
																					"src": "174:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "177:1:7",
																					"nodeType": "YulLiteral",
																					"src": "177:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "167:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:7"
																			},
																			"nativeSrc": "167:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:7"
																		},
																		"nativeSrc": "167:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "124:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "135:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "150:3:7",
																										"nodeType": "YulLiteral",
																										"src": "150:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "155:1:7",
																										"nodeType": "YulLiteral",
																										"src": "155:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "146:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:7"
																								},
																								"nativeSrc": "146:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "159:1:7",
																								"nodeType": "YulLiteral",
																								"src": "159:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "142:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:7"
																						},
																						"nativeSrc": "142:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "131:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:7"
																				},
																				"nativeSrc": "131:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "121:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:7"
																		},
																		"nativeSrc": "121:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "114:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:7"
																},
																"nativeSrc": "114:50:7",
																"nodeType": "YulFunctionCall",
																"src": "114:50:7"
															},
															"nativeSrc": "111:70:7",
															"nodeType": "YulIf",
															"src": "111:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "14:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "42:6:7",
														"nodeType": "YulTypedName",
														"src": "42:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "53:5:7",
														"nodeType": "YulTypedName",
														"src": "53:5:7",
														"type": ""
													}
												],
												"src": "14:173:7"
											},
											{
												"body": {
													"nativeSrc": "262:116:7",
													"nodeType": "YulBlock",
													"src": "262:116:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "308:16:7",
																"nodeType": "YulBlock",
																"src": "308:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "317:1:7",
																					"nodeType": "YulLiteral",
																					"src": "317:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "320:1:7",
																					"nodeType": "YulLiteral",
																					"src": "320:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "310:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:7"
																			},
																			"nativeSrc": "310:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:7"
																		},
																		"nativeSrc": "310:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "283:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "292:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "279:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:7"
																		},
																		"nativeSrc": "279:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "304:2:7",
																		"nodeType": "YulLiteral",
																		"src": "304:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "275:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:7"
																},
																"nativeSrc": "275:32:7",
																"nodeType": "YulFunctionCall",
																"src": "275:32:7"
															},
															"nativeSrc": "272:52:7",
															"nodeType": "YulIf",
															"src": "272:52:7"
														},
														{
															"nativeSrc": "333:39:7",
															"nodeType": "YulAssignment",
															"src": "333:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "362:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "343:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:7"
																},
																"nativeSrc": "343:29:7",
																"nodeType": "YulFunctionCall",
																"src": "343:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "333:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "192:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "228:9:7",
														"nodeType": "YulTypedName",
														"src": "228:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "239:7:7",
														"nodeType": "YulTypedName",
														"src": "239:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "251:6:7",
														"nodeType": "YulTypedName",
														"src": "251:6:7",
														"type": ""
													}
												],
												"src": "192:186:7"
											},
											{
												"body": {
													"nativeSrc": "484:117:7",
													"nodeType": "YulBlock",
													"src": "484:117:7",
													"statements": [
														{
															"nativeSrc": "494:26:7",
															"nodeType": "YulAssignment",
															"src": "494:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "506:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "506:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "517:2:7",
																		"nodeType": "YulLiteral",
																		"src": "517:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:7"
																},
																"nativeSrc": "502:18:7",
																"nodeType": "YulFunctionCall",
																"src": "502:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "536:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "536:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "551:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "551:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "559:34:7",
																				"nodeType": "YulLiteral",
																				"src": "559:34:7",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "547:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "547:3:7"
																		},
																		"nativeSrc": "547:47:7",
																		"nodeType": "YulFunctionCall",
																		"src": "547:47:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "529:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "529:6:7"
																},
																"nativeSrc": "529:66:7",
																"nodeType": "YulFunctionCall",
																"src": "529:66:7"
															},
															"nativeSrc": "529:66:7",
															"nodeType": "YulExpressionStatement",
															"src": "529:66:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed",
												"nativeSrc": "383:218:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "453:9:7",
														"nodeType": "YulTypedName",
														"src": "453:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "464:6:7",
														"nodeType": "YulTypedName",
														"src": "464:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "475:4:7",
														"nodeType": "YulTypedName",
														"src": "475:4:7",
														"type": ""
													}
												],
												"src": "383:218:7"
											},
											{
												"body": {
													"nativeSrc": "638:95:7",
													"nodeType": "YulBlock",
													"src": "638:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "655:1:7",
																		"nodeType": "YulLiteral",
																		"src": "655:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "662:3:7",
																				"nodeType": "YulLiteral",
																				"src": "662:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "667:10:7",
																				"nodeType": "YulLiteral",
																				"src": "667:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "658:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "658:3:7"
																		},
																		"nativeSrc": "658:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "658:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "648:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:7"
																},
																"nativeSrc": "648:31:7",
																"nodeType": "YulFunctionCall",
																"src": "648:31:7"
															},
															"nativeSrc": "648:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "648:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "695:1:7",
																		"nodeType": "YulLiteral",
																		"src": "695:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "698:4:7",
																		"nodeType": "YulLiteral",
																		"src": "698:4:7",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "688:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "688:6:7"
																},
																"nativeSrc": "688:15:7",
																"nodeType": "YulFunctionCall",
																"src": "688:15:7"
															},
															"nativeSrc": "688:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "688:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "719:1:7",
																		"nodeType": "YulLiteral",
																		"src": "719:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "722:4:7",
																		"nodeType": "YulLiteral",
																		"src": "722:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "712:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "712:6:7"
																},
																"nativeSrc": "712:15:7",
																"nodeType": "YulFunctionCall",
																"src": "712:15:7"
															},
															"nativeSrc": "712:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "712:15:7"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "606:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "606:127:7"
											},
											{
												"body": {
													"nativeSrc": "845:229:7",
													"nodeType": "YulBlock",
													"src": "845:229:7",
													"statements": [
														{
															"nativeSrc": "855:26:7",
															"nodeType": "YulAssignment",
															"src": "855:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "867:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "867:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "878:2:7",
																		"nodeType": "YulLiteral",
																		"src": "878:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "863:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "863:3:7"
																},
																"nativeSrc": "863:18:7",
																"nodeType": "YulFunctionCall",
																"src": "863:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "855:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "855:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "923:111:7",
																"nodeType": "YulBlock",
																"src": "923:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "944:1:7",
																					"nodeType": "YulLiteral",
																					"src": "944:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "951:3:7",
																							"nodeType": "YulLiteral",
																							"src": "951:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "956:10:7",
																							"nodeType": "YulLiteral",
																							"src": "956:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "947:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "947:3:7"
																					},
																					"nativeSrc": "947:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "947:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "937:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "937:6:7"
																			},
																			"nativeSrc": "937:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "937:31:7"
																		},
																		"nativeSrc": "937:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "937:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "988:1:7",
																					"nodeType": "YulLiteral",
																					"src": "988:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "991:4:7",
																					"nodeType": "YulLiteral",
																					"src": "991:4:7",
																					"type": "",
																					"value": "0x21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "981:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "981:6:7"
																			},
																			"nativeSrc": "981:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "981:15:7"
																		},
																		"nativeSrc": "981:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "981:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1016:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1016:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1019:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1019:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1009:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1009:6:7"
																			},
																			"nativeSrc": "1009:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1009:15:7"
																		},
																		"nativeSrc": "1009:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1009:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "903:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "911:1:7",
																				"nodeType": "YulLiteral",
																				"src": "911:1:7",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "900:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "900:2:7"
																		},
																		"nativeSrc": "900:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "900:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "893:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "893:6:7"
																},
																"nativeSrc": "893:21:7",
																"nodeType": "YulFunctionCall",
																"src": "893:21:7"
															},
															"nativeSrc": "890:144:7",
															"nodeType": "YulIf",
															"src": "890:144:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1050:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1050:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1061:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1061:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1043:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1043:6:7"
																},
																"nativeSrc": "1043:25:7",
																"nodeType": "YulFunctionCall",
																"src": "1043:25:7"
															},
															"nativeSrc": "1043:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "1043:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Role_$740__to_t_uint8__fromStack_reversed",
												"nativeSrc": "738:336:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "814:9:7",
														"nodeType": "YulTypedName",
														"src": "814:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "825:6:7",
														"nodeType": "YulTypedName",
														"src": "825:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "836:4:7",
														"nodeType": "YulTypedName",
														"src": "836:4:7",
														"type": ""
													}
												],
												"src": "738:336:7"
											},
											{
												"body": {
													"nativeSrc": "1166:288:7",
													"nodeType": "YulBlock",
													"src": "1166:288:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1212:16:7",
																"nodeType": "YulBlock",
																"src": "1212:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1221:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1221:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1224:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1224:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1214:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1214:6:7"
																			},
																			"nativeSrc": "1214:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1214:12:7"
																		},
																		"nativeSrc": "1214:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1214:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1187:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1187:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1196:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1196:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1183:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1183:3:7"
																		},
																		"nativeSrc": "1183:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1183:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1208:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1208:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1179:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1179:3:7"
																},
																"nativeSrc": "1179:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1179:32:7"
															},
															"nativeSrc": "1176:52:7",
															"nodeType": "YulIf",
															"src": "1176:52:7"
														},
														{
															"nativeSrc": "1237:39:7",
															"nodeType": "YulAssignment",
															"src": "1237:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1266:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1266:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1247:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1247:18:7"
																},
																"nativeSrc": "1247:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1247:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1237:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1237:6:7"
																}
															]
														},
														{
															"nativeSrc": "1285:45:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1285:45:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1315:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1315:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1326:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1326:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1311:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1311:3:7"
																		},
																		"nativeSrc": "1311:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1311:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1298:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1298:12:7"
																},
																"nativeSrc": "1298:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1298:32:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1289:5:7",
																	"nodeType": "YulTypedName",
																	"src": "1289:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1408:16:7",
																"nodeType": "YulBlock",
																"src": "1408:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1417:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1417:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1420:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1420:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1410:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1410:6:7"
																			},
																			"nativeSrc": "1410:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1410:12:7"
																		},
																		"nativeSrc": "1410:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1410:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1352:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1352:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1363:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1363:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1370:34:7",
																						"nodeType": "YulLiteral",
																						"src": "1370:34:7",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1359:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1359:3:7"
																				},
																				"nativeSrc": "1359:46:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1359:46:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1349:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1349:2:7"
																		},
																		"nativeSrc": "1349:57:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1349:57:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1342:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:7"
																},
																"nativeSrc": "1342:65:7",
																"nodeType": "YulFunctionCall",
																"src": "1342:65:7"
															},
															"nativeSrc": "1339:85:7",
															"nodeType": "YulIf",
															"src": "1339:85:7"
														},
														{
															"nativeSrc": "1433:15:7",
															"nodeType": "YulAssignment",
															"src": "1433:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "1443:5:7",
																"nodeType": "YulIdentifier",
																"src": "1443:5:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1433:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint128",
												"nativeSrc": "1079:375:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1124:9:7",
														"nodeType": "YulTypedName",
														"src": "1124:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1135:7:7",
														"nodeType": "YulTypedName",
														"src": "1135:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1147:6:7",
														"nodeType": "YulTypedName",
														"src": "1147:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1155:6:7",
														"nodeType": "YulTypedName",
														"src": "1155:6:7",
														"type": ""
													}
												],
												"src": "1079:375:7"
											},
											{
												"body": {
													"nativeSrc": "1633:160:7",
													"nodeType": "YulBlock",
													"src": "1633:160:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1650:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1650:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1661:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1661:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1643:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1643:6:7"
																},
																"nativeSrc": "1643:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1643:21:7"
															},
															"nativeSrc": "1643:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "1643:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1684:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1684:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1695:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1695:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1680:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1680:3:7"
																		},
																		"nativeSrc": "1680:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1680:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1700:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1700:2:7",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1673:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1673:6:7"
																},
																"nativeSrc": "1673:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1673:30:7"
															},
															"nativeSrc": "1673:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "1673:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1723:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1723:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1734:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1734:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1719:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1719:3:7"
																		},
																		"nativeSrc": "1719:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1719:18:7"
																	},
																	{
																		"hexValue": "4f6e6c792061646d696e",
																		"kind": "string",
																		"nativeSrc": "1739:12:7",
																		"nodeType": "YulLiteral",
																		"src": "1739:12:7",
																		"type": "",
																		"value": "Only admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1712:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1712:6:7"
																},
																"nativeSrc": "1712:40:7",
																"nodeType": "YulFunctionCall",
																"src": "1712:40:7"
															},
															"nativeSrc": "1712:40:7",
															"nodeType": "YulExpressionStatement",
															"src": "1712:40:7"
														},
														{
															"nativeSrc": "1761:26:7",
															"nodeType": "YulAssignment",
															"src": "1761:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1773:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1773:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1784:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1784:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1769:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1769:3:7"
																},
																"nativeSrc": "1769:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1769:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1761:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1761:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1459:334:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1610:9:7",
														"nodeType": "YulTypedName",
														"src": "1610:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1624:4:7",
														"nodeType": "YulTypedName",
														"src": "1624:4:7",
														"type": ""
													}
												],
												"src": "1459:334:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffff))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_enum$_Role_$740__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 3))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_uint128(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_stringliteral_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"Only admin\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061004a575f3560e01c80632d3238fe1461004e5780639937464214610093578063ae9a4655146100c2578063c4522c92146100d7575b5f5ffd5b61007661005c36600461024b565b60016020525f90815260409020546001600160801b031681565b6040516001600160801b0390911681526020015b60405180910390f35b6100b56100a136600461024b565b5f6020819052908152604090205460ff1681565b60405161008a919061027f565b6100d56100d03660046102a5565b6100ea565b005b6100d56100e536600461024b565b610199565b335f9081526020819052604081205460ff16600281111561010d5761010d61026b565b1461014c5760405162461bcd60e51b815260206004820152600a60248201526927b7363c9030b236b4b760b11b60448201526064015b60405180910390fd5b6001600160a01b03919091165f908152602081815260408083208054600160ff199091168117909155909152902080546001600160801b0319166001600160801b03909216919091179055565b335f9081526020819052604081205460ff1660028111156101bc576101bc61026b565b146101f65760405162461bcd60e51b815260206004820152600a60248201526927b7363c9030b236b4b760b11b6044820152606401610143565b6001600160a01b03165f90815260016020908152604080832080546001600160801b0319169055908290529020805460ff19166002179055565b80356001600160a01b0381168114610246575f5ffd5b919050565b5f6020828403121561025b575f5ffd5b61026482610230565b9392505050565b634e487b7160e01b5f52602160045260245ffd5b602081016003831061029f57634e487b7160e01b5f52602160045260245ffd5b91905290565b5f5f604083850312156102b6575f5ffd5b6102bf83610230565b915060208301356001600160801b03811681146102da575f5ffd5b80915050925092905056fea26469706673582212208a2736e0885b0893d32fdc53eedcf0885dddaa517d82f142439cf262a5e4e81f64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2D3238FE EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x99374642 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0xAE9A4655 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0xC4522C92 EQ PUSH2 0xD7 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x76 PUSH2 0x5C CALLDATASIZE PUSH1 0x4 PUSH2 0x24B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB5 PUSH2 0xA1 CALLDATASIZE PUSH1 0x4 PUSH2 0x24B JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x27F JUMP JUMPDEST PUSH2 0xD5 PUSH2 0xD0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A5 JUMP JUMPDEST PUSH2 0xEA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD5 PUSH2 0xE5 CALLDATASIZE PUSH1 0x4 PUSH2 0x24B JUMP JUMPDEST PUSH2 0x199 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x10D JUMPI PUSH2 0x10D PUSH2 0x26B JUMP JUMPDEST EQ PUSH2 0x14C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1BC JUMPI PUSH2 0x1BC PUSH2 0x26B JUMP JUMPDEST EQ PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x143 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND SWAP1 SSTORE SWAP1 DUP3 SWAP1 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x246 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x264 DUP3 PUSH2 0x230 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0x29F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x2BF DUP4 PUSH2 0x230 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2DA JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0x27 CALLDATASIZE RJUMP 0x885B ADDMOD SWAP4 0xD3 0x2F 0xDC MSTORE8 RETURNCONTRACT 0xDC CREATE DUP9 TSTORE 0xDD 0xAA MLOAD PUSH30 0x82F142439CF262A5E4E81F64736F6C634300081E00330000000000000000 ",
							"sourceMap": "99:994:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;170:51;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;170:51:3;;;;;;-1:-1:-1;;;;;547:47:7;;;529:66;;517:2;502:18;170:51:3;;;;;;;;126:37;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;769:170::-;;;;;;:::i;:::-;;:::i;:::-;;947:143;;;;;;:::i;:::-;;:::i;769:170::-;276:10;291;270:17;;;;;;;;;;;;;:31;;;;;;;;:::i;:::-;;262:54;;;;-1:-1:-1;;;262:54:3;;1661:2:7;262:54:3;;;1643:21:7;1700:2;1680:18;;;1673:30;-1:-1:-1;;;1719:18:7;;;1712:40;1769:18;;262:54:3;;;;;;;;;-1:-1:-1;;;;;857:12:3;;;::::1;:5;:12:::0;;;::::1;::::0;;;;;;;:25;;872:10:::1;-1:-1:-1::0;;857:25:3;;::::1;::::0;::::1;::::0;;;893:23;;;;;:38;;-1:-1:-1;;;;;;893:38:3::1;-1:-1:-1::0;;;;;893:38:3;;::::1;::::0;;;::::1;::::0;;769:170::o;947:143::-;276:10;291;270:17;;;;;;;;;;;;;:31;;;;;;;;:::i;:::-;;262:54;;;;-1:-1:-1;;;262:54:3;;1661:2:7;262:54:3;;;1643:21:7;1700:2;1680:18;;;1673:30;-1:-1:-1;;;1719:18:7;;;1712:40;1769:18;;262:54:3;1459:334:7;262:54:3;-1:-1:-1;;;;;1020:23:3::1;;::::0;;;:16:::1;:23;::::0;;;;;;;1013:30;;-1:-1:-1;;;;;;1013:30:3::1;::::0;;1054:12;;;;;;:28;;-1:-1:-1;;1054:28:3::1;1069:13;1054:28;::::0;;947:143::o;14:173:7:-;82:20;;-1:-1:-1;;;;;131:31:7;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:7:o;606:127::-;667:10;662:3;658:20;655:1;648:31;698:4;695:1;688:15;722:4;719:1;712:15;738:336;878:2;863:18;;911:1;900:13;;890:144;;956:10;951:3;947:20;944:1;937:31;991:4;988:1;981:15;1019:4;1016:1;1009:15;890:144;1043:25;;;738:336;:::o;1079:375::-;1147:6;1155;1208:2;1196:9;1187:7;1183:23;1179:32;1176:52;;;1224:1;1221;1214:12;1176:52;1247:29;1266:9;1247:29;:::i;:::-;1237:39;;1326:2;1315:9;1311:18;1298:32;-1:-1:-1;;;;;1363:5:7;1359:46;1352:5;1349:57;1339:85;;1420:1;1417;1410:12;1339:85;1443:5;1433:15;;;1079:375;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "159000",
								"executionCost": "200",
								"totalCost": "159200"
							},
							"external": {
								"assignStaff(address,uint128)": "51266",
								"removeStaff(address)": "51166",
								"roles(address)": "2572",
								"staffRestaurants(address)": "2522"
							},
							"internal": {
								"initializeRoles(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 99,
									"end": 1093,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 99,
									"end": 1093,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 99,
									"end": 1093,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 99,
									"end": 1093,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 99,
									"end": 1093,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 99,
									"end": 1093,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 99,
									"end": 1093,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 99,
									"end": 1093,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 99,
									"end": 1093,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 99,
									"end": 1093,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 99,
									"end": 1093,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 99,
									"end": 1093,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 99,
									"end": 1093,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 99,
									"end": 1093,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 99,
									"end": 1093,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 99,
									"end": 1093,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 99,
									"end": 1093,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 99,
									"end": 1093,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 99,
									"end": 1093,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 99,
									"end": 1093,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 99,
									"end": 1093,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208a2736e0885b0893d32fdc53eedcf0885dddaa517d82f142439cf262a5e4e81f64736f6c634300081e0033",
									".code": [
										{
											"begin": 99,
											"end": 1093,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "PUSH",
											"source": 3,
											"value": "2D3238FE"
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "PUSH",
											"source": 3,
											"value": "99374642"
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "PUSH",
											"source": 3,
											"value": "AE9A4655"
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "PUSH",
											"source": 3,
											"value": "C4522C92"
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 99,
											"end": 1093,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 170,
											"end": 221,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 170,
											"end": 221,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 170,
											"end": 221,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 221,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 170,
											"end": 221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 170,
											"end": 221,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 221,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 170,
											"end": 221,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 221,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 221,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 170,
											"end": 221,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 170,
											"end": 221,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 221,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 547,
											"end": 594,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 547,
											"end": 594,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 547,
											"end": 594,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 529,
											"end": 595,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 529,
											"end": 595,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 170,
											"end": 221,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 170,
											"end": 221,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 221,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 126,
											"end": 163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 126,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 126,
											"end": 163,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 126,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 126,
											"end": 163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 126,
											"end": 163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 163,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 126,
											"end": 163,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 126,
											"end": 163,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 126,
											"end": 163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 126,
											"end": 163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 126,
											"end": 163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 769,
											"end": 939,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 769,
											"end": 939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 769,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 769,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 769,
											"end": 939,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 769,
											"end": 939,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 769,
											"end": 939,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 769,
											"end": 939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 769,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 769,
											"end": 939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 769,
											"end": 939,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 769,
											"end": 939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 769,
											"end": 939,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1090,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 947,
											"end": 1090,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 947,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 947,
											"end": 1090,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1090,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 947,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 947,
											"end": 1090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1090,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 947,
											"end": 1090,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 947,
											"end": 1090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 769,
											"end": 939,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 769,
											"end": 939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 276,
											"end": 286,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 291,
											"end": 301,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 287,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 270,
											"end": 287,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 270,
											"end": 287,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 270,
											"end": 287,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 270,
											"end": 301,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 270,
											"end": 301,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 270,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 270,
											"end": 301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 270,
											"end": 301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 262,
											"end": 316,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 316,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 262,
											"end": 316,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1663,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 262,
											"end": 316,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 262,
											"end": 316,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1643,
											"end": 1664,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1702,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1680,
											"end": 1698,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1680,
											"end": 1698,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1698,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1673,
											"end": 1703,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "27B7363C9030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1719,
											"end": 1737,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1719,
											"end": 1737,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1719,
											"end": 1737,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1712,
											"end": 1752,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1769,
											"end": 1787,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1769,
											"end": 1787,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 262,
											"end": 316,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 262,
											"end": 316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 316,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 262,
											"end": 316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 857,
											"end": 869,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 857,
											"end": 869,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 857,
											"end": 869,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 857,
											"end": 869,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 857,
											"end": 862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 857,
											"end": 869,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 857,
											"end": 869,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 857,
											"end": 869,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 857,
											"end": 869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 857,
											"end": 869,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 857,
											"end": 869,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 857,
											"end": 869,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 857,
											"end": 869,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 857,
											"end": 869,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 857,
											"end": 869,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 857,
											"end": 869,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 857,
											"end": 882,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 857,
											"end": 882,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 872,
											"end": 882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 857,
											"end": 882,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 857,
											"end": 882,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 857,
											"end": 882,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 857,
											"end": 882,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 857,
											"end": 882,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 857,
											"end": 882,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 857,
											"end": 882,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 857,
											"end": 882,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 893,
											"end": 916,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 893,
											"end": 916,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 893,
											"end": 916,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 893,
											"end": 916,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 893,
											"end": 916,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 893,
											"end": 931,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 893,
											"end": 931,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 893,
											"end": 931,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 893,
											"end": 931,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 893,
											"end": 931,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 893,
											"end": 931,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 893,
											"end": 931,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 893,
											"end": 931,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 893,
											"end": 931,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 893,
											"end": 931,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 893,
											"end": 931,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 893,
											"end": 931,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 769,
											"end": 939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1090,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 947,
											"end": 1090,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 276,
											"end": 286,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 291,
											"end": 301,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 287,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 270,
											"end": 287,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 270,
											"end": 287,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 270,
											"end": 287,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 270,
											"end": 301,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 270,
											"end": 301,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 270,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 270,
											"end": 301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 270,
											"end": 301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 262,
											"end": 316,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 316,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 262,
											"end": 316,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1663,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 262,
											"end": 316,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 262,
											"end": 316,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1643,
											"end": 1664,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1702,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1680,
											"end": 1698,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1680,
											"end": 1698,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1698,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1673,
											"end": 1703,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "27B7363C9030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1719,
											"end": 1737,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1719,
											"end": 1737,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1719,
											"end": 1737,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1712,
											"end": 1752,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1769,
											"end": 1787,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1769,
											"end": 1787,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 262,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1459,
											"end": 1793,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 262,
											"end": 316,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 262,
											"end": 316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1020,
											"end": 1043,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1020,
											"end": 1043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1043,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1020,
											"end": 1043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1020,
											"end": 1043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1043,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1043,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1043,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1043,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1043,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1013,
											"end": 1043,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1013,
											"end": 1043,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1013,
											"end": 1043,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1013,
											"end": 1043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1013,
											"end": 1043,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1066,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1066,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1066,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1066,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1066,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1066,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1082,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1082,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1054,
											"end": 1082,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1069,
											"end": 1082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1054,
											"end": 1082,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1082,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1082,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 343,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 606,
											"end": 733,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 606,
											"end": 733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 667,
											"end": 677,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 662,
											"end": 665,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 658,
											"end": 678,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 655,
											"end": 656,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 648,
											"end": 679,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 698,
											"end": 702,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 695,
											"end": 696,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 688,
											"end": 703,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 722,
											"end": 726,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 719,
											"end": 720,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 712,
											"end": 727,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 738,
											"end": 1074,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 738,
											"end": 1074,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 878,
											"end": 880,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 863,
											"end": 881,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 863,
											"end": 881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 911,
											"end": 912,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 900,
											"end": 913,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 900,
											"end": 913,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 890,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 890,
											"end": 1034,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 956,
											"end": 966,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 951,
											"end": 954,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 947,
											"end": 967,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 944,
											"end": 945,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 968,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 991,
											"end": 995,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 988,
											"end": 989,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 981,
											"end": 996,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1023,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1016,
											"end": 1017,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 1024,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 890,
											"end": 1034,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 890,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1068,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1068,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1068,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 738,
											"end": 1074,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 738,
											"end": 1074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1454,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1079,
											"end": 1454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1155,
											"end": 1161,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1210,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1196,
											"end": 1205,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1194,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1183,
											"end": 1206,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1211,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1228,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 1176,
											"end": 1228,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1225,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1221,
											"end": 1222,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1214,
											"end": 1226,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1228,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 1176,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1266,
											"end": 1275,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1247,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1276,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1247,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1237,
											"end": 1276,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1237,
											"end": 1276,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1328,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1324,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1329,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1298,
											"end": 1330,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1363,
											"end": 1368,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1405,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1357,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1349,
											"end": 1406,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1339,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1339,
											"end": 1424,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1420,
											"end": 1421,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1410,
											"end": 1422,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1339,
											"end": 1424,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1339,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1448,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1433,
											"end": 1448,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1433,
											"end": 1448,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1433,
											"end": 1448,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1454,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1454,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"access/RoleAccess.sol",
								"contracts/RestaurantManager.sol",
								"interfaces/IRestaurantManager.sol",
								"structs/FoodTypes.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"assignStaff(address,uint128)": "ae9a4655",
							"removeStaff(address)": "c4522c92",
							"roles(address)": "99374642",
							"staffRestaurants(address)": "2d3238fe"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staff\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"restaurantId\",\"type\":\"uint128\"}],\"name\":\"assignStaff\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staff\",\"type\":\"address\"}],\"name\":\"removeStaff\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"roles\",\"outputs\":[{\"internalType\":\"enum Role\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"staffRestaurants\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"access/RoleAccess.sol\":\"RoleAccess\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"access/RoleAccess.sol\":{\"keccak256\":\"0x069c0d264b725468cb271467a2f3db37ef9f6af392eb03a1f609bca828d94818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06135d76213b4b4d3384d201ccc770d6754a45e9a02655218a64a7f86053293d\",\"dweb:/ipfs/QmPBmdyyofgknAsEyit7igUnbmRZ55Tro9zqfRvA55qFu7\"]},\"structs/FoodTypes.sol\":{\"keccak256\":\"0x6349ed8defd63089fdb5a53685a568d3ab0ef9d63c5ca7ea733573e0bd7734d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c896dd06df3864f42b2906d0a8a59799b57fbfe18094202d0494b4a198ea42b4\",\"dweb:/ipfs/Qma59Lyc5E9p32rumk56SkEhyJHbqFV7wVJveKj7gg5h4m\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 516,
								"contract": "access/RoleAccess.sol:RoleAccess",
								"label": "roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_enum(Role)740)"
							},
							{
								"astId": 520,
								"contract": "access/RoleAccess.sol:RoleAccess",
								"label": "staffRestaurants",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint128)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_enum(Role)740": {
								"encoding": "inplace",
								"label": "enum Role",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_enum(Role)740)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => enum Role)",
								"numberOfBytes": "32",
								"value": "t_enum(Role)740"
							},
							"t_mapping(t_address,t_uint128)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint128)",
								"numberOfBytes": "32",
								"value": "t_uint128"
							},
							"t_uint128": {
								"encoding": "inplace",
								"label": "uint128",
								"numberOfBytes": "16"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/RestaurantManager.sol": {
				"RestaurantManager": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint128",
									"name": "restaurantId",
									"type": "uint128"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "RestaurantRegistered",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "staff",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "restaurantId",
									"type": "uint128"
								}
							],
							"name": "assignStaff",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint128",
									"name": "restaurantId",
									"type": "uint128"
								}
							],
							"name": "getRestaurantOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextRestaurantId",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "registerRestaurant",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "staff",
									"type": "address"
								}
							],
							"name": "removeStaff",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"name": "restaurantOwners",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "roles",
							"outputs": [
								{
									"internalType": "enum Role",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "staffRestaurants",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/RestaurantManager.sol\":260:1073  contract RestaurantManager is OwnableUpgradeable, RoleAccess, IRestaurantManager {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/RestaurantManager.sol\":260:1073  contract RestaurantManager is OwnableUpgradeable, RoleAccess, IRestaurantManager {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xae9a4655\n      gt\n      tag_15\n      jumpi\n      dup1\n      0xae9a4655\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xb9588327\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xc4522c92\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xc4d66de8\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xfa20fca7\n      eq\n      tag_14\n      jumpi\n      revert(0x00, 0x00)\n    tag_15:\n      dup1\n      0x2d3238fe\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x46bd8077\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x99374642\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xabca88f0\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"access/RoleAccess.sol\":170:221  mapping(address => uint128) public staffRestaurants */\n    tag_3:\n      tag_16\n      tag_17\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_17:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_16:\n      mload(0x40)\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":547:594   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":529:595   */\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"access/RoleAccess.sol\":170:221  mapping(address => uint128) public staffRestaurants */\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/RestaurantManager.sol\":348:379  uint128 public nextRestaurantId */\n    tag_4:\n      sload(0x02)\n      tag_16\n      swap1\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_6:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_27:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":770:802   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":752:803   */\n      dup2\n      mstore\n        /* \"#utility.yul\":740:742   */\n      0x20\n        /* \"#utility.yul\":725:743   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      tag_20\n        /* \"#utility.yul\":606:809   */\n      jump\n        /* \"access/RoleAccess.sol\":126:163  mapping(address => Role) public roles */\n    tag_7:\n      tag_31\n      tag_32\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_32:\n      0x00\n      0x20\n      dup2\n      swap1\n      mstore\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_31:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n        /* \"contracts/RestaurantManager.sol\":386:437  mapping(uint128 => address) public restaurantOwners */\n    tag_8:\n      tag_27\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"access/RoleAccess.sol\":769:939  function assignStaff(address staff, uint128 restaurantId) external onlyAdmin {... */\n    tag_9:\n      tag_25\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n        /* \"contracts/RestaurantManager.sol\":923:1070  function getRestaurantOwner(uint128 restaurantId) external view override returns (address) {... */\n    tag_10:\n      tag_27\n      tag_46\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_46:\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"contracts/RestaurantManager.sol\":1032:1062  restaurantOwners[restaurantId] */\n      and\n        /* \"contracts/RestaurantManager.sol\":1005:1012  address */\n      0x00\n        /* \"contracts/RestaurantManager.sol\":1032:1062  restaurantOwners[restaurantId] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/RestaurantManager.sol\":1032:1048  restaurantOwners */\n      0x03\n        /* \"contracts/RestaurantManager.sol\":1032:1062  restaurantOwners[restaurantId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/RestaurantManager.sol\":923:1070  function getRestaurantOwner(uint128 restaurantId) external view override returns (address) {... */\n      jump\n        /* \"access/RoleAccess.sol\":947:1090  function removeStaff(address staff) external onlyAdmin {... */\n    tag_11:\n      tag_25\n      tag_50\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n        /* \"contracts/RestaurantManager.sol\":446:607  function initialize(address _owner) public initializer {... */\n    tag_12:\n      tag_25\n      tag_53\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      tag_25\n      tag_56\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n        /* \"contracts/RestaurantManager.sol\":615:915  function registerRestaurant() external onlyAdmin returns (uint128) {... */\n    tag_14:\n      tag_16\n      tag_59\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_26:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_62\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_63\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_62:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_65\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_66\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_65:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"access/RoleAccess.sol\":769:939  function assignStaff(address staff, uint128 restaurantId) external onlyAdmin {... */\n    tag_44:\n        /* \"access/RoleAccess.sol\":276:286  msg.sender */\n      caller\n        /* \"access/RoleAccess.sol\":291:301  Role.Admin */\n      0x00\n        /* \"access/RoleAccess.sol\":270:287  roles[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"access/RoleAccess.sol\":270:301  roles[msg.sender] == Role.Admin */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_75\n      jumpi\n      tag_75\n      tag_73\n      jump\t// in\n    tag_75:\n      eq\n        /* \"access/RoleAccess.sol\":262:316  require(roles[msg.sender] == Role.Admin, \"Only admin\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"access/RoleAccess.sol\":857:869  roles[staff] */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"access/RoleAccess.sol\":857:862  roles */\n      0x00\n        /* \"access/RoleAccess.sol\":857:869  roles[staff] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"access/RoleAccess.sol\":857:882  roles[staff] = Role.Staff */\n      dup1\n      sload\n        /* \"access/RoleAccess.sol\":872:882  Role.Staff */\n      0x01\n      not(0xff)\n        /* \"access/RoleAccess.sol\":857:882  roles[staff] = Role.Staff */\n      swap1\n      swap2\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"access/RoleAccess.sol\":893:916  staffRestaurants[staff] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"access/RoleAccess.sol\":893:931  staffRestaurants[staff] = restaurantId */\n      dup1\n      sload\n      not(sub(shl(0x80, 0x01), 0x01))\n      and\n      sub(shl(0x80, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"access/RoleAccess.sol\":769:939  function assignStaff(address staff, uint128 restaurantId) external onlyAdmin {... */\n      jump\t// out\n        /* \"access/RoleAccess.sol\":947:1090  function removeStaff(address staff) external onlyAdmin {... */\n    tag_51:\n        /* \"access/RoleAccess.sol\":276:286  msg.sender */\n      caller\n        /* \"access/RoleAccess.sol\":291:301  Role.Admin */\n      0x00\n        /* \"access/RoleAccess.sol\":270:287  roles[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"access/RoleAccess.sol\":270:301  roles[msg.sender] == Role.Admin */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_87\n      jumpi\n      tag_87\n      tag_73\n      jump\t// in\n    tag_87:\n      eq\n        /* \"access/RoleAccess.sol\":262:316  require(roles[msg.sender] == Role.Admin, \"Only admin\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"access/RoleAccess.sol\":1020:1043  staffRestaurants[staff] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"access/RoleAccess.sol\":1020:1036  staffRestaurants */\n      0x01\n        /* \"access/RoleAccess.sol\":1020:1043  staffRestaurants[staff] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"access/RoleAccess.sol\":1013:1043  delete staffRestaurants[staff] */\n      dup1\n      sload\n      not(sub(shl(0x80, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"access/RoleAccess.sol\":1054:1066  roles[staff] */\n      swap1\n      dup4\n      swap1\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"access/RoleAccess.sol\":1054:1082  roles[staff] = Role.Customer */\n      dup1\n      sload\n        /* \"access/RoleAccess.sol\":1069:1082  Role.Customer */\n      0x02\n      swap3\n      not(0xff)\n        /* \"access/RoleAccess.sol\":1054:1082  roles[staff] = Role.Customer */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"access/RoleAccess.sol\":1069:1082  Role.Customer */\n      dup4\n        /* \"access/RoleAccess.sol\":1054:1082  roles[staff] = Role.Customer */\n    tag_92:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"access/RoleAccess.sol\":947:1090  function removeStaff(address staff) external onlyAdmin {... */\n      pop\n      jump\t// out\n        /* \"contracts/RestaurantManager.sol\":446:607  function initialize(address _owner) public initializer {... */\n    tag_54:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3147:3213  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00 */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      dup1\n      sload\n      shl(0x40, 0x01)\n      dup2\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4740  initialized == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_96\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4744:4758  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n    tag_96:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4758  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4785  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4799  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4804  initialized == 1 */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4803:4804  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4804  initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_97\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4816:4820  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4833  address(this).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4838  address(this).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n    tag_97:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4838  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4854:4866  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4866  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_98\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4871:4883  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4870:4883  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n    tag_98:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n      iszero\n      tag_99\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4906:4929  InvalidInitialization() */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4967  $._initialized = 1 */\n      dup5\n      sload\n      not(0xffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4966:4967  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4967  $._initialized = 1 */\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_100\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5033  $._initializing = true */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      shl(0x40, 0x01)\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n    tag_100:\n        /* \"contracts/RestaurantManager.sol\":512:534  __Ownable_init(_owner) */\n      tag_102\n        /* \"contracts/RestaurantManager.sol\":527:533  _owner */\n      dup7\n        /* \"contracts/RestaurantManager.sol\":512:526  __Ownable_init */\n      tag_103\n        /* \"contracts/RestaurantManager.sol\":512:534  __Ownable_init(_owner) */\n      jump\t// in\n    tag_102:\n        /* \"contracts/RestaurantManager.sol\":545:568  initializeRoles(_owner) */\n      tag_104\n        /* \"contracts/RestaurantManager.sol\":561:567  _owner */\n      dup7\n        /* \"contracts/RestaurantManager.sol\":545:560  initializeRoles */\n      tag_105\n        /* \"contracts/RestaurantManager.sol\":545:568  initializeRoles(_owner) */\n      jump\t// in\n    tag_104:\n        /* \"contracts/RestaurantManager.sol\":579:595  nextRestaurantId */\n      0x02\n        /* \"contracts/RestaurantManager.sol\":579:599  nextRestaurantId = 1 */\n      dup1\n      sload\n      not(sub(shl(0x80, 0x01), 0x01))\n      and\n        /* \"contracts/RestaurantManager.sol\":598:599  1 */\n      0x01\n        /* \"contracts/RestaurantManager.sol\":579:599  nextRestaurantId = 1 */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_106\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5121  $._initializing = false */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":2428:2478   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"#utility.yul\":2416:2418   */\n      0x20\n        /* \"#utility.yul\":2401:2419   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5171  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/RestaurantManager.sol\":446:607  function initialize(address _owner) public initializer {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_57:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_110\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_63\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_112\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":752:803   */\n      mstore\n        /* \"#utility.yul\":725:743   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      tag_77\n        /* \"#utility.yul\":606:809   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_114\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_66\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/RestaurantManager.sol\":615:915  function registerRestaurant() external onlyAdmin returns (uint128) {... */\n    tag_59:\n        /* \"contracts/RestaurantManager.sol\":673:680  uint128 */\n      0x00\n      dup1\n        /* \"access/RoleAccess.sol\":276:286  msg.sender */\n      caller\n        /* \"access/RoleAccess.sol\":270:275  roles */\n      0x00\n        /* \"access/RoleAccess.sol\":270:287  roles[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"access/RoleAccess.sol\":270:301  roles[msg.sender] == Role.Admin */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_119\n      jumpi\n      tag_119\n      tag_73\n      jump\t// in\n    tag_119:\n      eq\n        /* \"access/RoleAccess.sol\":262:316  require(roles[msg.sender] == Role.Admin, \"Only admin\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_120:\n        /* \"contracts/RestaurantManager.sol\":716:732  nextRestaurantId */\n      and(sub(shl(0x80, 0x01), 0x01), sload(0x02))\n        /* \"contracts/RestaurantManager.sol\":693:713  uint128 restaurantId */\n      0x00\n        /* \"contracts/RestaurantManager.sol\":743:773  restaurantOwners[restaurantId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/RestaurantManager.sol\":743:759  restaurantOwners */\n      0x03\n        /* \"contracts/RestaurantManager.sol\":743:773  restaurantOwners[restaurantId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/RestaurantManager.sol\":743:786  restaurantOwners[restaurantId] = msg.sender */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"contracts/RestaurantManager.sol\":776:786  msg.sender */\n      caller\n        /* \"contracts/RestaurantManager.sol\":743:786  restaurantOwners[restaurantId] = msg.sender */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/RestaurantManager.sol\":802:848  RestaurantRegistered(restaurantId, msg.sender) */\n      swap1\n      mload\n        /* \"contracts/RestaurantManager.sol\":776:786  msg.sender */\n      swap1\n      swap2\n        /* \"contracts/RestaurantManager.sol\":716:732  nextRestaurantId */\n      dup4\n      swap2\n        /* \"contracts/RestaurantManager.sol\":802:848  RestaurantRegistered(restaurantId, msg.sender) */\n      0xbafbc0bfd4afd8a222b8cd09b01ce310b06b0beb42503ea91a76135e6a532e92\n      swap2\n        /* \"contracts/RestaurantManager.sol\":693:713  uint128 restaurantId */\n      swap1\n        /* \"contracts/RestaurantManager.sol\":802:848  RestaurantRegistered(restaurantId, msg.sender) */\n      log3\n        /* \"contracts/RestaurantManager.sol\":859:875  nextRestaurantId */\n      0x02\n        /* \"contracts/RestaurantManager.sol\":859:877  nextRestaurantId++ */\n      dup1\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/RestaurantManager.sol\":859:875  nextRestaurantId */\n      0x00\n        /* \"contracts/RestaurantManager.sol\":859:877  nextRestaurantId++ */\n      tag_123\n      dup4\n      tag_124\n      jump\t// in\n    tag_123:\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0x80, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/RestaurantManager.sol\":895:907  restaurantId */\n      dup1\n        /* \"contracts/RestaurantManager.sol\":888:907  return restaurantId */\n      swap2\n      pop\n      pop\n        /* \"contracts/RestaurantManager.sol\":615:915  function registerRestaurant() external onlyAdmin returns (uint128) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_63:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_128\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_65\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":752:803   */\n      mstore\n        /* \"#utility.yul\":725:743   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_77\n        /* \"#utility.yul\":606:809   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_66:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      swap2\n      dup3\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      swap3\n      and\n      swap2\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_103:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_139\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_140\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_114\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n        /* \"access/RoleAccess.sol\":668:761  function initializeRoles(address admin) internal {... */\n    tag_105:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"access/RoleAccess.sol\":728:740  roles[admin] */\n      dup2\n      and\n        /* \"access/RoleAccess.sol\":743:753  Role.Admin */\n      0x00\n        /* \"access/RoleAccess.sol\":728:740  roles[admin] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"access/RoleAccess.sol\":728:753  roles[admin] = Role.Admin */\n      dup1\n      sload\n      not(0xff)\n      and\n      0x01\n        /* \"access/RoleAccess.sol\":743:753  Role.Admin */\n      dup4\n        /* \"access/RoleAccess.sol\":728:753  roles[admin] = Role.Admin */\n      jump(tag_92)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\n    tag_140:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3147:3213  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00 */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8598  _getInitializableStorage()._initializing */\n      sload\n      shl(0x40, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\n      tag_65\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7189:7206  NotInitializing() */\n      mload(0x40)\n      shl(0xe3, 0x1afcd79f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_143:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_110\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_140\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_161:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_165\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      0x00\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_165:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_18:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_167:\n        /* \"#utility.yul\":343:372   */\n      tag_168\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_161\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":814:941   */\n    tag_73:\n        /* \"#utility.yul\":875:885   */\n      0x4e487b71\n        /* \"#utility.yul\":870:873   */\n      0xe0\n        /* \"#utility.yul\":866:886   */\n      shl\n        /* \"#utility.yul\":863:864   */\n      0x00\n        /* \"#utility.yul\":856:887   */\n      mstore\n        /* \"#utility.yul\":906:910   */\n      0x21\n        /* \"#utility.yul\":903:904   */\n      0x04\n        /* \"#utility.yul\":896:911   */\n      mstore\n        /* \"#utility.yul\":930:934   */\n      0x24\n        /* \"#utility.yul\":927:928   */\n      0x00\n        /* \"#utility.yul\":920:935   */\n      revert\n        /* \"#utility.yul\":946:1282   */\n    tag_35:\n        /* \"#utility.yul\":1086:1088   */\n      0x20\n        /* \"#utility.yul\":1071:1089   */\n      dup2\n      add\n        /* \"#utility.yul\":1119:1120   */\n      0x03\n        /* \"#utility.yul\":1108:1121   */\n      dup4\n      lt\n        /* \"#utility.yul\":1098:1242   */\n      tag_173\n      jumpi\n        /* \"#utility.yul\":1164:1174   */\n      0x4e487b71\n        /* \"#utility.yul\":1159:1162   */\n      0xe0\n        /* \"#utility.yul\":1155:1175   */\n      shl\n        /* \"#utility.yul\":1152:1153   */\n      0x00\n        /* \"#utility.yul\":1145:1176   */\n      mstore\n        /* \"#utility.yul\":1199:1203   */\n      0x21\n        /* \"#utility.yul\":1196:1197   */\n      0x04\n        /* \"#utility.yul\":1189:1204   */\n      mstore\n        /* \"#utility.yul\":1227:1231   */\n      0x24\n        /* \"#utility.yul\":1224:1225   */\n      0x00\n        /* \"#utility.yul\":1217:1232   */\n      revert\n        /* \"#utility.yul\":1098:1242   */\n    tag_173:\n        /* \"#utility.yul\":1251:1276   */\n      swap2\n      swap1\n      mstore\n        /* \"#utility.yul\":946:1282   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1287:1475   */\n    tag_162:\n        /* \"#utility.yul\":1355:1375   */\n      dup1\n      calldataload\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":1404:1450   */\n      dup2\n      and\n        /* \"#utility.yul\":1394:1451   */\n      dup2\n      eq\n        /* \"#utility.yul\":1384:1469   */\n      tag_165\n      jumpi\n        /* \"#utility.yul\":1465:1466   */\n      0x00\n        /* \"#utility.yul\":1462:1463   */\n      0x00\n        /* \"#utility.yul\":1455:1467   */\n      revert\n        /* \"#utility.yul\":1480:1666   */\n    tag_38:\n        /* \"#utility.yul\":1539:1545   */\n      0x00\n        /* \"#utility.yul\":1592:1594   */\n      0x20\n        /* \"#utility.yul\":1580:1589   */\n      dup3\n        /* \"#utility.yul\":1571:1578   */\n      dup5\n        /* \"#utility.yul\":1567:1590   */\n      sub\n        /* \"#utility.yul\":1563:1595   */\n      slt\n        /* \"#utility.yul\":1560:1612   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":1608:1609   */\n      0x00\n        /* \"#utility.yul\":1605:1606   */\n      0x00\n        /* \"#utility.yul\":1598:1610   */\n      revert\n        /* \"#utility.yul\":1560:1612   */\n    tag_177:\n        /* \"#utility.yul\":1631:1660   */\n      tag_168\n        /* \"#utility.yul\":1650:1659   */\n      dup3\n        /* \"#utility.yul\":1631:1660   */\n      tag_162\n      jump\t// in\n        /* \"#utility.yul\":1671:1931   */\n    tag_43:\n        /* \"#utility.yul\":1739:1745   */\n      0x00\n        /* \"#utility.yul\":1747:1753   */\n      0x00\n        /* \"#utility.yul\":1800:1802   */\n      0x40\n        /* \"#utility.yul\":1788:1797   */\n      dup4\n        /* \"#utility.yul\":1779:1786   */\n      dup6\n        /* \"#utility.yul\":1775:1798   */\n      sub\n        /* \"#utility.yul\":1771:1803   */\n      slt\n        /* \"#utility.yul\":1768:1820   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":1816:1817   */\n      0x00\n        /* \"#utility.yul\":1813:1814   */\n      0x00\n        /* \"#utility.yul\":1806:1818   */\n      revert\n        /* \"#utility.yul\":1768:1820   */\n    tag_180:\n        /* \"#utility.yul\":1839:1868   */\n      tag_181\n        /* \"#utility.yul\":1858:1867   */\n      dup4\n        /* \"#utility.yul\":1839:1868   */\n      tag_161\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":1829:1868   */\n      swap2\n      pop\n        /* \"#utility.yul\":1887:1925   */\n      tag_182\n        /* \"#utility.yul\":1921:1923   */\n      0x20\n        /* \"#utility.yul\":1910:1919   */\n      dup5\n        /* \"#utility.yul\":1906:1924   */\n      add\n        /* \"#utility.yul\":1887:1925   */\n      tag_162\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":1877:1925   */\n      swap1\n      pop\n        /* \"#utility.yul\":1671:1931   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1936:2270   */\n    tag_78:\n        /* \"#utility.yul\":2138:2140   */\n      0x20\n        /* \"#utility.yul\":2120:2141   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2177:2179   */\n      0x0a\n        /* \"#utility.yul\":2157:2175   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2150:2180   */\n      mstore\n      shl(0xb1, 0x27b7363c9030b236b4b7)\n        /* \"#utility.yul\":2211:2213   */\n      0x40\n        /* \"#utility.yul\":2196:2214   */\n      dup3\n      add\n        /* \"#utility.yul\":2189:2229   */\n      mstore\n        /* \"#utility.yul\":2261:2263   */\n      0x60\n        /* \"#utility.yul\":2246:2264   */\n      add\n      swap1\n        /* \"#utility.yul\":1936:2270   */\n      jump\t// out\n        /* \"#utility.yul\":2489:2823   */\n    tag_124:\n        /* \"#utility.yul\":2528:2531   */\n      0x00\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":2565:2570   */\n      dup3\n        /* \"#utility.yul\":2561:2607   */\n      and\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":2622:2629   */\n      dup2\n        /* \"#utility.yul\":2619:2666   */\n      sub\n        /* \"#utility.yul\":2616:2786   */\n      tag_186\n      jumpi\n        /* \"#utility.yul\":2708:2718   */\n      0x4e487b71\n        /* \"#utility.yul\":2703:2706   */\n      0xe0\n        /* \"#utility.yul\":2699:2719   */\n      shl\n        /* \"#utility.yul\":2696:2697   */\n      0x00\n        /* \"#utility.yul\":2689:2720   */\n      mstore\n        /* \"#utility.yul\":2743:2747   */\n      0x11\n        /* \"#utility.yul\":2740:2741   */\n      0x04\n        /* \"#utility.yul\":2733:2748   */\n      mstore\n        /* \"#utility.yul\":2771:2775   */\n      0x24\n        /* \"#utility.yul\":2768:2769   */\n      0x00\n        /* \"#utility.yul\":2761:2776   */\n      revert\n        /* \"#utility.yul\":2616:2786   */\n    tag_186:\n        /* \"#utility.yul\":2815:2816   */\n      0x01\n        /* \"#utility.yul\":2802:2817   */\n      add\n      swap3\n        /* \"#utility.yul\":2489:2823   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f43aa65719aefce07e66086e7a7396adb7f90e3dd4a0c99f70f5b551c16512b264736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506108608061001c5f395ff3fe608060405234801561000f575f5ffd5b50600436106100b1575f3560e01c8063ae9a46551161006e578063ae9a4655146101b2578063b9588327146101c5578063c4522c92146101f6578063c4d66de814610209578063f2fde38b1461021c578063fa20fca71461022f575f5ffd5b80632d3238fe146100b557806346bd8077146100fa578063715018a61461010d5780638da5cb5b14610117578063993746421461015b578063abca88f01461018a575b5f5ffd5b6100dd6100c3366004610716565b60016020525f90815260409020546001600160801b031681565b6040516001600160801b0390911681526020015b60405180910390f35b6002546100dd906001600160801b031681565b610115610237565b005b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03165b6040516001600160a01b0390911681526020016100f1565b61017d610169366004610716565b5f6020819052908152604090205460ff1681565b6040516100f1919061074a565b610143610198366004610786565b60036020525f90815260409020546001600160a01b031681565b6101156101c036600461079f565b61024a565b6101436101d3366004610786565b6001600160801b03165f908152600360205260409020546001600160a01b031690565b610115610204366004610716565b6102e0565b610115610217366004610716565b610365565b61011561022a366004610716565b61048f565b6100dd6104cc565b61023f6105a9565b6102485f610604565b565b335f9081526020819052604081205460ff16600281111561026d5761026d610736565b146102935760405162461bcd60e51b815260040161028a906107d0565b60405180910390fd5b6001600160a01b03919091165f908152602081815260408083208054600160ff199091168117909155909152902080546001600160801b0319166001600160801b03909216919091179055565b335f9081526020819052604081205460ff16600281111561030357610303610736565b146103205760405162461bcd60e51b815260040161028a906107d0565b6001600160a01b0381165f90815260016020818152604080842080546001600160801b031916905590839052909120805460029260ff1990911690835b021790555050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f811580156103aa5750825b90505f8267ffffffffffffffff1660011480156103c65750303b155b9050811580156103d4575080155b156103f25760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561041c57845460ff60401b1916600160401b1785555b61042586610674565b61042e86610685565b600280546001600160801b0319166001179055831561048757845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6104976105a9565b6001600160a01b0381166104c057604051631e4fbdf760e01b81525f600482015260240161028a565b6104c981610604565b50565b5f80335f9081526020819052604090205460ff1660028111156104f1576104f1610736565b1461050e5760405162461bcd60e51b815260040161028a906107d0565b6002546001600160801b03165f8181526003602052604080822080546001600160a01b031916339081179091559051909183917fbafbc0bfd4afd8a222b8cd09b01ce310b06b0beb42503ea91a76135e6a532e929190a3600280546001600160801b0316905f61057d836107f4565b91906101000a8154816001600160801b0302191690836001600160801b03160217905550508091505090565b336105db7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146102485760405163118cdaa760e01b815233600482015260240161028a565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b61067c6106aa565b6104c9816106f3565b6001600160a01b0381165f908152602081905260408120805460ff191660018361035d565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661024857604051631afcd79f60e31b815260040160405180910390fd5b6104976106aa565b80356001600160a01b0381168114610711575f5ffd5b919050565b5f60208284031215610726575f5ffd5b61072f826106fb565b9392505050565b634e487b7160e01b5f52602160045260245ffd5b602081016003831061076a57634e487b7160e01b5f52602160045260245ffd5b91905290565b80356001600160801b0381168114610711575f5ffd5b5f60208284031215610796575f5ffd5b61072f82610770565b5f5f604083850312156107b0575f5ffd5b6107b9836106fb565b91506107c760208401610770565b90509250929050565b6020808252600a908201526927b7363c9030b236b4b760b11b604082015260600190565b5f6001600160801b0382166001600160801b03810361082157634e487b7160e01b5f52601160045260245ffd5b6001019291505056fea2646970667358221220f43aa65719aefce07e66086e7a7396adb7f90e3dd4a0c99f70f5b551c16512b264736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x860 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAE9A4655 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xAE9A4655 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0xB9588327 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xC4522C92 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0xFA20FCA7 EQ PUSH2 0x22F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x2D3238FE EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x46BD8077 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x99374642 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0xABCA88F0 EQ PUSH2 0x18A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xDD PUSH2 0xC3 CALLDATASIZE PUSH1 0x4 PUSH2 0x716 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xDD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x115 PUSH2 0x237 JUMP JUMPDEST STOP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF1 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x169 CALLDATASIZE PUSH1 0x4 PUSH2 0x716 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x74A JUMP JUMPDEST PUSH2 0x143 PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0x786 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x115 PUSH2 0x1C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x79F JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH2 0x143 PUSH2 0x1D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x786 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x115 PUSH2 0x204 CALLDATASIZE PUSH1 0x4 PUSH2 0x716 JUMP JUMPDEST PUSH2 0x2E0 JUMP JUMPDEST PUSH2 0x115 PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0x716 JUMP JUMPDEST PUSH2 0x365 JUMP JUMPDEST PUSH2 0x115 PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0x716 JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST PUSH2 0xDD PUSH2 0x4CC JUMP JUMPDEST PUSH2 0x23F PUSH2 0x5A9 JUMP JUMPDEST PUSH2 0x248 PUSH0 PUSH2 0x604 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x26D JUMPI PUSH2 0x26D PUSH2 0x736 JUMP JUMPDEST EQ PUSH2 0x293 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28A SWAP1 PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x303 JUMPI PUSH2 0x303 PUSH2 0x736 JUMP JUMPDEST EQ PUSH2 0x320 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28A SWAP1 PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND SWAP1 SSTORE SWAP1 DUP4 SWAP1 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x2 SWAP3 PUSH1 0xFF NOT SWAP1 SWAP2 AND SWAP1 DUP4 JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x3AA JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x3C6 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x3D4 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x41C JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x425 DUP7 PUSH2 0x674 JUMP JUMPDEST PUSH2 0x42E DUP7 PUSH2 0x685 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0x487 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x497 PUSH2 0x5A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4C0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x28A JUMP JUMPDEST PUSH2 0x4C9 DUP2 PUSH2 0x604 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4F1 JUMPI PUSH2 0x4F1 PUSH2 0x736 JUMP JUMPDEST EQ PUSH2 0x50E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28A SWAP1 PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0xBAFBC0BFD4AFD8A222B8CD09B01CE310B06B0BEB42503EA91A76135E6A532E92 SWAP2 SWAP1 LOG3 PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 PUSH0 PUSH2 0x57D DUP4 PUSH2 0x7F4 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST CALLER PUSH2 0x5DB PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x248 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x28A JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x67C PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x4C9 DUP2 PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH2 0x35D JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x248 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x497 PUSH2 0x6AA JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x711 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x726 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x72F DUP3 PUSH2 0x6FB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0x76A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x711 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x796 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x72F DUP3 PUSH2 0x770 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7B0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x7B9 DUP4 PUSH2 0x6FB JUMP JUMPDEST SWAP2 POP PUSH2 0x7C7 PUSH1 0x20 DUP5 ADD PUSH2 0x770 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xA SWAP1 DUP3 ADD MSTORE PUSH10 0x27B7363C9030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 SUB PUSH2 0x821 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL GASPRICE 0xA6 JUMPI NOT 0xAE 0xFC RJUMP 0x7E66 ADDMOD PUSH15 0x7A7396ADB7F90E3DD4A0C99F70F5B5 MLOAD 0xC1 PUSH6 0x12B264736F6C PUSH4 0x4300081E STOP CALLER ",
							"sourceMap": "260:813:4:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__Ownable_init_54": {
									"entryPoint": 1652,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 1779,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 1706,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 1449,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_461": {
									"entryPoint": null,
									"id": 461,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": null,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_initializableStorageSlot_447": {
									"entryPoint": null,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": null,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_490": {
									"entryPoint": null,
									"id": 490,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_193": {
									"entryPoint": 1540,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@assignStaff_610": {
									"entryPoint": 586,
									"id": 610,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getRestaurantOwner_712": {
									"entryPoint": null,
									"id": 712,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@initializeRoles_587": {
									"entryPoint": 1669,
									"id": 587,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@initialize_669": {
									"entryPoint": 869,
									"id": 669,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@nextRestaurantId_645": {
									"entryPoint": null,
									"id": 645,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_105": {
									"entryPoint": null,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@registerRestaurant_699": {
									"entryPoint": 1228,
									"id": 699,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeStaff_630": {
									"entryPoint": 736,
									"id": 630,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_136": {
									"entryPoint": 567,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@restaurantOwners_649": {
									"entryPoint": null,
									"id": 649,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@roles_516": {
									"entryPoint": null,
									"id": 516,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@staffRestaurants_520": {
									"entryPoint": null,
									"id": 520,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_164": {
									"entryPoint": 1167,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 1787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint128": {
									"entryPoint": 1951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint128": {
									"entryPoint": 1926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint128": {
									"entryPoint": 1904,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_Role_$740__to_t_uint8__fromStack_reversed": {
									"entryPoint": 1866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint128": {
									"entryPoint": 2036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 1846,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2825:7",
										"nodeType": "YulBlock",
										"src": "0:2825:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "63:124:7",
													"nodeType": "YulBlock",
													"src": "63:124:7",
													"statements": [
														{
															"nativeSrc": "73:29:7",
															"nodeType": "YulAssignment",
															"src": "73:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "95:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "82:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:7"
																},
																"nativeSrc": "82:20:7",
																"nodeType": "YulFunctionCall",
																"src": "82:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "73:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "165:16:7",
																"nodeType": "YulBlock",
																"src": "165:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "174:1:7",
																					"nodeType": "YulLiteral",
																					"src": "174:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "177:1:7",
																					"nodeType": "YulLiteral",
																					"src": "177:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "167:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:7"
																			},
																			"nativeSrc": "167:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:7"
																		},
																		"nativeSrc": "167:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "124:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "135:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "150:3:7",
																										"nodeType": "YulLiteral",
																										"src": "150:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "155:1:7",
																										"nodeType": "YulLiteral",
																										"src": "155:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "146:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:7"
																								},
																								"nativeSrc": "146:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "159:1:7",
																								"nodeType": "YulLiteral",
																								"src": "159:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "142:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:7"
																						},
																						"nativeSrc": "142:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "131:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:7"
																				},
																				"nativeSrc": "131:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "121:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:7"
																		},
																		"nativeSrc": "121:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "114:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:7"
																},
																"nativeSrc": "114:50:7",
																"nodeType": "YulFunctionCall",
																"src": "114:50:7"
															},
															"nativeSrc": "111:70:7",
															"nodeType": "YulIf",
															"src": "111:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "14:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "42:6:7",
														"nodeType": "YulTypedName",
														"src": "42:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "53:5:7",
														"nodeType": "YulTypedName",
														"src": "53:5:7",
														"type": ""
													}
												],
												"src": "14:173:7"
											},
											{
												"body": {
													"nativeSrc": "262:116:7",
													"nodeType": "YulBlock",
													"src": "262:116:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "308:16:7",
																"nodeType": "YulBlock",
																"src": "308:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "317:1:7",
																					"nodeType": "YulLiteral",
																					"src": "317:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "320:1:7",
																					"nodeType": "YulLiteral",
																					"src": "320:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "310:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:7"
																			},
																			"nativeSrc": "310:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:7"
																		},
																		"nativeSrc": "310:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "283:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "292:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "279:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:7"
																		},
																		"nativeSrc": "279:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "304:2:7",
																		"nodeType": "YulLiteral",
																		"src": "304:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "275:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:7"
																},
																"nativeSrc": "275:32:7",
																"nodeType": "YulFunctionCall",
																"src": "275:32:7"
															},
															"nativeSrc": "272:52:7",
															"nodeType": "YulIf",
															"src": "272:52:7"
														},
														{
															"nativeSrc": "333:39:7",
															"nodeType": "YulAssignment",
															"src": "333:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "362:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "343:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:7"
																},
																"nativeSrc": "343:29:7",
																"nodeType": "YulFunctionCall",
																"src": "343:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "333:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "192:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "228:9:7",
														"nodeType": "YulTypedName",
														"src": "228:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "239:7:7",
														"nodeType": "YulTypedName",
														"src": "239:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "251:6:7",
														"nodeType": "YulTypedName",
														"src": "251:6:7",
														"type": ""
													}
												],
												"src": "192:186:7"
											},
											{
												"body": {
													"nativeSrc": "484:117:7",
													"nodeType": "YulBlock",
													"src": "484:117:7",
													"statements": [
														{
															"nativeSrc": "494:26:7",
															"nodeType": "YulAssignment",
															"src": "494:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "506:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "506:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "517:2:7",
																		"nodeType": "YulLiteral",
																		"src": "517:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:7"
																},
																"nativeSrc": "502:18:7",
																"nodeType": "YulFunctionCall",
																"src": "502:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "536:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "536:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "551:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "551:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "559:34:7",
																				"nodeType": "YulLiteral",
																				"src": "559:34:7",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "547:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "547:3:7"
																		},
																		"nativeSrc": "547:47:7",
																		"nodeType": "YulFunctionCall",
																		"src": "547:47:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "529:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "529:6:7"
																},
																"nativeSrc": "529:66:7",
																"nodeType": "YulFunctionCall",
																"src": "529:66:7"
															},
															"nativeSrc": "529:66:7",
															"nodeType": "YulExpressionStatement",
															"src": "529:66:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed",
												"nativeSrc": "383:218:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "453:9:7",
														"nodeType": "YulTypedName",
														"src": "453:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "464:6:7",
														"nodeType": "YulTypedName",
														"src": "464:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "475:4:7",
														"nodeType": "YulTypedName",
														"src": "475:4:7",
														"type": ""
													}
												],
												"src": "383:218:7"
											},
											{
												"body": {
													"nativeSrc": "707:102:7",
													"nodeType": "YulBlock",
													"src": "707:102:7",
													"statements": [
														{
															"nativeSrc": "717:26:7",
															"nodeType": "YulAssignment",
															"src": "717:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "729:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "729:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "740:2:7",
																		"nodeType": "YulLiteral",
																		"src": "740:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "725:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "725:3:7"
																},
																"nativeSrc": "725:18:7",
																"nodeType": "YulFunctionCall",
																"src": "725:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "717:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "717:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "759:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "759:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "774:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "774:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "790:3:7",
																								"nodeType": "YulLiteral",
																								"src": "790:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "795:1:7",
																								"nodeType": "YulLiteral",
																								"src": "795:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "786:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "786:3:7"
																						},
																						"nativeSrc": "786:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "786:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "799:1:7",
																						"nodeType": "YulLiteral",
																						"src": "799:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "782:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "782:3:7"
																				},
																				"nativeSrc": "782:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "782:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "770:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "770:3:7"
																		},
																		"nativeSrc": "770:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "770:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "752:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "752:6:7"
																},
																"nativeSrc": "752:51:7",
																"nodeType": "YulFunctionCall",
																"src": "752:51:7"
															},
															"nativeSrc": "752:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "752:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "606:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "676:9:7",
														"nodeType": "YulTypedName",
														"src": "676:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "687:6:7",
														"nodeType": "YulTypedName",
														"src": "687:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "698:4:7",
														"nodeType": "YulTypedName",
														"src": "698:4:7",
														"type": ""
													}
												],
												"src": "606:203:7"
											},
											{
												"body": {
													"nativeSrc": "846:95:7",
													"nodeType": "YulBlock",
													"src": "846:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "863:1:7",
																		"nodeType": "YulLiteral",
																		"src": "863:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "870:3:7",
																				"nodeType": "YulLiteral",
																				"src": "870:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "875:10:7",
																				"nodeType": "YulLiteral",
																				"src": "875:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "866:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:7"
																		},
																		"nativeSrc": "866:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "866:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "856:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "856:6:7"
																},
																"nativeSrc": "856:31:7",
																"nodeType": "YulFunctionCall",
																"src": "856:31:7"
															},
															"nativeSrc": "856:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "856:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "903:1:7",
																		"nodeType": "YulLiteral",
																		"src": "903:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "906:4:7",
																		"nodeType": "YulLiteral",
																		"src": "906:4:7",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "896:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:7"
																},
																"nativeSrc": "896:15:7",
																"nodeType": "YulFunctionCall",
																"src": "896:15:7"
															},
															"nativeSrc": "896:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "896:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "927:1:7",
																		"nodeType": "YulLiteral",
																		"src": "927:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "930:4:7",
																		"nodeType": "YulLiteral",
																		"src": "930:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "920:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "920:6:7"
																},
																"nativeSrc": "920:15:7",
																"nodeType": "YulFunctionCall",
																"src": "920:15:7"
															},
															"nativeSrc": "920:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "920:15:7"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "814:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "814:127:7"
											},
											{
												"body": {
													"nativeSrc": "1053:229:7",
													"nodeType": "YulBlock",
													"src": "1053:229:7",
													"statements": [
														{
															"nativeSrc": "1063:26:7",
															"nodeType": "YulAssignment",
															"src": "1063:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1075:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1075:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1086:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1086:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1071:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1071:3:7"
																},
																"nativeSrc": "1071:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1071:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1063:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1063:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1131:111:7",
																"nodeType": "YulBlock",
																"src": "1131:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1152:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1152:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1159:3:7",
																							"nodeType": "YulLiteral",
																							"src": "1159:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1164:10:7",
																							"nodeType": "YulLiteral",
																							"src": "1164:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1155:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "1155:3:7"
																					},
																					"nativeSrc": "1155:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1155:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1145:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1145:6:7"
																			},
																			"nativeSrc": "1145:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1145:31:7"
																		},
																		"nativeSrc": "1145:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1145:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1196:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1196:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1199:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1199:4:7",
																					"type": "",
																					"value": "0x21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1189:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:7"
																			},
																			"nativeSrc": "1189:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1189:15:7"
																		},
																		"nativeSrc": "1189:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1224:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1224:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1227:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1227:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1217:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1217:6:7"
																			},
																			"nativeSrc": "1217:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1217:15:7"
																		},
																		"nativeSrc": "1217:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1217:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1111:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1111:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1119:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1119:1:7",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1108:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1108:2:7"
																		},
																		"nativeSrc": "1108:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1108:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1101:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1101:6:7"
																},
																"nativeSrc": "1101:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1101:21:7"
															},
															"nativeSrc": "1098:144:7",
															"nodeType": "YulIf",
															"src": "1098:144:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1258:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1258:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1269:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1269:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1251:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1251:6:7"
																},
																"nativeSrc": "1251:25:7",
																"nodeType": "YulFunctionCall",
																"src": "1251:25:7"
															},
															"nativeSrc": "1251:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "1251:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Role_$740__to_t_uint8__fromStack_reversed",
												"nativeSrc": "946:336:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1022:9:7",
														"nodeType": "YulTypedName",
														"src": "1022:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1033:6:7",
														"nodeType": "YulTypedName",
														"src": "1033:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1044:4:7",
														"nodeType": "YulTypedName",
														"src": "1044:4:7",
														"type": ""
													}
												],
												"src": "946:336:7"
											},
											{
												"body": {
													"nativeSrc": "1336:139:7",
													"nodeType": "YulBlock",
													"src": "1336:139:7",
													"statements": [
														{
															"nativeSrc": "1346:29:7",
															"nodeType": "YulAssignment",
															"src": "1346:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1368:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1368:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1355:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1355:12:7"
																},
																"nativeSrc": "1355:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1355:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1346:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1346:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1453:16:7",
																"nodeType": "YulBlock",
																"src": "1453:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1462:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1462:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1465:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1465:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1455:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1455:6:7"
																			},
																			"nativeSrc": "1455:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1455:12:7"
																		},
																		"nativeSrc": "1455:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1455:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1397:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1397:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1408:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1408:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1415:34:7",
																						"nodeType": "YulLiteral",
																						"src": "1415:34:7",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1404:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1404:3:7"
																				},
																				"nativeSrc": "1404:46:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1404:46:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1394:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1394:2:7"
																		},
																		"nativeSrc": "1394:57:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1394:57:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1387:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:7"
																},
																"nativeSrc": "1387:65:7",
																"nodeType": "YulFunctionCall",
																"src": "1387:65:7"
															},
															"nativeSrc": "1384:85:7",
															"nodeType": "YulIf",
															"src": "1384:85:7"
														}
													]
												},
												"name": "abi_decode_uint128",
												"nativeSrc": "1287:188:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1315:6:7",
														"nodeType": "YulTypedName",
														"src": "1315:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1326:5:7",
														"nodeType": "YulTypedName",
														"src": "1326:5:7",
														"type": ""
													}
												],
												"src": "1287:188:7"
											},
											{
												"body": {
													"nativeSrc": "1550:116:7",
													"nodeType": "YulBlock",
													"src": "1550:116:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1596:16:7",
																"nodeType": "YulBlock",
																"src": "1596:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1605:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1605:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1608:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1608:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1598:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1598:6:7"
																			},
																			"nativeSrc": "1598:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1598:12:7"
																		},
																		"nativeSrc": "1598:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1598:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1571:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1571:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1580:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1580:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1567:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1567:3:7"
																		},
																		"nativeSrc": "1567:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1567:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1592:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1563:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1563:3:7"
																},
																"nativeSrc": "1563:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1563:32:7"
															},
															"nativeSrc": "1560:52:7",
															"nodeType": "YulIf",
															"src": "1560:52:7"
														},
														{
															"nativeSrc": "1621:39:7",
															"nodeType": "YulAssignment",
															"src": "1621:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1650:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1650:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint128",
																	"nativeSrc": "1631:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1631:18:7"
																},
																"nativeSrc": "1631:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1631:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1621:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1621:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint128",
												"nativeSrc": "1480:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1516:9:7",
														"nodeType": "YulTypedName",
														"src": "1516:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1527:7:7",
														"nodeType": "YulTypedName",
														"src": "1527:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1539:6:7",
														"nodeType": "YulTypedName",
														"src": "1539:6:7",
														"type": ""
													}
												],
												"src": "1480:186:7"
											},
											{
												"body": {
													"nativeSrc": "1758:173:7",
													"nodeType": "YulBlock",
													"src": "1758:173:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1804:16:7",
																"nodeType": "YulBlock",
																"src": "1804:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1813:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1813:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1816:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1816:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1806:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1806:6:7"
																			},
																			"nativeSrc": "1806:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1806:12:7"
																		},
																		"nativeSrc": "1806:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1806:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1779:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1779:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1788:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1788:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1775:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1775:3:7"
																		},
																		"nativeSrc": "1775:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1775:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1800:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1800:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1771:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1771:3:7"
																},
																"nativeSrc": "1771:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1771:32:7"
															},
															"nativeSrc": "1768:52:7",
															"nodeType": "YulIf",
															"src": "1768:52:7"
														},
														{
															"nativeSrc": "1829:39:7",
															"nodeType": "YulAssignment",
															"src": "1829:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1858:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1858:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1839:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1839:18:7"
																},
																"nativeSrc": "1839:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1839:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1829:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1829:6:7"
																}
															]
														},
														{
															"nativeSrc": "1877:48:7",
															"nodeType": "YulAssignment",
															"src": "1877:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1910:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1910:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1921:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1921:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1906:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1906:3:7"
																		},
																		"nativeSrc": "1906:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1906:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint128",
																	"nativeSrc": "1887:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1887:18:7"
																},
																"nativeSrc": "1887:38:7",
																"nodeType": "YulFunctionCall",
																"src": "1887:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1877:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1877:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint128",
												"nativeSrc": "1671:260:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1716:9:7",
														"nodeType": "YulTypedName",
														"src": "1716:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1727:7:7",
														"nodeType": "YulTypedName",
														"src": "1727:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1739:6:7",
														"nodeType": "YulTypedName",
														"src": "1739:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1747:6:7",
														"nodeType": "YulTypedName",
														"src": "1747:6:7",
														"type": ""
													}
												],
												"src": "1671:260:7"
											},
											{
												"body": {
													"nativeSrc": "2110:160:7",
													"nodeType": "YulBlock",
													"src": "2110:160:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2127:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2127:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2138:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2138:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2120:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2120:6:7"
																},
																"nativeSrc": "2120:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2120:21:7"
															},
															"nativeSrc": "2120:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "2120:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2161:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2161:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2172:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2172:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2157:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2157:3:7"
																		},
																		"nativeSrc": "2157:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2157:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2177:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2177:2:7",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2150:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2150:6:7"
																},
																"nativeSrc": "2150:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2150:30:7"
															},
															"nativeSrc": "2150:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "2150:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2200:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2200:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2211:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2211:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2196:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2196:3:7"
																		},
																		"nativeSrc": "2196:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2196:18:7"
																	},
																	{
																		"hexValue": "4f6e6c792061646d696e",
																		"kind": "string",
																		"nativeSrc": "2216:12:7",
																		"nodeType": "YulLiteral",
																		"src": "2216:12:7",
																		"type": "",
																		"value": "Only admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2189:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2189:6:7"
																},
																"nativeSrc": "2189:40:7",
																"nodeType": "YulFunctionCall",
																"src": "2189:40:7"
															},
															"nativeSrc": "2189:40:7",
															"nodeType": "YulExpressionStatement",
															"src": "2189:40:7"
														},
														{
															"nativeSrc": "2238:26:7",
															"nodeType": "YulAssignment",
															"src": "2238:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2250:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2250:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2261:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2261:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2246:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2246:3:7"
																},
																"nativeSrc": "2246:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2246:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2238:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2238:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1936:334:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2087:9:7",
														"nodeType": "YulTypedName",
														"src": "2087:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2101:4:7",
														"nodeType": "YulTypedName",
														"src": "2101:4:7",
														"type": ""
													}
												],
												"src": "1936:334:7"
											},
											{
												"body": {
													"nativeSrc": "2383:101:7",
													"nodeType": "YulBlock",
													"src": "2383:101:7",
													"statements": [
														{
															"nativeSrc": "2393:26:7",
															"nodeType": "YulAssignment",
															"src": "2393:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2405:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2405:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2416:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2416:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2401:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2401:3:7"
																},
																"nativeSrc": "2401:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2401:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2393:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2393:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2435:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2435:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2450:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2450:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2458:18:7",
																				"nodeType": "YulLiteral",
																				"src": "2458:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2446:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2446:3:7"
																		},
																		"nativeSrc": "2446:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2446:31:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2428:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2428:6:7"
																},
																"nativeSrc": "2428:50:7",
																"nodeType": "YulFunctionCall",
																"src": "2428:50:7"
															},
															"nativeSrc": "2428:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "2428:50:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "2275:209:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2352:9:7",
														"nodeType": "YulTypedName",
														"src": "2352:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2363:6:7",
														"nodeType": "YulTypedName",
														"src": "2363:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2374:4:7",
														"nodeType": "YulTypedName",
														"src": "2374:4:7",
														"type": ""
													}
												],
												"src": "2275:209:7"
											},
											{
												"body": {
													"nativeSrc": "2536:287:7",
													"nodeType": "YulBlock",
													"src": "2536:287:7",
													"statements": [
														{
															"nativeSrc": "2546:61:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2546:61:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2565:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2572:34:7",
																		"nodeType": "YulLiteral",
																		"src": "2572:34:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2561:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2561:3:7"
																},
																"nativeSrc": "2561:46:7",
																"nodeType": "YulFunctionCall",
																"src": "2561:46:7"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2550:7:7",
																	"nodeType": "YulTypedName",
																	"src": "2550:7:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2675:111:7",
																"nodeType": "YulBlock",
																"src": "2675:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2696:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2696:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2703:3:7",
																							"nodeType": "YulLiteral",
																							"src": "2703:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2708:10:7",
																							"nodeType": "YulLiteral",
																							"src": "2708:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2699:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2699:3:7"
																					},
																					"nativeSrc": "2699:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2699:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2689:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2689:6:7"
																			},
																			"nativeSrc": "2689:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2689:31:7"
																		},
																		"nativeSrc": "2689:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2689:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2740:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2740:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2743:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2743:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2733:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2733:6:7"
																			},
																			"nativeSrc": "2733:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2733:15:7"
																		},
																		"nativeSrc": "2733:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2733:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2768:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2768:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2771:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2771:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2761:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2761:6:7"
																			},
																			"nativeSrc": "2761:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2761:15:7"
																		},
																		"nativeSrc": "2761:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2761:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "2622:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "2622:7:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2631:34:7",
																		"nodeType": "YulLiteral",
																		"src": "2631:34:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2619:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2619:2:7"
																},
																"nativeSrc": "2619:47:7",
																"nodeType": "YulFunctionCall",
																"src": "2619:47:7"
															},
															"nativeSrc": "2616:170:7",
															"nodeType": "YulIf",
															"src": "2616:170:7"
														},
														{
															"nativeSrc": "2795:22:7",
															"nodeType": "YulAssignment",
															"src": "2795:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "2806:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "2806:7:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2815:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2815:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2802:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2802:3:7"
																},
																"nativeSrc": "2802:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2802:15:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2795:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2795:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint128",
												"nativeSrc": "2489:334:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2518:5:7",
														"nodeType": "YulTypedName",
														"src": "2518:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2528:3:7",
														"nodeType": "YulTypedName",
														"src": "2528:3:7",
														"type": ""
													}
												],
												"src": "2489:334:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_enum$_Role_$740__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 3))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_decode_uint128(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint128(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint128(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint128(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_uint128(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"Only admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function increment_t_uint128(value) -> ret\n    {\n        let value_1 := and(value, 0xffffffffffffffffffffffffffffffff)\n        if eq(value_1, 0xffffffffffffffffffffffffffffffff)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value_1, 1)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100b1575f3560e01c8063ae9a46551161006e578063ae9a4655146101b2578063b9588327146101c5578063c4522c92146101f6578063c4d66de814610209578063f2fde38b1461021c578063fa20fca71461022f575f5ffd5b80632d3238fe146100b557806346bd8077146100fa578063715018a61461010d5780638da5cb5b14610117578063993746421461015b578063abca88f01461018a575b5f5ffd5b6100dd6100c3366004610716565b60016020525f90815260409020546001600160801b031681565b6040516001600160801b0390911681526020015b60405180910390f35b6002546100dd906001600160801b031681565b610115610237565b005b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03165b6040516001600160a01b0390911681526020016100f1565b61017d610169366004610716565b5f6020819052908152604090205460ff1681565b6040516100f1919061074a565b610143610198366004610786565b60036020525f90815260409020546001600160a01b031681565b6101156101c036600461079f565b61024a565b6101436101d3366004610786565b6001600160801b03165f908152600360205260409020546001600160a01b031690565b610115610204366004610716565b6102e0565b610115610217366004610716565b610365565b61011561022a366004610716565b61048f565b6100dd6104cc565b61023f6105a9565b6102485f610604565b565b335f9081526020819052604081205460ff16600281111561026d5761026d610736565b146102935760405162461bcd60e51b815260040161028a906107d0565b60405180910390fd5b6001600160a01b03919091165f908152602081815260408083208054600160ff199091168117909155909152902080546001600160801b0319166001600160801b03909216919091179055565b335f9081526020819052604081205460ff16600281111561030357610303610736565b146103205760405162461bcd60e51b815260040161028a906107d0565b6001600160a01b0381165f90815260016020818152604080842080546001600160801b031916905590839052909120805460029260ff1990911690835b021790555050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f811580156103aa5750825b90505f8267ffffffffffffffff1660011480156103c65750303b155b9050811580156103d4575080155b156103f25760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561041c57845460ff60401b1916600160401b1785555b61042586610674565b61042e86610685565b600280546001600160801b0319166001179055831561048757845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6104976105a9565b6001600160a01b0381166104c057604051631e4fbdf760e01b81525f600482015260240161028a565b6104c981610604565b50565b5f80335f9081526020819052604090205460ff1660028111156104f1576104f1610736565b1461050e5760405162461bcd60e51b815260040161028a906107d0565b6002546001600160801b03165f8181526003602052604080822080546001600160a01b031916339081179091559051909183917fbafbc0bfd4afd8a222b8cd09b01ce310b06b0beb42503ea91a76135e6a532e929190a3600280546001600160801b0316905f61057d836107f4565b91906101000a8154816001600160801b0302191690836001600160801b03160217905550508091505090565b336105db7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146102485760405163118cdaa760e01b815233600482015260240161028a565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b61067c6106aa565b6104c9816106f3565b6001600160a01b0381165f908152602081905260408120805460ff191660018361035d565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661024857604051631afcd79f60e31b815260040160405180910390fd5b6104976106aa565b80356001600160a01b0381168114610711575f5ffd5b919050565b5f60208284031215610726575f5ffd5b61072f826106fb565b9392505050565b634e487b7160e01b5f52602160045260245ffd5b602081016003831061076a57634e487b7160e01b5f52602160045260245ffd5b91905290565b80356001600160801b0381168114610711575f5ffd5b5f60208284031215610796575f5ffd5b61072f82610770565b5f5f604083850312156107b0575f5ffd5b6107b9836106fb565b91506107c760208401610770565b90509250929050565b6020808252600a908201526927b7363c9030b236b4b760b11b604082015260600190565b5f6001600160801b0382166001600160801b03810361082157634e487b7160e01b5f52601160045260245ffd5b6001019291505056fea2646970667358221220f43aa65719aefce07e66086e7a7396adb7f90e3dd4a0c99f70f5b551c16512b264736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAE9A4655 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xAE9A4655 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0xB9588327 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xC4522C92 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0xFA20FCA7 EQ PUSH2 0x22F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x2D3238FE EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x46BD8077 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x99374642 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0xABCA88F0 EQ PUSH2 0x18A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xDD PUSH2 0xC3 CALLDATASIZE PUSH1 0x4 PUSH2 0x716 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xDD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x115 PUSH2 0x237 JUMP JUMPDEST STOP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF1 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x169 CALLDATASIZE PUSH1 0x4 PUSH2 0x716 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x74A JUMP JUMPDEST PUSH2 0x143 PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0x786 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x115 PUSH2 0x1C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x79F JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH2 0x143 PUSH2 0x1D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x786 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x115 PUSH2 0x204 CALLDATASIZE PUSH1 0x4 PUSH2 0x716 JUMP JUMPDEST PUSH2 0x2E0 JUMP JUMPDEST PUSH2 0x115 PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0x716 JUMP JUMPDEST PUSH2 0x365 JUMP JUMPDEST PUSH2 0x115 PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0x716 JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST PUSH2 0xDD PUSH2 0x4CC JUMP JUMPDEST PUSH2 0x23F PUSH2 0x5A9 JUMP JUMPDEST PUSH2 0x248 PUSH0 PUSH2 0x604 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x26D JUMPI PUSH2 0x26D PUSH2 0x736 JUMP JUMPDEST EQ PUSH2 0x293 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28A SWAP1 PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x303 JUMPI PUSH2 0x303 PUSH2 0x736 JUMP JUMPDEST EQ PUSH2 0x320 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28A SWAP1 PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND SWAP1 SSTORE SWAP1 DUP4 SWAP1 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x2 SWAP3 PUSH1 0xFF NOT SWAP1 SWAP2 AND SWAP1 DUP4 JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x3AA JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x3C6 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x3D4 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x41C JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x425 DUP7 PUSH2 0x674 JUMP JUMPDEST PUSH2 0x42E DUP7 PUSH2 0x685 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0x487 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x497 PUSH2 0x5A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4C0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x28A JUMP JUMPDEST PUSH2 0x4C9 DUP2 PUSH2 0x604 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4F1 JUMPI PUSH2 0x4F1 PUSH2 0x736 JUMP JUMPDEST EQ PUSH2 0x50E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28A SWAP1 PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0xBAFBC0BFD4AFD8A222B8CD09B01CE310B06B0BEB42503EA91A76135E6A532E92 SWAP2 SWAP1 LOG3 PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 PUSH0 PUSH2 0x57D DUP4 PUSH2 0x7F4 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST CALLER PUSH2 0x5DB PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x248 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x28A JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x67C PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x4C9 DUP2 PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH2 0x35D JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x248 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x497 PUSH2 0x6AA JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x711 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x726 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x72F DUP3 PUSH2 0x6FB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0x76A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x711 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x796 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x72F DUP3 PUSH2 0x770 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7B0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x7B9 DUP4 PUSH2 0x6FB JUMP JUMPDEST SWAP2 POP PUSH2 0x7C7 PUSH1 0x20 DUP5 ADD PUSH2 0x770 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xA SWAP1 DUP3 ADD MSTORE PUSH10 0x27B7363C9030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 SUB PUSH2 0x821 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL GASPRICE 0xA6 JUMPI NOT 0xAE 0xFC RJUMP 0x7E66 ADDMOD PUSH15 0x7A7396ADB7F90E3DD4A0C99F70F5B5 MLOAD 0xC1 PUSH6 0x12B264736F6C PUSH4 0x4300081E STOP CALLER ",
							"sourceMap": "260:813:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;170:51:3;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;170:51:3;;;;;;-1:-1:-1;;;;;547:47:7;;;529:66;;517:2;502:18;170:51:3;;;;;;;;348:31:4;;;;;-1:-1:-1;;;;;348:31:4;;;3155:101:0;;;:::i;:::-;;2441:144;1313:22;2570:8;-1:-1:-1;;;;;2570:8:0;2441:144;;;-1:-1:-1;;;;;770:32:7;;;752:51;;740:2;725:18;2441:144:0;606:203:7;126:37:3;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;386:51:4:-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;386:51:4;;;769:170:3;;;;;;:::i;:::-;;:::i;923:147:4:-;;;;;;:::i;:::-;-1:-1:-1;;;;;1032:30:4;1005:7;1032:30;;;:16;:30;;;;;;-1:-1:-1;;;;;1032:30:4;;923:147;947:143:3;;;;;;:::i;:::-;;:::i;446:161:4:-;;;;;;:::i;:::-;;:::i;3405:215:0:-;;;;;;:::i;:::-;;:::i;615:300:4:-;;;:::i;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;769:170:3:-;276:10;291;270:17;;;;;;;;;;;;;:31;;;;;;;;:::i;:::-;;262:54;;;;-1:-1:-1;;;262:54:3;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;857:12:3;;;::::1;:5;:12:::0;;;::::1;::::0;;;;;;;:25;;872:10:::1;-1:-1:-1::0;;857:25:3;;::::1;::::0;::::1;::::0;;;893:23;;;;;:38;;-1:-1:-1;;;;;;893:38:3::1;-1:-1:-1::0;;;;;893:38:3;;::::1;::::0;;;::::1;::::0;;769:170::o;947:143::-;276:10;291;270:17;;;;;;;;;;;;;:31;;;;;;;;:::i;:::-;;262:54;;;;-1:-1:-1;;;262:54:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;1020:23:3;::::1;;::::0;;;:16:::1;:23;::::0;;;;;;;1013:30;;-1:-1:-1;;;;;;1013:30:3::1;::::0;;1054:12;;;;;;;:28;;1069:13:::1;::::0;-1:-1:-1;;1054:28:3;;::::1;::::0;1069:13;1054:28:::1;;;;;;947:143:::0;:::o;446:161:4:-;3147:66:1;4302:15;;-1:-1:-1;;;4302:15:1;;;;4301:16;;4348:14;;4158:30;4724:16;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4788:11;:16;;4803:1;4788:16;:50;;;;-1:-1:-1;4816:4:1;4808:25;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;-1:-1:-1;;;4906:23:1;;;;;;;;;;;4849:91;4949:18;;-1:-1:-1;;4949:18:1;4966:1;4949:18;;;4977:67;;;;5011:22;;-1:-1:-1;;;;5011:22:1;-1:-1:-1;;;5011:22:1;;;4977:67;512:22:4::1;527:6;512:14;:22::i;:::-;545:23;561:6;545:15;:23::i;:::-;579:16;:20:::0;;-1:-1:-1;;;;;;579:20:4::1;598:1;579:20;::::0;;5064:101:1;;;;5098:23;;-1:-1:-1;;;;5098:23:1;;;5140:14;;-1:-1:-1;2428:50:7;;5140:14:1;;2416:2:7;2401:18;5140:14:1;;;;;;;5064:101;4092:1079;;;;;446:161:4;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:0;::::1;3485:91;;3534:31;::::0;-1:-1:-1;;;3534:31:0;;3562:1:::1;3534:31;::::0;::::1;752:51:7::0;725:18;;3534:31:0::1;606:203:7::0;3485:91:0::1;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;615:300:4:-;673:7;;276:10:3;270:5;:17;;;;;;;;;;;;;:31;;;;;;;;:::i;:::-;;262:54;;;;-1:-1:-1;;;262:54:3;;;;;;;:::i;:::-;716:16:4::1;::::0;-1:-1:-1;;;;;716:16:4::1;693:20;743:30:::0;;;:16:::1;:30;::::0;;;;;:43;;-1:-1:-1;;;;;;743:43:4::1;776:10;743:43:::0;;::::1;::::0;;;802:46;;776:10;;716:16;;802:46:::1;::::0;693:20;802:46:::1;859:16;:18:::0;;-1:-1:-1;;;;;859:18:4::1;::::0;:16:::1;:18;::::0;::::1;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;859:18:4::1;;;;;-1:-1:-1::0;;;;;859:18:4::1;;;;;;;895:12;888:19;;;615:300:::0;:::o;2658:162:0:-;966:10:2;2717:7:0;1313:22;2570:8;-1:-1:-1;;;;;2570:8:0;;2441:144;2717:7;-1:-1:-1;;;;;2717:23:0;;2713:101;;2763:40;;-1:-1:-1;;;2763:40:0;;966:10:2;2763:40:0;;;752:51:7;725:18;;2763:40:0;606:203:7;3774:248:0;1313:22;3923:8;;-1:-1:-1;;;;;;3941:19:0;;-1:-1:-1;;;;;3941:19:0;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;1847:127::-;6929:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;668:93:3:-:0;-1:-1:-1;;;;;728:12:3;;743:10;728:12;;;;;;;;;;:25;;-1:-1:-1;;728:25:3;;743:10;728:25;;7082:141:1;3147:66;8558:40;-1:-1:-1;;;8558:40:1;;;;7144:73;;7189:17;;-1:-1:-1;;;7189:17:1;;;;;;;;;;;1980:235:0;6929:20:1;:18;:20::i;14:173:7:-;82:20;;-1:-1:-1;;;;;131:31:7;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:7:o;814:127::-;875:10;870:3;866:20;863:1;856:31;906:4;903:1;896:15;930:4;927:1;920:15;946:336;1086:2;1071:18;;1119:1;1108:13;;1098:144;;1164:10;1159:3;1155:20;1152:1;1145:31;1199:4;1196:1;1189:15;1227:4;1224:1;1217:15;1098:144;1251:25;;;946:336;:::o;1287:188::-;1355:20;;-1:-1:-1;;;;;1404:46:7;;1394:57;;1384:85;;1465:1;1462;1455:12;1480:186;1539:6;1592:2;1580:9;1571:7;1567:23;1563:32;1560:52;;;1608:1;1605;1598:12;1560:52;1631:29;1650:9;1631:29;:::i;1671:260::-;1739:6;1747;1800:2;1788:9;1779:7;1775:23;1771:32;1768:52;;;1816:1;1813;1806:12;1768:52;1839:29;1858:9;1839:29;:::i;:::-;1829:39;;1887:38;1921:2;1910:9;1906:18;1887:38;:::i;:::-;1877:48;;1671:260;;;;;:::o;1936:334::-;2138:2;2120:21;;;2177:2;2157:18;;;2150:30;-1:-1:-1;;;2211:2:7;2196:18;;2189:40;2261:2;2246:18;;1936:334::o;2489:::-;2528:3;-1:-1:-1;;;;;2565:5:7;2561:46;-1:-1:-1;;;;;2622:7:7;2619:47;2616:170;;2708:10;2703:3;2699:20;2696:1;2689:31;2743:4;2740:1;2733:15;2771:4;2768:1;2761:15;2616:170;2815:1;2802:15;;2489:334;-1:-1:-1;;2489:334:7:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "428800",
								"executionCost": "459",
								"totalCost": "429259"
							},
							"external": {
								"assignStaff(address,uint128)": "infinite",
								"getRestaurantOwner(uint128)": "2595",
								"initialize(address)": "infinite",
								"nextRestaurantId()": "2348",
								"owner()": "2386",
								"registerRestaurant()": "57040",
								"removeStaff(address)": "51197",
								"renounceOwnership()": "infinite",
								"restaurantOwners(uint128)": "2666",
								"roles(address)": "2661",
								"staffRestaurants(address)": "2545",
								"transferOwnership(address)": "28453"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 260,
									"end": 1073,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 260,
									"end": 1073,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 260,
									"end": 1073,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 260,
									"end": 1073,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 260,
									"end": 1073,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 260,
									"end": 1073,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 260,
									"end": 1073,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 260,
									"end": 1073,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 260,
									"end": 1073,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 1073,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 1073,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 260,
									"end": 1073,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 260,
									"end": 1073,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 260,
									"end": 1073,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 260,
									"end": 1073,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 260,
									"end": 1073,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 260,
									"end": 1073,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 260,
									"end": 1073,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 1073,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 260,
									"end": 1073,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 1073,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f43aa65719aefce07e66086e7a7396adb7f90e3dd4a0c99f70f5b551c16512b264736f6c634300081e0033",
									".code": [
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "AE9A4655"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "AE9A4655"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "B9588327"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "C4522C92"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "C4D66DE8"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "FA20FCA7"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "2D3238FE"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "46BD8077"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "99374642"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "ABCA88F0"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 1073,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 170,
											"end": 221,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 170,
											"end": 221,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 170,
											"end": 221,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 170,
											"end": 221,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 221,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 170,
											"end": 221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 170,
											"end": 221,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 221,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 170,
											"end": 221,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 221,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 221,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 170,
											"end": 221,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 170,
											"end": 221,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 221,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 547,
											"end": 594,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 547,
											"end": 594,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 547,
											"end": 594,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 529,
											"end": 595,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 529,
											"end": 595,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 170,
											"end": 221,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 170,
											"end": 221,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 221,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 170,
											"end": 221,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 348,
											"end": 379,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 379,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 348,
											"end": 379,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 379,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 348,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 348,
											"end": 379,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 348,
											"end": 379,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 348,
											"end": 379,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 348,
											"end": 379,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 770,
											"end": 802,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 770,
											"end": 802,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 770,
											"end": 802,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 752,
											"end": 803,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 752,
											"end": 803,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 740,
											"end": 742,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 725,
											"end": 743,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 606,
											"end": 809,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 126,
											"end": 163,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 126,
											"end": 163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 126,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 126,
											"end": 163,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 126,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 126,
											"end": 163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 126,
											"end": 163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 163,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 126,
											"end": 163,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 126,
											"end": 163,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 126,
											"end": 163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 126,
											"end": 163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 126,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 126,
											"end": 163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 386,
											"end": 437,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 386,
											"end": 437,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 386,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 386,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 386,
											"end": 437,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 386,
											"end": 437,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 386,
											"end": 437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 386,
											"end": 437,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 386,
											"end": 437,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 386,
											"end": 437,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 386,
											"end": 437,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 386,
											"end": 437,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 386,
											"end": 437,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 437,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 386,
											"end": 437,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 386,
											"end": 437,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 386,
											"end": 437,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 437,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 386,
											"end": 437,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 386,
											"end": 437,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 386,
											"end": 437,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 386,
											"end": 437,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 386,
											"end": 437,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 769,
											"end": 939,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 769,
											"end": 939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 769,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 769,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 769,
											"end": 939,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 769,
											"end": 939,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 769,
											"end": 939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 769,
											"end": 939,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 769,
											"end": 939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 769,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 769,
											"end": 939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 923,
											"end": 1070,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 923,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 923,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 923,
											"end": 1070,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1070,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 923,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 923,
											"end": 1070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1070,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 923,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1005,
											"end": 1012,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1048,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1070,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 947,
											"end": 1090,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 947,
											"end": 1090,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 947,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 947,
											"end": 1090,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1090,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 947,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 947,
											"end": 1090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1090,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 947,
											"end": 1090,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 947,
											"end": 1090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 446,
											"end": 607,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 446,
											"end": 607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 446,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 446,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 446,
											"end": 607,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 446,
											"end": 607,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 446,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 446,
											"end": 607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 446,
											"end": 607,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 446,
											"end": 607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 446,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 446,
											"end": 607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 615,
											"end": 915,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 615,
											"end": 915,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 615,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 615,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 615,
											"end": 915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 769,
											"end": 939,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 769,
											"end": 939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 276,
											"end": 286,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 291,
											"end": 301,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 287,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 270,
											"end": 287,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 270,
											"end": 287,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 270,
											"end": 287,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 270,
											"end": 301,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 270,
											"end": 301,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 270,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 270,
											"end": 301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 270,
											"end": 301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 262,
											"end": 316,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 316,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 262,
											"end": 316,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 262,
											"end": 316,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 262,
											"end": 316,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 262,
											"end": 316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 262,
											"end": 316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 316,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 262,
											"end": 316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 857,
											"end": 869,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 857,
											"end": 869,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 857,
											"end": 869,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 857,
											"end": 869,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 857,
											"end": 862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 857,
											"end": 869,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 857,
											"end": 869,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 857,
											"end": 869,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 857,
											"end": 869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 857,
											"end": 869,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 857,
											"end": 869,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 857,
											"end": 869,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 857,
											"end": 869,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 857,
											"end": 869,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 857,
											"end": 869,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 857,
											"end": 869,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 857,
											"end": 882,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 857,
											"end": 882,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 872,
											"end": 882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 857,
											"end": 882,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 857,
											"end": 882,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 857,
											"end": 882,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 857,
											"end": 882,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 857,
											"end": 882,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 857,
											"end": 882,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 857,
											"end": 882,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 857,
											"end": 882,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 893,
											"end": 916,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 893,
											"end": 916,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 893,
											"end": 916,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 893,
											"end": 916,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 893,
											"end": 916,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 893,
											"end": 931,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 893,
											"end": 931,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 893,
											"end": 931,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 893,
											"end": 931,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 893,
											"end": 931,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 893,
											"end": 931,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 893,
											"end": 931,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 893,
											"end": 931,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 893,
											"end": 931,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 893,
											"end": 931,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 893,
											"end": 931,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 893,
											"end": 931,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 769,
											"end": 939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1090,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 947,
											"end": 1090,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 276,
											"end": 286,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 291,
											"end": 301,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 287,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 270,
											"end": 287,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 270,
											"end": 287,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 270,
											"end": 287,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 270,
											"end": 301,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 270,
											"end": 301,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 270,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 270,
											"end": 301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 270,
											"end": 301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 262,
											"end": 316,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 316,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 262,
											"end": 316,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 262,
											"end": 316,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 262,
											"end": 316,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 262,
											"end": 316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 262,
											"end": 316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1020,
											"end": 1043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1043,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1020,
											"end": 1043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1043,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1020,
											"end": 1043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1020,
											"end": 1043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1043,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1043,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1043,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1043,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1043,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1013,
											"end": 1043,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1013,
											"end": 1043,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1013,
											"end": 1043,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1013,
											"end": 1043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1013,
											"end": 1043,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1066,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1066,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1066,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1066,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1066,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1066,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1066,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1082,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1082,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1069,
											"end": 1082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1069,
											"end": 1082,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1054,
											"end": 1082,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1082,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1082,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1082,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1069,
											"end": 1082,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1082,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1054,
											"end": 1082,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1082,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1082,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1082,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1082,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 446,
											"end": 607,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 446,
											"end": 607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3213,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4744,
											"end": 4758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4788,
											"end": 4799,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4816,
											"end": 4820,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4838,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4866,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 4883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F92EE8A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 512,
											"end": 534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 527,
											"end": 533,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 512,
											"end": 526,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 512,
											"end": 534,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 512,
											"end": 534,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 512,
											"end": 534,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 545,
											"end": 568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 561,
											"end": 567,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 545,
											"end": 560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 545,
											"end": 568,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 568,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 545,
											"end": 568,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 579,
											"end": 595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 579,
											"end": 599,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 579,
											"end": 599,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 579,
											"end": 599,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 598,
											"end": 599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 579,
											"end": 599,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 579,
											"end": 599,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 579,
											"end": 599,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2428,
											"end": 2478,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2478,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2418,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2401,
											"end": 2419,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 446,
											"end": 607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 446,
											"end": 607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 752,
											"end": 803,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 725,
											"end": 743,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 725,
											"end": 743,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 606,
											"end": 809,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 615,
											"end": 915,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 615,
											"end": 915,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 673,
											"end": 680,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 673,
											"end": 680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 276,
											"end": 286,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 270,
											"end": 275,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 287,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 270,
											"end": 287,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 270,
											"end": 287,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 270,
											"end": 287,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 270,
											"end": 287,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 270,
											"end": 301,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 270,
											"end": 301,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 270,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 270,
											"end": 301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 270,
											"end": 301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 270,
											"end": 301,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 262,
											"end": 316,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 316,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 262,
											"end": 316,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 262,
											"end": 316,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 262,
											"end": 316,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 262,
											"end": 316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 262,
											"end": 316,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 262,
											"end": 316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 716,
											"end": 732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 716,
											"end": 732,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 716,
											"end": 732,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 693,
											"end": 713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 743,
											"end": 773,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 743,
											"end": 773,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 743,
											"end": 773,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 743,
											"end": 759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 743,
											"end": 773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 743,
											"end": 773,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 743,
											"end": 773,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 743,
											"end": 773,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 743,
											"end": 773,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 743,
											"end": 773,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 743,
											"end": 786,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 743,
											"end": 786,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 743,
											"end": 786,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 776,
											"end": 786,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 743,
											"end": 786,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 743,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 743,
											"end": 786,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 743,
											"end": 786,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 743,
											"end": 786,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 743,
											"end": 786,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 802,
											"end": 848,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 802,
											"end": 848,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 776,
											"end": 786,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 776,
											"end": 786,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 716,
											"end": 732,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 716,
											"end": 732,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 802,
											"end": 848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "BAFBC0BFD4AFD8A222B8CD09B01CE310B06B0BEB42503EA91A76135E6A532E92"
										},
										{
											"begin": 802,
											"end": 848,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 693,
											"end": 713,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 802,
											"end": 848,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 859,
											"end": 875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 859,
											"end": 877,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 877,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 859,
											"end": 877,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 859,
											"end": 877,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 859,
											"end": 877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 859,
											"end": 877,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 859,
											"end": 877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 859,
											"end": 877,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 859,
											"end": 877,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 859,
											"end": 877,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 859,
											"end": 877,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 859,
											"end": 877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 859,
											"end": 877,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 859,
											"end": 877,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 859,
											"end": 877,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 859,
											"end": 877,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 859,
											"end": 877,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 859,
											"end": 877,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 859,
											"end": 877,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 859,
											"end": 877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 877,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 859,
											"end": 877,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 859,
											"end": 877,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 859,
											"end": 877,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 859,
											"end": 877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 877,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 859,
											"end": 877,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 859,
											"end": 877,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 895,
											"end": 907,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 888,
											"end": 907,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 888,
											"end": 907,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 888,
											"end": 907,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 615,
											"end": 915,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 615,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 752,
											"end": 803,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 725,
											"end": 743,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 725,
											"end": 743,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 606,
											"end": 809,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 668,
											"end": 761,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 668,
											"end": 761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 728,
											"end": 740,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 728,
											"end": 740,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 743,
											"end": 753,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 740,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 728,
											"end": 740,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 728,
											"end": 740,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 728,
											"end": 740,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 728,
											"end": 740,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 728,
											"end": 740,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 728,
											"end": 740,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 728,
											"end": 740,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 728,
											"end": 740,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 728,
											"end": 740,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 728,
											"end": 753,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 728,
											"end": 753,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 728,
											"end": 753,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 728,
											"end": 753,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 743,
											"end": 753,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 728,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 728,
											"end": 753,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3147,
											"end": 3213,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AFCD79F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 343,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 814,
											"end": 941,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 814,
											"end": 941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 875,
											"end": 885,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 870,
											"end": 873,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 866,
											"end": 886,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 863,
											"end": 864,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 887,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 906,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 903,
											"end": 904,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 896,
											"end": 911,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 930,
											"end": 934,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 927,
											"end": 928,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 920,
											"end": 935,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 946,
											"end": 1282,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 946,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1088,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1071,
											"end": 1089,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1071,
											"end": 1089,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1119,
											"end": 1120,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1108,
											"end": 1121,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1121,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 1098,
											"end": 1242,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1164,
											"end": 1174,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 1159,
											"end": 1162,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1155,
											"end": 1175,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1153,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1145,
											"end": 1176,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1199,
											"end": 1203,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1196,
											"end": 1197,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1189,
											"end": 1204,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1231,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1224,
											"end": 1225,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1232,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1242,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 1098,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1251,
											"end": 1276,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1251,
											"end": 1276,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1251,
											"end": 1276,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 946,
											"end": 1282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 946,
											"end": 1282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1287,
											"end": 1475,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1287,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1375,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1375,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1404,
											"end": 1450,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1450,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1394,
											"end": 1451,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1394,
											"end": 1451,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1384,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 1384,
											"end": 1469,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1466,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1463,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1467,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1480,
											"end": 1666,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1480,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1545,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1592,
											"end": 1594,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1580,
											"end": 1589,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1571,
											"end": 1578,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1567,
											"end": 1590,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1595,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1612,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 1560,
											"end": 1612,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1608,
											"end": 1609,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1606,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1612,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 1560,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1631,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 1650,
											"end": 1659,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1631,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1631,
											"end": 1660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1671,
											"end": 1931,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 1671,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1747,
											"end": 1753,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1800,
											"end": 1802,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1788,
											"end": 1797,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1786,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1798,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1803,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1768,
											"end": 1820,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1768,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 1768,
											"end": 1820,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1816,
											"end": 1817,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1814,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1818,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1768,
											"end": 1820,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 1768,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1839,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 1858,
											"end": 1867,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1839,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1839,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1839,
											"end": 1868,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 1839,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1868,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1887,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 1921,
											"end": 1923,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1906,
											"end": 1924,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1887,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1887,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1887,
											"end": 1925,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 1887,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1877,
											"end": 1925,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1877,
											"end": 1925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1671,
											"end": 1931,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1671,
											"end": 1931,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1671,
											"end": 1931,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1671,
											"end": 1931,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1671,
											"end": 1931,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1671,
											"end": 1931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1936,
											"end": 2270,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 1936,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2140,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2177,
											"end": 2179,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2157,
											"end": 2175,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2157,
											"end": 2175,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2157,
											"end": 2175,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2150,
											"end": 2180,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "27B7363C9030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2211,
											"end": 2213,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2214,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2196,
											"end": 2214,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2189,
											"end": 2229,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2263,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2246,
											"end": 2264,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2264,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1936,
											"end": 2270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 2823,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 2489,
											"end": 2823,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2531,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2607,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2622,
											"end": 2629,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2619,
											"end": 2666,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 2616,
											"end": 2786,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2718,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 2703,
											"end": 2706,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2699,
											"end": 2719,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2696,
											"end": 2697,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2689,
											"end": 2720,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2747,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 2740,
											"end": 2741,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2771,
											"end": 2775,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2768,
											"end": 2769,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2776,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2786,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 2616,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2816,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2802,
											"end": 2817,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2802,
											"end": 2817,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2489,
											"end": 2823,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2489,
											"end": 2823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"access/RoleAccess.sol",
								"contracts/RestaurantManager.sol",
								"interfaces/IRestaurantManager.sol",
								"structs/FoodTypes.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"assignStaff(address,uint128)": "ae9a4655",
							"getRestaurantOwner(uint128)": "b9588327",
							"initialize(address)": "c4d66de8",
							"nextRestaurantId()": "46bd8077",
							"owner()": "8da5cb5b",
							"registerRestaurant()": "fa20fca7",
							"removeStaff(address)": "c4522c92",
							"renounceOwnership()": "715018a6",
							"restaurantOwners(uint128)": "abca88f0",
							"roles(address)": "99374642",
							"staffRestaurants(address)": "2d3238fe",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"restaurantId\",\"type\":\"uint128\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"RestaurantRegistered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staff\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"restaurantId\",\"type\":\"uint128\"}],\"name\":\"assignStaff\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"restaurantId\",\"type\":\"uint128\"}],\"name\":\"getRestaurantOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextRestaurantId\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerRestaurant\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staff\",\"type\":\"address\"}],\"name\":\"removeStaff\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"name\":\"restaurantOwners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"roles\",\"outputs\":[{\"internalType\":\"enum Role\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"staffRestaurants\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RestaurantManager.sol\":\"RestaurantManager\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"access/RoleAccess.sol\":{\"keccak256\":\"0x069c0d264b725468cb271467a2f3db37ef9f6af392eb03a1f609bca828d94818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06135d76213b4b4d3384d201ccc770d6754a45e9a02655218a64a7f86053293d\",\"dweb:/ipfs/QmPBmdyyofgknAsEyit7igUnbmRZ55Tro9zqfRvA55qFu7\"]},\"contracts/RestaurantManager.sol\":{\"keccak256\":\"0x30bdbb86869dfc7d310d7b7b43c3c5c2bff1dc80c721e881f5b9d781a503b631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3e94b50804a56698ae21c6a70f1a5457e4f0ca5dd56618b2da2d69eeb333286\",\"dweb:/ipfs/QmQhEszahXm7h9h9bXyj12nxkTHMF6f1QR5EzdxKog5ntV\"]},\"interfaces/IRestaurantManager.sol\":{\"keccak256\":\"0x728c42e0822af1c457cfe953fbc2611c6817ad18df3ab07b76b4b7971df62cf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3001214cafaaab608958e2cc1419c08426c914892e35ac010fe4fe2864b5d016\",\"dweb:/ipfs/QmUZ45bpeZqfRHnHgBkjL57fFP532DB67chJfMFY5FSx6S\"]},\"structs/FoodTypes.sol\":{\"keccak256\":\"0x6349ed8defd63089fdb5a53685a568d3ab0ef9d63c5ca7ea733573e0bd7734d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c896dd06df3864f42b2906d0a8a59799b57fbfe18094202d0494b4a198ea42b4\",\"dweb:/ipfs/Qma59Lyc5E9p32rumk56SkEhyJHbqFV7wVJveKj7gg5h4m\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 516,
								"contract": "contracts/RestaurantManager.sol:RestaurantManager",
								"label": "roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_enum(Role)740)"
							},
							{
								"astId": 520,
								"contract": "contracts/RestaurantManager.sol:RestaurantManager",
								"label": "staffRestaurants",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint128)"
							},
							{
								"astId": 645,
								"contract": "contracts/RestaurantManager.sol:RestaurantManager",
								"label": "nextRestaurantId",
								"offset": 0,
								"slot": "2",
								"type": "t_uint128"
							},
							{
								"astId": 649,
								"contract": "contracts/RestaurantManager.sol:RestaurantManager",
								"label": "restaurantOwners",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint128,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_enum(Role)740": {
								"encoding": "inplace",
								"label": "enum Role",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_enum(Role)740)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => enum Role)",
								"numberOfBytes": "32",
								"value": "t_enum(Role)740"
							},
							"t_mapping(t_address,t_uint128)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint128)",
								"numberOfBytes": "32",
								"value": "t_uint128"
							},
							"t_mapping(t_uint128,t_address)": {
								"encoding": "mapping",
								"key": "t_uint128",
								"label": "mapping(uint128 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_uint128": {
								"encoding": "inplace",
								"label": "uint128",
								"numberOfBytes": "16"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IRestaurantManager.sol": {
				"IRestaurantManager": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint128",
									"name": "restaurantId",
									"type": "uint128"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "RestaurantRegistered",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint128",
									"name": "restaurantId",
									"type": "uint128"
								}
							],
							"name": "getRestaurantOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "registerRestaurant",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRestaurantOwner(uint128)": "b9588327",
							"registerRestaurant()": "fa20fca7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"restaurantId\",\"type\":\"uint128\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"RestaurantRegistered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"restaurantId\",\"type\":\"uint128\"}],\"name\":\"getRestaurantOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerRestaurant\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IRestaurantManager.sol\":\"IRestaurantManager\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IRestaurantManager.sol\":{\"keccak256\":\"0x728c42e0822af1c457cfe953fbc2611c6817ad18df3ab07b76b4b7971df62cf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3001214cafaaab608958e2cc1419c08426c914892e35ac010fe4fe2864b5d016\",\"dweb:/ipfs/QmUZ45bpeZqfRHnHgBkjL57fFP532DB67chJfMFY5FSx6S\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							508
						],
						"Initializable": [
							462
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 509,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 508,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 463,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 462,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 508,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								508,
								462
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 490,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							462
						]
					},
					"id": 463,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 462,
							"linearizedBaseContracts": [
								462
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 462,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 462,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1079:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4709:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4704:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4704:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4724:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4739:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4724:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4744:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4724:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4704:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4773:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4768:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4768:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4788:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4803:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4788:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4816:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$462",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$462",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4808:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4808:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4808:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4822:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4808:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4827:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4808:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4837:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4808:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4788:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4768:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4853:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4854:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4870:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4871:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4853:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4849:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4885:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4906:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4906:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4899:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4949:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4951:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4949:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4949:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4949:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4981:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4977:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4997:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5011:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5013:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5011:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5029:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5011:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5011:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5053:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5068:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5064:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5084:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5098:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5100:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5098:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5116:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5098:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5098:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5140:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5140:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5135:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1102:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6289:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6384:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6355:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6355:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6355:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6355:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "6388:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6388:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6355:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6429:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6431:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6429:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6448:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6450:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6448:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6466:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6448:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6429:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6425:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6475:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6496:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6496:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6489:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6539:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6541:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6539:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6556:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6539:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6539:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6573:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6575:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6573:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6591:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6573:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6573:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6605:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6616:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6618:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6616:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6634:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6616:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6616:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6666:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6654:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6654:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6649:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5177:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6259:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6280:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6273:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6273:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:16:1"
									},
									"src": "6250:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6919:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6929:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6929:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6929:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6959:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6687:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6900:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6916:2:1"
									},
									"src": "6891:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7134:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7148:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7149:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7149:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7144:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7168:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7189:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7189:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7182:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6973:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7091:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7109:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7134:0:1"
									},
									"scope": 462,
									"src": "7082:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7758:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7853:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7824:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7824:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7824:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7824:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7857:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7857:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7824:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7898:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7900:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7898:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7894:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7915:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7936:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7936:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7929:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7983:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7985:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7983:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8006:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8006:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8001:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8001:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8014:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8001:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7983:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7979:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8019:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8033:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8035:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8033:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8055:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8055:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8050:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8050:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8063:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8050:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8033:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8033:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8102:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8102:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8097:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8097:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8110:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8097:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8085:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8085:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8080:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7229:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7718:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7738:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7758:0:1"
									},
									"scope": 462,
									"src": "7709:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8306:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "8323:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8323:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8323:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8316:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8137:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8250:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8272:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8298:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8298:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8297:8:1"
									},
									"scope": 462,
									"src": "8241:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8541:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "8558:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8558:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8585:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8558:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8551:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8375:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8494:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8509:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8535:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8535:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:6:1"
									},
									"scope": 462,
									"src": "8485:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8896:45:1",
										"statements": [
											{
												"expression": {
													"id": 444,
													"name": "INITIALIZABLE_STORAGE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 208,
													"src": "8913:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 443,
												"id": 445,
												"nodeType": "Return",
												"src": "8906:28:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8611:203:1",
										"text": " @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializableStorageSlot",
									"nameLocation": "8828:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8853:2:1"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8887:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 441,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8886:9:1"
									},
									"scope": 462,
									"src": "8819:122:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "9161:115:1",
										"statements": [
											{
												"assignments": [
													455
												],
												"declarations": [
													{
														"constant": false,
														"id": 455,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "9179:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 460,
														"src": "9171:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 454,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9171:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 458,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 456,
														"name": "_initializableStorageSlot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "9186:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9171:42:1"
											},
											{
												"AST": {
													"nativeSrc": "9232:38:1",
													"nodeType": "YulBlock",
													"src": "9232:38:1",
													"statements": [
														{
															"nativeSrc": "9246:14:1",
															"nodeType": "YulAssignment",
															"src": "9246:14:1",
															"value": {
																"name": "slot",
																"nativeSrc": "9256:4:1",
																"nodeType": "YulIdentifier",
																"src": "9256:4:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "9246:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9246:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 452,
														"isOffset": false,
														"isSlot": true,
														"src": "9246:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 455,
														"isOffset": false,
														"isSlot": false,
														"src": "9256:4:1",
														"valueSize": 1
													}
												],
												"id": 459,
												"nodeType": "InlineAssembly",
												"src": "9223:47:1"
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "8947:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "9080:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9104:2:1"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "9158:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "9129:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 451,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 450,
														"name": "InitializableStorage",
														"nameLocations": [
															"9129:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "9129:20:1"
													},
													"referencedDeclaration": 205,
													"src": "9129:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9128:32:1"
									},
									"scope": 462,
									"src": "9071:205:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 463,
							"src": "2349:6929:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:9166:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							508
						],
						"Initializable": [
							462
						]
					},
					"id": 509,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 464,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 466,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 509,
							"sourceUnit": 463,
							"src": "126:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 465,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 462,
										"src": "134:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 468,
										"name": "Initializable",
										"nameLocations": [
											"728:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "728:13:2"
									},
									"id": 469,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:2"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 467,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 508,
							"linearizedBaseContracts": [
								508,
								462
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "800:7:2",
										"statements": []
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 472,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 471,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:2"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:2"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:2"
									},
									"scope": 508,
									"src": "748:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "875:7:2",
										"statements": []
									},
									"id": 481,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 478,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 477,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:2"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:2"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:2"
									},
									"scope": 508,
									"src": "813:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "949:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 486,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 485,
												"id": 488,
												"nodeType": "Return",
												"src": "959:17:2"
											}
										]
									},
									"id": 490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:2"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "940:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:2"
									},
									"scope": 508,
									"src": "887:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "1056:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 495,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 494,
												"id": 497,
												"nodeType": "Return",
												"src": "1066:15:2"
											}
										]
									},
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:2"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "1040:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 492,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:2"
									},
									"scope": 508,
									"src": "989:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "1166:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 503,
												"id": 505,
												"nodeType": "Return",
												"src": "1176:8:2"
											}
										]
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:2"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "1157:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:2"
									},
									"scope": 508,
									"src": "1094:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 509,
							"src": "688:505:2",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:2"
				},
				"id": 2
			},
			"access/RoleAccess.sol": {
				"ast": {
					"absolutePath": "access/RoleAccess.sol",
					"exportedSymbols": {
						"MenuItem": [
							768
						],
						"Order": [
							790
						],
						"OrderStatus": [
							747
						],
						"Review": [
							801
						],
						"Role": [
							740
						],
						"RoleAccess": [
							631
						]
					},
					"id": 632,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 510,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:3"
						},
						{
							"absolutePath": "structs/FoodTypes.sol",
							"file": "../structs/FoodTypes.sol",
							"id": 511,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 632,
							"sourceUnit": 802,
							"src": "61:34:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "RoleAccess",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 631,
							"linearizedBaseContracts": [
								631
							],
							"name": "RoleAccess",
							"nameLocation": "108:10:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "99374642",
									"id": 516,
									"mutability": "mutable",
									"name": "roles",
									"nameLocation": "158:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 631,
									"src": "126:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_enum$_Role_$740_$",
										"typeString": "mapping(address => enum Role)"
									},
									"typeName": {
										"id": 515,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 512,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "134:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "126:24:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_enum$_Role_$740_$",
											"typeString": "mapping(address => enum Role)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 514,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 513,
												"name": "Role",
												"nameLocations": [
													"145:4:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 740,
												"src": "145:4:3"
											},
											"referencedDeclaration": 740,
											"src": "145:4:3",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_Role_$740",
												"typeString": "enum Role"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2d3238fe",
									"id": 520,
									"mutability": "mutable",
									"name": "staffRestaurants",
									"nameLocation": "205:16:3",
									"nodeType": "VariableDeclaration",
									"scope": 631,
									"src": "170:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint128_$",
										"typeString": "mapping(address => uint128)"
									},
									"typeName": {
										"id": 519,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 517,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "178:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "170:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint128_$",
											"typeString": "mapping(address => uint128)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 518,
											"name": "uint128",
											"nodeType": "ElementaryTypeName",
											"src": "189:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "251:85:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Role_$740",
																"typeString": "enum Role"
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 523,
																	"name": "roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 516,
																	"src": "270:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_enum$_Role_$740_$",
																		"typeString": "mapping(address => enum Role)"
																	}
																},
																"id": 526,
																"indexExpression": {
																	"expression": {
																		"id": 524,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "276:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "280:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "276:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "270:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$740",
																	"typeString": "enum Role"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 527,
																	"name": "Role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "291:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Role_$740_$",
																		"typeString": "type(enum Role)"
																	}
																},
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "296:5:3",
																"memberName": "Admin",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 737,
																"src": "291:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$740",
																	"typeString": "enum Role"
																}
															},
															"src": "270:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792061646d696e",
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "303:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db",
																"typeString": "literal_string \"Only admin\""
															},
															"value": "Only admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db",
																"typeString": "literal_string \"Only admin\""
															}
														],
														"id": 522,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "262:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "262:54:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 532,
												"nodeType": "ExpressionStatement",
												"src": "262:54:3"
											},
											{
												"id": 533,
												"nodeType": "PlaceholderStatement",
												"src": "327:1:3"
											}
										]
									},
									"id": 535,
									"name": "onlyAdmin",
									"nameLocation": "239:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "248:2:3"
									},
									"src": "230:106:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "385:117:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 540,
																	"name": "staffRestaurants",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 520,
																	"src": "404:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint128_$",
																		"typeString": "mapping(address => uint128)"
																	}
																},
																"id": 543,
																"indexExpression": {
																	"expression": {
																		"id": 541,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "421:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "425:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "421:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "404:28:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 544,
																"name": "restaurantId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "436:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "404:44:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79207374616666206f6620746869732072657374617572616e74",
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "450:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a801a15bc25b691bb2871e442f1985efaf18bda59d6b01296fefba04ec1c14e",
																"typeString": "literal_string \"Only staff of this restaurant\""
															},
															"value": "Only staff of this restaurant"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a801a15bc25b691bb2871e442f1985efaf18bda59d6b01296fefba04ec1c14e",
																"typeString": "literal_string \"Only staff of this restaurant\""
															}
														],
														"id": 539,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "396:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "396:86:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "396:86:3"
											},
											{
												"id": 549,
												"nodeType": "PlaceholderStatement",
												"src": "493:1:3"
											}
										]
									},
									"id": 551,
									"name": "onlyStaff",
									"nameLocation": "353:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "restaurantId",
												"nameLocation": "371:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "363:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 536,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "363:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "362:22:3"
									},
									"src": "344:158:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "534:126:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Role_$740",
																	"typeString": "enum Role"
																},
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 554,
																		"name": "roles",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 516,
																		"src": "553:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_enum$_Role_$740_$",
																			"typeString": "mapping(address => enum Role)"
																		}
																	},
																	"id": 557,
																	"indexExpression": {
																		"expression": {
																			"id": 555,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "559:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "563:6:3",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "559:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "553:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$740",
																		"typeString": "enum Role"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 558,
																		"name": "Role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "574:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Role_$740_$",
																			"typeString": "type(enum Role)"
																		}
																	},
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "579:8:3",
																	"memberName": "Customer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 739,
																	"src": "574:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$740",
																		"typeString": "enum Role"
																	}
																},
																"src": "553:34:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Role_$740",
																	"typeString": "enum Role"
																},
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 561,
																		"name": "roles",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 516,
																		"src": "591:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_enum$_Role_$740_$",
																			"typeString": "mapping(address => enum Role)"
																		}
																	},
																	"id": 564,
																	"indexExpression": {
																		"expression": {
																			"id": 562,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "597:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "601:6:3",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "597:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "591:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$740",
																		"typeString": "enum Role"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 565,
																		"name": "Role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "612:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Role_$740_$",
																			"typeString": "type(enum Role)"
																		}
																	},
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "617:5:3",
																	"memberName": "Staff",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 738,
																	"src": "612:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$740",
																		"typeString": "enum Role"
																	}
																},
																"src": "591:31:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "553:69:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920637573746f6d6572",
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "624:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_639c5cbe4c4ef9be26400f7f38ae426f23443153946872063170f5bf68a2ffc3",
																"typeString": "literal_string \"Only customer\""
															},
															"value": "Only customer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_639c5cbe4c4ef9be26400f7f38ae426f23443153946872063170f5bf68a2ffc3",
																"typeString": "literal_string \"Only customer\""
															}
														],
														"id": 553,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "545:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "545:95:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "545:95:3"
											},
											{
												"id": 572,
												"nodeType": "PlaceholderStatement",
												"src": "651:1:3"
											}
										]
									},
									"id": 574,
									"name": "onlyCustomer",
									"nameLocation": "519:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "531:2:3"
									},
									"src": "510:150:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "717:44:3",
										"statements": [
											{
												"expression": {
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 579,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "728:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_enum$_Role_$740_$",
																"typeString": "mapping(address => enum Role)"
															}
														},
														"id": 581,
														"indexExpression": {
															"id": 580,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "734:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "728:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Role_$740",
															"typeString": "enum Role"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 582,
															"name": "Role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "743:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Role_$740_$",
																"typeString": "type(enum Role)"
															}
														},
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "748:5:3",
														"memberName": "Admin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 737,
														"src": "743:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Role_$740",
															"typeString": "enum Role"
														}
													},
													"src": "728:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Role_$740",
														"typeString": "enum Role"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "728:25:3"
											}
										]
									},
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initializeRoles",
									"nameLocation": "677:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "701:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "693:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:3"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "717:0:3"
									},
									"scope": 631,
									"src": "668:93:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "846:93:3",
										"statements": [
											{
												"expression": {
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 596,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "857:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_enum$_Role_$740_$",
																"typeString": "mapping(address => enum Role)"
															}
														},
														"id": 598,
														"indexExpression": {
															"id": 597,
															"name": "staff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "863:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "857:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Role_$740",
															"typeString": "enum Role"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 599,
															"name": "Role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "872:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Role_$740_$",
																"typeString": "type(enum Role)"
															}
														},
														"id": 600,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "877:5:3",
														"memberName": "Staff",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 738,
														"src": "872:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Role_$740",
															"typeString": "enum Role"
														}
													},
													"src": "857:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Role_$740",
														"typeString": "enum Role"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "857:25:3"
											},
											{
												"expression": {
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 603,
															"name": "staffRestaurants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "893:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint128_$",
																"typeString": "mapping(address => uint128)"
															}
														},
														"id": 605,
														"indexExpression": {
															"id": 604,
															"name": "staff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "910:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "893:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 606,
														"name": "restaurantId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "919:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "893:38:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 608,
												"nodeType": "ExpressionStatement",
												"src": "893:38:3"
											}
										]
									},
									"functionSelector": "ae9a4655",
									"id": 610,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 594,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 593,
												"name": "onlyAdmin",
												"nameLocations": [
													"836:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 535,
												"src": "836:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "836:9:3"
										}
									],
									"name": "assignStaff",
									"nameLocation": "778:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "staff",
												"nameLocation": "798:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "790:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "restaurantId",
												"nameLocation": "813:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "805:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 590,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:37:3"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:0:3"
									},
									"scope": 631,
									"src": "769:170:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "1002:88:3",
										"statements": [
											{
												"expression": {
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1013:30:3",
													"subExpression": {
														"baseExpression": {
															"id": 617,
															"name": "staffRestaurants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "1020:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint128_$",
																"typeString": "mapping(address => uint128)"
															}
														},
														"id": 619,
														"indexExpression": {
															"id": 618,
															"name": "staff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "1037:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1020:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "1013:30:3"
											},
											{
												"expression": {
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 622,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "1054:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_enum$_Role_$740_$",
																"typeString": "mapping(address => enum Role)"
															}
														},
														"id": 624,
														"indexExpression": {
															"id": 623,
															"name": "staff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "1060:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1054:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Role_$740",
															"typeString": "enum Role"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 625,
															"name": "Role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "1069:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Role_$740_$",
																"typeString": "type(enum Role)"
															}
														},
														"id": 626,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1074:8:3",
														"memberName": "Customer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 739,
														"src": "1069:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Role_$740",
															"typeString": "enum Role"
														}
													},
													"src": "1054:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Role_$740",
														"typeString": "enum Role"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "1054:28:3"
											}
										]
									},
									"functionSelector": "c4522c92",
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 615,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 614,
												"name": "onlyAdmin",
												"nameLocations": [
													"992:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 535,
												"src": "992:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "992:9:3"
										}
									],
									"name": "removeStaff",
									"nameLocation": "956:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "staff",
												"nameLocation": "976:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "968:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "967:15:3"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1002:0:3"
									},
									"scope": 631,
									"src": "947:143:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 632,
							"src": "99:994:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1060:3"
				},
				"id": 3
			},
			"contracts/RestaurantManager.sol": {
				"ast": {
					"absolutePath": "contracts/RestaurantManager.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							508
						],
						"IRestaurantManager": [
							734
						],
						"Initializable": [
							462
						],
						"MenuItem": [
							768
						],
						"Order": [
							790
						],
						"OrderStatus": [
							747
						],
						"OwnableUpgradeable": [
							194
						],
						"RestaurantManager": [
							713
						],
						"Review": [
							801
						],
						"Role": [
							740
						],
						"RoleAccess": [
							631
						]
					},
					"id": 714,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 633,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 634,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 714,
							"sourceUnit": 195,
							"src": "61:75:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "structs/FoodTypes.sol",
							"file": "../structs/FoodTypes.sol",
							"id": 635,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 714,
							"sourceUnit": 802,
							"src": "138:34:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "access/RoleAccess.sol",
							"file": "../access/RoleAccess.sol",
							"id": 636,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 714,
							"sourceUnit": 632,
							"src": "174:34:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IRestaurantManager.sol",
							"file": "../interfaces/IRestaurantManager.sol",
							"id": 637,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 714,
							"sourceUnit": 735,
							"src": "210:46:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 638,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"290:18:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "290:18:4"
									},
									"id": 639,
									"nodeType": "InheritanceSpecifier",
									"src": "290:18:4"
								},
								{
									"baseName": {
										"id": 640,
										"name": "RoleAccess",
										"nameLocations": [
											"310:10:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 631,
										"src": "310:10:4"
									},
									"id": 641,
									"nodeType": "InheritanceSpecifier",
									"src": "310:10:4"
								},
								{
									"baseName": {
										"id": 642,
										"name": "IRestaurantManager",
										"nameLocations": [
											"322:18:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 734,
										"src": "322:18:4"
									},
									"id": 643,
									"nodeType": "InheritanceSpecifier",
									"src": "322:18:4"
								}
							],
							"canonicalName": "RestaurantManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 713,
							"linearizedBaseContracts": [
								713,
								734,
								631,
								194,
								508,
								462
							],
							"name": "RestaurantManager",
							"nameLocation": "269:17:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "46bd8077",
									"id": 645,
									"mutability": "mutable",
									"name": "nextRestaurantId",
									"nameLocation": "363:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 713,
									"src": "348:31:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									},
									"typeName": {
										"id": 644,
										"name": "uint128",
										"nodeType": "ElementaryTypeName",
										"src": "348:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "abca88f0",
									"id": 649,
									"mutability": "mutable",
									"name": "restaurantOwners",
									"nameLocation": "421:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 713,
									"src": "386:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint128_$_t_address_$",
										"typeString": "mapping(uint128 => address)"
									},
									"typeName": {
										"id": 648,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 646,
											"name": "uint128",
											"nodeType": "ElementaryTypeName",
											"src": "394:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											}
										},
										"nodeType": "Mapping",
										"src": "386:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint128_$_t_address_$",
											"typeString": "mapping(uint128 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 647,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "405:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "501:106:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 657,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "527:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 656,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "512:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "512:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "512:22:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 661,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "561:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 660,
														"name": "initializeRoles",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "545:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "545:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "545:23:4"
											},
											{
												"expression": {
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 664,
														"name": "nextRestaurantId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "579:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 665,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "598:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "579:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 667,
												"nodeType": "ExpressionStatement",
												"src": "579:20:4"
											}
										]
									},
									"functionSelector": "c4d66de8",
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 654,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 653,
												"name": "initializer",
												"nameLocations": [
													"489:11:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "489:11:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "489:11:4"
										}
									],
									"name": "initialize",
									"nameLocation": "455:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "474:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "466:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "466:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "465:16:4"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "501:0:4"
									},
									"scope": 713,
									"src": "446:161:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										726
									],
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "682:233:4",
										"statements": [
											{
												"assignments": [
													677
												],
												"declarations": [
													{
														"constant": false,
														"id": 677,
														"mutability": "mutable",
														"name": "restaurantId",
														"nameLocation": "701:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 698,
														"src": "693:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 676,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "693:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 679,
												"initialValue": {
													"id": 678,
													"name": "nextRestaurantId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 645,
													"src": "716:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "693:39:4"
											},
											{
												"expression": {
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 680,
															"name": "restaurantOwners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "743:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint128_$_t_address_$",
																"typeString": "mapping(uint128 => address)"
															}
														},
														"id": 682,
														"indexExpression": {
															"id": 681,
															"name": "restaurantId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "760:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "743:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 683,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "776:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "780:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "776:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "743:43:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 686,
												"nodeType": "ExpressionStatement",
												"src": "743:43:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 688,
															"name": "restaurantId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "823:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"expression": {
																"id": 689,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "837:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "841:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "837:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 687,
														"name": "RestaurantRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "802:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint128_$_t_address_$returns$__$",
															"typeString": "function (uint128,address)"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "802:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 692,
												"nodeType": "EmitStatement",
												"src": "797:51:4"
											},
											{
												"expression": {
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "859:18:4",
													"subExpression": {
														"id": 693,
														"name": "nextRestaurantId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "859:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 695,
												"nodeType": "ExpressionStatement",
												"src": "859:18:4"
											},
											{
												"expression": {
													"id": 696,
													"name": "restaurantId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 677,
													"src": "895:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 675,
												"id": 697,
												"nodeType": "Return",
												"src": "888:19:4"
											}
										]
									},
									"functionSelector": "fa20fca7",
									"id": 699,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 672,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 671,
												"name": "onlyAdmin",
												"nameLocations": [
													"654:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 535,
												"src": "654:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "654:9:4"
										}
									],
									"name": "registerRestaurant",
									"nameLocation": "624:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "642:2:4"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "673:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 673,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:9:4"
									},
									"scope": 713,
									"src": "615:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										733
									],
									"body": {
										"id": 711,
										"nodeType": "Block",
										"src": "1014:56:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 707,
														"name": "restaurantOwners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "1032:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint128_$_t_address_$",
															"typeString": "mapping(uint128 => address)"
														}
													},
													"id": 709,
													"indexExpression": {
														"id": 708,
														"name": "restaurantId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "1049:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1032:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 706,
												"id": 710,
												"nodeType": "Return",
												"src": "1025:37:4"
											}
										]
									},
									"functionSelector": "b9588327",
									"id": 712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRestaurantOwner",
									"nameLocation": "932:18:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 703,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "987:8:4"
									},
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "restaurantId",
												"nameLocation": "959:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "951:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 700,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "950:22:4"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "1005:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1005:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1004:9:4"
									},
									"scope": 713,
									"src": "923:147:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 714,
							"src": "260:813:4",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219,
								721
							]
						}
					],
					"src": "33:1040:4"
				},
				"id": 4
			},
			"interfaces/IRestaurantManager.sol": {
				"ast": {
					"absolutePath": "interfaces/IRestaurantManager.sol",
					"exportedSymbols": {
						"IRestaurantManager": [
							734
						]
					},
					"id": 735,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 715,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRestaurantManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 734,
							"linearizedBaseContracts": [
								734
							],
							"name": "IRestaurantManager",
							"nameLocation": "71:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "bafbc0bfd4afd8a222b8cd09b01ce310b06b0beb42503ea91a76135e6a532e92",
									"id": 721,
									"name": "RestaurantRegistered",
									"nameLocation": "103:20:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"indexed": true,
												"mutability": "mutable",
												"name": "restaurantId",
												"nameLocation": "140:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "124:28:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 716,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "124:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "170:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "154:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "154:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "123:53:5"
									},
									"src": "97:80:5"
								},
								{
									"functionSelector": "fa20fca7",
									"id": 726,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerRestaurant",
									"nameLocation": "194:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "212:2:5"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "233:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 723,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "233:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "232:9:5"
									},
									"scope": 734,
									"src": "185:57:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b9588327",
									"id": 733,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRestaurantOwner",
									"nameLocation": "257:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "restaurantId",
												"nameLocation": "284:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "276:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 727,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "276:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "275:22:5"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "321:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "321:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "320:9:5"
									},
									"scope": 734,
									"src": "248:82:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 735,
							"src": "61:272:5",
							"usedErrors": [],
							"usedEvents": [
								721
							]
						}
					],
					"src": "33:300:5"
				},
				"id": 5
			},
			"structs/FoodTypes.sol": {
				"ast": {
					"absolutePath": "structs/FoodTypes.sol",
					"exportedSymbols": {
						"MenuItem": [
							768
						],
						"Order": [
							790
						],
						"OrderStatus": [
							747
						],
						"Review": [
							801
						],
						"Role": [
							740
						]
					},
					"id": 802,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 736,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"canonicalName": "Role",
							"id": 740,
							"members": [
								{
									"id": 737,
									"name": "Admin",
									"nameLocation": "73:5:6",
									"nodeType": "EnumValue",
									"src": "73:5:6"
								},
								{
									"id": 738,
									"name": "Staff",
									"nameLocation": "80:5:6",
									"nodeType": "EnumValue",
									"src": "80:5:6"
								},
								{
									"id": 739,
									"name": "Customer",
									"nameLocation": "87:8:6",
									"nodeType": "EnumValue",
									"src": "87:8:6"
								}
							],
							"name": "Role",
							"nameLocation": "66:4:6",
							"nodeType": "EnumDefinition",
							"src": "61:36:6"
						},
						{
							"canonicalName": "OrderStatus",
							"id": 747,
							"members": [
								{
									"id": 741,
									"name": "Placed",
									"nameLocation": "118:6:6",
									"nodeType": "EnumValue",
									"src": "118:6:6"
								},
								{
									"id": 742,
									"name": "Confirmed",
									"nameLocation": "126:9:6",
									"nodeType": "EnumValue",
									"src": "126:9:6"
								},
								{
									"id": 743,
									"name": "Preparing",
									"nameLocation": "137:9:6",
									"nodeType": "EnumValue",
									"src": "137:9:6"
								},
								{
									"id": 744,
									"name": "Ready",
									"nameLocation": "148:5:6",
									"nodeType": "EnumValue",
									"src": "148:5:6"
								},
								{
									"id": 745,
									"name": "Cancelled",
									"nameLocation": "155:9:6",
									"nodeType": "EnumValue",
									"src": "155:9:6"
								},
								{
									"id": 746,
									"name": "Completed",
									"nameLocation": "166:9:6",
									"nodeType": "EnumValue",
									"src": "166:9:6"
								}
							],
							"name": "OrderStatus",
							"nameLocation": "104:11:6",
							"nodeType": "EnumDefinition",
							"src": "99:78:6"
						},
						{
							"canonicalName": "MenuItem",
							"id": 768,
							"members": [
								{
									"constant": false,
									"id": 749,
									"mutability": "mutable",
									"name": "id",
									"nameLocation": "212:2:6",
									"nodeType": "VariableDeclaration",
									"scope": 768,
									"src": "204:10:6",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									},
									"typeName": {
										"id": 748,
										"name": "uint128",
										"nodeType": "ElementaryTypeName",
										"src": "204:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 751,
									"mutability": "mutable",
									"name": "restaurantId",
									"nameLocation": "229:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 768,
									"src": "221:20:6",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									},
									"typeName": {
										"id": 750,
										"name": "uint128",
										"nodeType": "ElementaryTypeName",
										"src": "221:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 753,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "255:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 768,
									"src": "248:11:6",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 752,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "248:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 755,
									"mutability": "mutable",
									"name": "price",
									"nameLocation": "274:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 768,
									"src": "266:13:6",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									},
									"typeName": {
										"id": 754,
										"name": "uint128",
										"nodeType": "ElementaryTypeName",
										"src": "266:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 757,
									"mutability": "mutable",
									"name": "available",
									"nameLocation": "291:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 768,
									"src": "286:14:6",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 756,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "286:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 759,
									"mutability": "mutable",
									"name": "description",
									"nameLocation": "314:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 768,
									"src": "307:18:6",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 758,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "307:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 761,
									"mutability": "mutable",
									"name": "category",
									"nameLocation": "339:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 768,
									"src": "332:15:6",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 760,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "332:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 763,
									"mutability": "mutable",
									"name": "totalRating",
									"nameLocation": "362:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 768,
									"src": "354:19:6",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									},
									"typeName": {
										"id": 762,
										"name": "uint128",
										"nodeType": "ElementaryTypeName",
										"src": "354:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 765,
									"mutability": "mutable",
									"name": "ratingCount",
									"nameLocation": "388:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 768,
									"src": "380:19:6",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									},
									"typeName": {
										"id": 764,
										"name": "uint128",
										"nodeType": "ElementaryTypeName",
										"src": "380:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 767,
									"mutability": "mutable",
									"name": "preparationTime",
									"nameLocation": "414:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 768,
									"src": "406:23:6",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									},
									"typeName": {
										"id": 766,
										"name": "uint128",
										"nodeType": "ElementaryTypeName",
										"src": "406:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "MenuItem",
							"nameLocation": "188:8:6",
							"nodeType": "StructDefinition",
							"scope": 802,
							"src": "181:252:6",
							"visibility": "public"
						},
						{
							"canonicalName": "Order",
							"id": 790,
							"members": [
								{
									"constant": false,
									"id": 770,
									"mutability": "mutable",
									"name": "id",
									"nameLocation": "465:2:6",
									"nodeType": "VariableDeclaration",
									"scope": 790,
									"src": "457:10:6",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									},
									"typeName": {
										"id": 769,
										"name": "uint128",
										"nodeType": "ElementaryTypeName",
										"src": "457:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 772,
									"mutability": "mutable",
									"name": "customer",
									"nameLocation": "482:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 790,
									"src": "474:16:6",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 771,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "474:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 774,
									"mutability": "mutable",
									"name": "restaurantId",
									"nameLocation": "505:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 790,
									"src": "497:20:6",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									},
									"typeName": {
										"id": 773,
										"name": "uint128",
										"nodeType": "ElementaryTypeName",
										"src": "497:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 777,
									"mutability": "mutable",
									"name": "itemIds",
									"nameLocation": "534:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 790,
									"src": "524:17:6",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint128_$dyn_storage_ptr",
										"typeString": "uint128[]"
									},
									"typeName": {
										"baseType": {
											"id": 775,
											"name": "uint128",
											"nodeType": "ElementaryTypeName",
											"src": "524:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											}
										},
										"id": 776,
										"nodeType": "ArrayTypeName",
										"src": "524:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint128_$dyn_storage_ptr",
											"typeString": "uint128[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 780,
									"mutability": "mutable",
									"name": "quantities",
									"nameLocation": "558:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 790,
									"src": "548:20:6",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint128_$dyn_storage_ptr",
										"typeString": "uint128[]"
									},
									"typeName": {
										"baseType": {
											"id": 778,
											"name": "uint128",
											"nodeType": "ElementaryTypeName",
											"src": "548:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											}
										},
										"id": 779,
										"nodeType": "ArrayTypeName",
										"src": "548:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint128_$dyn_storage_ptr",
											"typeString": "uint128[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 782,
									"mutability": "mutable",
									"name": "totalPrice",
									"nameLocation": "583:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 790,
									"src": "575:18:6",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									},
									"typeName": {
										"id": 781,
										"name": "uint128",
										"nodeType": "ElementaryTypeName",
										"src": "575:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 785,
									"mutability": "mutable",
									"name": "status",
									"nameLocation": "612:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 790,
									"src": "600:18:6",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_OrderStatus_$747",
										"typeString": "enum OrderStatus"
									},
									"typeName": {
										"id": 784,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 783,
											"name": "OrderStatus",
											"nameLocations": [
												"600:11:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 747,
											"src": "600:11:6"
										},
										"referencedDeclaration": 747,
										"src": "600:11:6",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_OrderStatus_$747",
											"typeString": "enum OrderStatus"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 787,
									"mutability": "mutable",
									"name": "timestamp",
									"nameLocation": "633:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 790,
									"src": "625:17:6",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									},
									"typeName": {
										"id": 786,
										"name": "uint128",
										"nodeType": "ElementaryTypeName",
										"src": "625:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 789,
									"mutability": "mutable",
									"name": "preparationTime",
									"nameLocation": "657:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 790,
									"src": "649:23:6",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									},
									"typeName": {
										"id": 788,
										"name": "uint128",
										"nodeType": "ElementaryTypeName",
										"src": "649:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Order",
							"nameLocation": "444:5:6",
							"nodeType": "StructDefinition",
							"scope": 802,
							"src": "437:239:6",
							"visibility": "public"
						},
						{
							"canonicalName": "Review",
							"id": 801,
							"members": [
								{
									"constant": false,
									"id": 792,
									"mutability": "mutable",
									"name": "customer",
									"nameLocation": "709:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 801,
									"src": "701:16:6",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 791,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "701:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 794,
									"mutability": "mutable",
									"name": "restaurantId",
									"nameLocation": "732:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 801,
									"src": "724:20:6",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									},
									"typeName": {
										"id": 793,
										"name": "uint128",
										"nodeType": "ElementaryTypeName",
										"src": "724:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 796,
									"mutability": "mutable",
									"name": "rating",
									"nameLocation": "757:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 801,
									"src": "751:12:6",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 795,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "751:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 798,
									"mutability": "mutable",
									"name": "comment",
									"nameLocation": "777:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 801,
									"src": "770:14:6",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 797,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "770:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 800,
									"mutability": "mutable",
									"name": "timestamp",
									"nameLocation": "799:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 801,
									"src": "791:17:6",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									},
									"typeName": {
										"id": 799,
										"name": "uint128",
										"nodeType": "ElementaryTypeName",
										"src": "791:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Review",
							"nameLocation": "687:6:6",
							"nodeType": "StructDefinition",
							"scope": 802,
							"src": "680:132:6",
							"visibility": "public"
						}
					],
					"src": "33:779:6"
				},
				"id": 6
			}
		}
	}
}